{"version":3,"sources":["webpack:///./node_modules/ng2-search-filter/ng2-search-filter.es5.js","webpack:///./node_modules/ngx-order-pipe/fesm5/ngx-order-pipe.js","webpack:///./node_modules/ngx-pagination/dist/ngx-pagination.js","webpack:///./src/app/dashboard/admin/appLogs/app-logs.component.html","webpack:///./src/app/dashboard/admin/appLogs/app-logs.component.ts","webpack:///./src/app/dashboard/admin/appLogs/app-logs.service.ts","webpack:///./src/app/dashboard/admin/auditTrail/audit-trail.component.html","webpack:///./src/app/dashboard/admin/auditTrail/audit-trail.component.ts","webpack:///./src/app/dashboard/admin/auditTrail/audit-trail.service.ts","webpack:///./src/app/dashboard/admin/devices/devices.component.html","webpack:///./src/app/dashboard/admin/devices/devices.component.ts","webpack:///./src/app/dashboard/admin/devices/devices.service.ts","webpack:///./src/app/dashboard/admin/group/group.component.html","webpack:///./src/app/dashboard/admin/group/group.component.ts","webpack:///./src/app/dashboard/admin/group/group.service.ts","webpack:///./src/app/dashboard/admin/member/member.component.html","webpack:///./src/app/dashboard/admin/member/member.component.ts","webpack:///./src/app/dashboard/admin/member/member.service.ts","webpack:///./src/app/dashboard/admin/permission/permission.component.html","webpack:///./src/app/dashboard/admin/permission/permission.component.ts","webpack:///./src/app/dashboard/admin/permission/permission.service.ts","webpack:///./src/app/dashboard/admin/room/room.component.html","webpack:///./src/app/dashboard/admin/room/room.component.ts","webpack:///./src/app/dashboard/admin/room/room.service.ts","webpack:///./src/app/dashboard/admin/roomAccess/room-access.component.html","webpack:///./src/app/dashboard/admin/roomAccess/room-access.component.ts","webpack:///./src/app/dashboard/admin/roomAccess/room-access.service.ts","webpack:///./src/app/dashboard/admin/roomStatus/room-status.component.css","webpack:///./src/app/dashboard/admin/roomStatus/room-status.component.html","webpack:///./src/app/dashboard/admin/roomStatus/room-status.component.ts","webpack:///./src/app/dashboard/admin/roomStatus/room-status.service.ts","webpack:///./src/app/dashboard/admin/users/users.component.html","webpack:///./src/app/dashboard/admin/users/users.component.ts","webpack:///./src/app/dashboard/admin/users/users.service.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/dashboard/dashboard.module.ts","webpack:///./src/app/dashboard/dashboard.routes.ts","webpack:///./src/app/dashboard/dashboard.service.ts","webpack:///./src/app/dashboard/user/auditTrail/audit-trail.component.html","webpack:///./src/app/dashboard/user/auditTrail/audit-trail.component.ts","webpack:///./src/app/dashboard/user/auditTrail/audit-trail.service.ts","webpack:///./src/app/dashboard/user/group/group.component.html","webpack:///./src/app/dashboard/user/group/group.component.ts","webpack:///./src/app/dashboard/user/group/group.service.ts","webpack:///./src/app/dashboard/user/member/member.component.html","webpack:///./src/app/dashboard/user/member/member.component.ts","webpack:///./src/app/dashboard/user/member/member.service.ts","webpack:///./src/app/dashboard/user/permission/permission.component.html","webpack:///./src/app/dashboard/user/permission/permission.component.ts","webpack:///./src/app/dashboard/user/permission/permission.service.ts","webpack:///./src/app/dashboard/user/room/room.component.html","webpack:///./src/app/dashboard/user/room/room.component.ts","webpack:///./src/app/dashboard/user/room/room.service.ts","webpack:///./src/app/dashboard/user/roomAccess/room-access.component.html","webpack:///./src/app/dashboard/user/roomAccess/room-access.component.ts","webpack:///./src/app/dashboard/user/roomAccess/room-access.service.ts","webpack:///./src/app/dashboard/user/roomStatus/room-status.component.html","webpack:///./src/app/dashboard/user/roomStatus/room-status.component.ts","webpack:///./src/app/dashboard/user/roomStatus/room-status.service.ts","webpack:///./src/app/dashboard/user/users/users.component.html","webpack:///./src/app/dashboard/user/users/users.component.ts","webpack:///./src/app/dashboard/user/users/users.service.ts","webpack:///./src/app/error-handler.service.ts","webpack:///./src/app/route-guard.ts","webpack:///./src/app/share/content-header/content-header.component.html","webpack:///./src/app/share/content-header/content-header.component.ts","webpack:///./src/app/share/content-header/content-header.module.ts","webpack:///./src/app/share/content-header/content-header.service.ts","webpack:///./src/app/share/footer/footer.component.html","webpack:///./src/app/share/footer/footer.component.ts","webpack:///./src/app/share/footer/footer.module.ts","webpack:///./src/app/share/navbar/navbar.component.html","webpack:///./src/app/share/navbar/navbar.component.ts","webpack:///./src/app/share/navbar/navbar.module.ts","webpack:///./src/app/share/navbar/navbar.service.ts","webpack:///./src/app/share/sidebar-header/sidebar-header.component.html","webpack:///./src/app/share/sidebar-header/sidebar-header.component.ts","webpack:///./src/app/share/sidebar-header/sidebar-header.module.ts","webpack:///./src/app/share/sidebar-header/sidebar-header.service.ts","webpack:///./src/app/share/table-header/table-header.component.html","webpack:///./src/app/share/table-header/table-header.component.ts","webpack:///./src/app/share/table-header/table-header.module.ts","webpack:///./src/app/sidebar/sidebar.component.html","webpack:///./src/app/sidebar/sidebar.component.ts","webpack:///./src/app/sidebar/sidebar.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAA2D;AAC3D;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,KAAK,OAAO,kDAAI;AAChB;AACA;AACA,aAAa,IAAI;AACjB,KAAK,OAAO,wDAAU,EAAE;AACxB;AACA;AACA;AACA;AACA,4CAA4C,WAAW;AACvD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA,kDAAkD,WAAW;AAC7D;AACA;AACA;AAC8C;AAC9C;;;;;;;;;;;;;ACnEA;AAAA;AAAA;AAAA;AAAA;AAAmC;AACY;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,2BAA2B;AAC9C;AACA;AACA;AACA;AACA;AACA,2CAA2C,2BAA2B;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,eAAe,SAAS;AACxB,iBAAiB;AACjB;AACA;AACA;AACA,2CAA2C,2BAA2B;AACtE;AACA;AACA,SAAS;AACT;AACA;AACA,8BAA8B,wDAAU;AACxC,QAAQ,0DAAI;AACZ;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,kBAAkB,wDAAU;AAC5B,QAAQ,8DAAQ;AAChB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;;AAEiC;AAClC;;;;;;;;;;;;;ACzNA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiK;AAClH;;AAE/C;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA,yDAAyD,wBAAwB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,0BAA0B,EAAE;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,8CAA8C,EAAE;AAC5G;AACA;AACA,SAAS,OAAO,kDAAI;AACpB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,+CAA+C;AAC/C,SAAS,2BAA2B;AACpC,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,yvBAAyvB,iBAAiB,+BAA+B,yBAAyB,2FAA2F,iBAAiB,+BAA+B,yBAAyB,mGAAmG,kBAAkB,KAAK,mBAAmB,6XAA6X,yBAAyB,kCAAkC,cAAc,6IAA6I,4BAA4B,kCAAkC,cAAc,wVAAwV,aAAa,+BAA+B,yBAAyB,2FAA2F,aAAa,+BAA+B,yBAAyB;AAC/0E,yCAAyC,mBAAmB,wBAAwB,EAAE,qDAAqD,mBAAmB,qBAAqB,EAAE,4BAA4B,kBAAkB,EAAE,wBAAwB,6BAA6B,gCAAgC,4BAA4B,8BAA8B,uBAAuB,EAAE,wBAAwB,4BAA4B,EAAE,kDAAkD,qBAAqB,sBAAsB,kCAAkC,uBAAuB,EAAE,kEAAkE,4BAA4B,EAAE,8BAA8B,kCAAkC,0BAA0B,qBAAqB,sBAAsB,EAAE,+BAA+B,kCAAkC,qBAAqB,sBAAsB,EAAE,wCAAwC,gCAAgC,EAAE,+CAA+C,sBAAsB,EAAE,4GAA4G,uBAAuB,0BAA0B,yBAAyB,EAAE,kGAAkG,sBAAsB,0BAA0B,wBAAwB,EAAE,kCAAkC,kCAAkC,eAAe,gBAAgB,qBAAqB,2BAA2B,EAAE,iCAAiC,kBAAkB,EAAE,wCAAwC,8CAA8C,4BAA4B,EAAE,uGAAuG,oBAAoB,EAAE,GAAG;;AAEn2D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,qCAAqC,qEAAuB;AAC5D,mCAAmC,+DAAiB;AACpD,iBAAiB,IAAI;AACrB;AACA;AACA,8DAA8D,WAAW;AACzE;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,qBAAqB,OAAO,mDAAK,EAAE;AACnC,4BAA4B,OAAO,mDAAK,EAAE;AAC1C,sBAAsB,OAAO,mDAAK,EAAE;AACpC,wBAAwB,OAAO,mDAAK,EAAE;AACtC,2BAA2B,OAAO,mDAAK,EAAE;AACzC,uBAAuB,OAAO,mDAAK,EAAE;AACrC,yCAAyC,OAAO,mDAAK,EAAE;AACvD,mCAAmC,OAAO,mDAAK,EAAE;AACjD,sCAAsC,OAAO,mDAAK,EAAE;AACpD,wBAAwB,OAAO,oDAAM,EAAE;AACvC;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,8DAA8D;AAC9D,SAAS,2BAA2B;AACpC,SAAS,OAAO,+DAAiB,GAAG;AACpC,MAAM;AACN;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,qBAAqB,OAAO,mDAAK,EAAE;AACnC,wBAAwB,OAAO,oDAAM,EAAE;AACvC;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB,8BAA8B,4DAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AA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","file":"dashboard-dashboard-module.js","sourcesContent":["import { Injectable, NgModule, Pipe } from '@angular/core';\nvar Ng2SearchPipe = /** @class */ (function () {\n    function Ng2SearchPipe() {\n    }\n    /**\n     * @param {?} items object from array\n     * @param {?} term term's search\n     * @return {?}\n     */\n    Ng2SearchPipe.prototype.transform = function (items, term) {\n        if (!term || !items)\n            return items;\n        return Ng2SearchPipe.filter(items, term);\n    };\n    /**\n     *\n     * @param {?} items List of items to filter\n     * @param {?} term  a string term to compare with every property of the list\n     *\n     * @return {?}\n     */\n    Ng2SearchPipe.filter = function (items, term) {\n        var /** @type {?} */ toCompare = term.toLowerCase();\n        return items.filter(function (item) {\n            for (var /** @type {?} */ property in item) {\n                if (item[property] === null) {\n                    continue;\n                }\n                if (item[property].toString().toLowerCase().includes(toCompare)) {\n                    return true;\n                }\n            }\n            return false;\n        });\n    };\n    return Ng2SearchPipe;\n}());\nNg2SearchPipe.decorators = [\n    { type: Pipe, args: [{\n                name: 'filter',\n                pure: false\n            },] },\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nNg2SearchPipe.ctorParameters = function () { return []; };\nvar Ng2SearchPipeModule = /** @class */ (function () {\n    function Ng2SearchPipeModule() {\n    }\n    return Ng2SearchPipeModule;\n}());\nNg2SearchPipeModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [Ng2SearchPipe],\n                exports: [Ng2SearchPipe]\n            },] },\n];\n/**\n * @nocollapse\n */\nNg2SearchPipeModule.ctorParameters = function () { return []; };\n/**\n * Generated bundle index. Do not edit.\n */\nexport { Ng2SearchPipeModule, Ng2SearchPipe };\n//# sourceMappingURL=ng2-search-filter.es5.js.map\n","import { __decorate } from 'tslib';\nimport { Pipe, NgModule } from '@angular/core';\n\nvar OrderPipe = /** @class */ (function () {\n    function OrderPipe() {\n    }\n    OrderPipe_1 = OrderPipe;\n    /**\n     * Check if a value is a string\n     *\n     * @param value\n     */\n    OrderPipe.isString = function (value) {\n        return typeof value === \"string\" || value instanceof String;\n    };\n    /**\n     * Sorts values ignoring the case\n     *\n     * @param a\n     * @param b\n     */\n    OrderPipe.caseInsensitiveSort = function (a, b) {\n        if (OrderPipe_1.isString(a) && OrderPipe_1.isString(b)) {\n            return a.localeCompare(b);\n        }\n        return OrderPipe_1.defaultCompare(a, b);\n    };\n    /**\n     * Default compare method\n     *\n     * @param a\n     * @param b\n     */\n    OrderPipe.defaultCompare = function (a, b) {\n        if (a === b) {\n            return 0;\n        }\n        if (a == null) {\n            return 1;\n        }\n        if (b == null) {\n            return -1;\n        }\n        return a > b ? 1 : -1;\n    };\n    /**\n     * Parse expression, split into items\n     * @param expression\n     * @returns {string[]}\n     */\n    OrderPipe.parseExpression = function (expression) {\n        expression = expression.replace(/\\[(\\w+)\\]/g, \".$1\");\n        expression = expression.replace(/^\\./, \"\");\n        return expression.split(\".\");\n    };\n    /**\n     * Get value by expression\n     *\n     * @param object\n     * @param expression\n     * @returns {any}\n     */\n    OrderPipe.getValue = function (object, expression) {\n        for (var i = 0, n = expression.length; i < n; ++i) {\n            if (!object) {\n                return;\n            }\n            var k = expression[i];\n            if (!(k in object)) {\n                return;\n            }\n            if (typeof object[k] === \"function\") {\n                object = object[k]();\n            }\n            else {\n                object = object[k];\n            }\n        }\n        return object;\n    };\n    /**\n     * Set value by expression\n     *\n     * @param object\n     * @param value\n     * @param expression\n     */\n    OrderPipe.setValue = function (object, value, expression) {\n        var i;\n        for (i = 0; i < expression.length - 1; i++) {\n            object = object[expression[i]];\n        }\n        object[expression[i]] = value;\n    };\n    OrderPipe.prototype.transform = function (value, expression, reverse, isCaseInsensitive, comparator) {\n        if (isCaseInsensitive === void 0) { isCaseInsensitive = false; }\n        if (!value) {\n            return value;\n        }\n        if (Array.isArray(expression)) {\n            return this.multiExpressionTransform(value, expression, reverse, isCaseInsensitive, comparator);\n        }\n        if (Array.isArray(value)) {\n            return this.sortArray(value.slice(), expression, reverse, isCaseInsensitive, comparator);\n        }\n        if (typeof value === \"object\") {\n            return this.transformObject(Object.assign({}, value), expression, reverse, isCaseInsensitive, comparator);\n        }\n        return value;\n    };\n    /**\n     * Sort array\n     *\n     * @param value\n     * @param expression\n     * @param reverse\n     * @param isCaseInsensitive\n     * @param comparator\n     * @returns {any[]}\n     */\n    OrderPipe.prototype.sortArray = function (value, expression, reverse, isCaseInsensitive, comparator) {\n        var isDeepLink = expression && expression.indexOf(\".\") !== -1;\n        if (isDeepLink) {\n            expression = OrderPipe_1.parseExpression(expression);\n        }\n        var compareFn;\n        if (comparator && typeof comparator === \"function\") {\n            compareFn = comparator;\n        }\n        else {\n            compareFn = isCaseInsensitive\n                ? OrderPipe_1.caseInsensitiveSort\n                : OrderPipe_1.defaultCompare;\n        }\n        var array = value.sort(function (a, b) {\n            if (!expression) {\n                return compareFn(a, b);\n            }\n            if (!isDeepLink) {\n                if (a && b) {\n                    return compareFn(a[expression], b[expression]);\n                }\n                return compareFn(a, b);\n            }\n            return compareFn(OrderPipe_1.getValue(a, expression), OrderPipe_1.getValue(b, expression));\n        });\n        if (reverse) {\n            return array.reverse();\n        }\n        return array;\n    };\n    /**\n     * Transform Object\n     *\n     * @param value\n     * @param expression\n     * @param reverse\n     * @param isCaseInsensitive\n     * @param comparator\n     * @returns {any[]}\n     */\n    OrderPipe.prototype.transformObject = function (value, expression, reverse, isCaseInsensitive, comparator) {\n        var parsedExpression = OrderPipe_1.parseExpression(expression);\n        var lastPredicate = parsedExpression.pop();\n        var oldValue = OrderPipe_1.getValue(value, parsedExpression);\n        if (!Array.isArray(oldValue)) {\n            parsedExpression.push(lastPredicate);\n            lastPredicate = null;\n            oldValue = OrderPipe_1.getValue(value, parsedExpression);\n        }\n        if (!oldValue) {\n            return value;\n        }\n        OrderPipe_1.setValue(value, this.transform(oldValue, lastPredicate, reverse, isCaseInsensitive), parsedExpression);\n        return value;\n    };\n    /**\n     * Apply multiple expressions\n     *\n     * @param value\n     * @param {any[]} expressions\n     * @param {boolean} reverse\n     * @param {boolean} isCaseInsensitive\n     * @param {Function} comparator\n     * @returns {any}\n     */\n    OrderPipe.prototype.multiExpressionTransform = function (value, expressions, reverse, isCaseInsensitive, comparator) {\n        var _this = this;\n        if (isCaseInsensitive === void 0) { isCaseInsensitive = false; }\n        return expressions.reverse().reduce(function (result, expression) {\n            return _this.transform(result, expression, reverse, isCaseInsensitive, comparator);\n        }, value);\n    };\n    var OrderPipe_1;\n    OrderPipe = OrderPipe_1 = __decorate([\n        Pipe({\n            name: \"orderBy\",\n            pure: false\n        })\n    ], OrderPipe);\n    return OrderPipe;\n}());\n\nvar OrderModule = /** @class */ (function () {\n    function OrderModule() {\n    }\n    OrderModule = __decorate([\n        NgModule({\n            declarations: [OrderPipe],\n            exports: [OrderPipe],\n            providers: [OrderPipe]\n        })\n    ], OrderModule);\n    return OrderModule;\n}());\n\nexport { OrderModule, OrderPipe };\n//# sourceMappingURL=ngx-order-pipe.js.map\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Directive, EventEmitter, Input, NgModule, Output, Pipe, ViewEncapsulation } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nvar PaginationService = (function () {\r\n    function PaginationService() {\r\n        this.change = new EventEmitter();\r\n        this.instances = {};\r\n        this.DEFAULT_ID = 'DEFAULT_PAGINATION_ID';\r\n    }\r\n    PaginationService.prototype.defaultId = function () { return this.DEFAULT_ID; };\r\n    PaginationService.prototype.register = function (instance) {\r\n        if (instance.id == null) {\r\n            instance.id = this.DEFAULT_ID;\r\n        }\r\n        if (!this.instances[instance.id]) {\r\n            this.instances[instance.id] = instance;\r\n            this.change.emit(instance.id);\r\n        }\r\n        else {\r\n            var changed = this.updateInstance(instance);\r\n            if (changed) {\r\n                this.change.emit(instance.id);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Check each property of the instance and update any that have changed. Return\r\n     * true if any changes were made, else return false.\r\n     */\r\n    PaginationService.prototype.updateInstance = function (instance) {\r\n        var changed = false;\r\n        for (var prop in this.instances[instance.id]) {\r\n            if (instance[prop] !== this.instances[instance.id][prop]) {\r\n                this.instances[instance.id][prop] = instance[prop];\r\n                changed = true;\r\n            }\r\n        }\r\n        return changed;\r\n    };\r\n    /**\r\n     * Returns the current page number.\r\n     */\r\n    PaginationService.prototype.getCurrentPage = function (id) {\r\n        if (this.instances[id]) {\r\n            return this.instances[id].currentPage;\r\n        }\r\n    };\r\n    /**\r\n     * Sets the current page number.\r\n     */\r\n    PaginationService.prototype.setCurrentPage = function (id, page) {\r\n        if (this.instances[id]) {\r\n            var instance = this.instances[id];\r\n            var maxPage = Math.ceil(instance.totalItems / instance.itemsPerPage);\r\n            if (page <= maxPage && 1 <= page) {\r\n                this.instances[id].currentPage = page;\r\n                this.change.emit(id);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets the value of instance.totalItems\r\n     */\r\n    PaginationService.prototype.setTotalItems = function (id, totalItems) {\r\n        if (this.instances[id] && 0 <= totalItems) {\r\n            this.instances[id].totalItems = totalItems;\r\n            this.change.emit(id);\r\n        }\r\n    };\r\n    /**\r\n     * Sets the value of instance.itemsPerPage.\r\n     */\r\n    PaginationService.prototype.setItemsPerPage = function (id, itemsPerPage) {\r\n        if (this.instances[id]) {\r\n            this.instances[id].itemsPerPage = itemsPerPage;\r\n            this.change.emit(id);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a clone of the pagination instance object matching the id. If no\r\n     * id specified, returns the instance corresponding to the default id.\r\n     */\r\n    PaginationService.prototype.getInstance = function (id) {\r\n        if (id === void 0) { id = this.DEFAULT_ID; }\r\n        if (this.instances[id]) {\r\n            return this.clone(this.instances[id]);\r\n        }\r\n        return {};\r\n    };\r\n    /**\r\n     * Perform a shallow clone of an object.\r\n     */\r\n    PaginationService.prototype.clone = function (obj) {\r\n        var target = {};\r\n        for (var i in obj) {\r\n            if (obj.hasOwnProperty(i)) {\r\n                target[i] = obj[i];\r\n            }\r\n        }\r\n        return target;\r\n    };\r\n    return PaginationService;\r\n}());\n\nvar LARGE_NUMBER = Number.MAX_SAFE_INTEGER;\r\nvar PaginatePipe = (function () {\r\n    function PaginatePipe(service) {\r\n        this.service = service;\r\n        // store the values from the last time the pipe was invoked\r\n        this.state = {};\r\n    }\r\n    PaginatePipe.prototype.transform = function (collection, args) {\r\n        // When an observable is passed through the AsyncPipe, it will output\r\n        // `null` until the subscription resolves. In this case, we want to\r\n        // use the cached data from the `state` object to prevent the NgFor\r\n        // from flashing empty until the real values arrive.\r\n        if (!(collection instanceof Array)) {\r\n            var _id = args.id || this.service.defaultId();\r\n            if (this.state[_id]) {\r\n                return this.state[_id].slice;\r\n            }\r\n            else {\r\n                return collection;\r\n            }\r\n        }\r\n        var serverSideMode = args.totalItems && args.totalItems !== collection.length;\r\n        var instance = this.createInstance(collection, args);\r\n        var id = instance.id;\r\n        var start, end;\r\n        var perPage = instance.itemsPerPage;\r\n        this.service.register(instance);\r\n        if (!serverSideMode && collection instanceof Array) {\r\n            perPage = +perPage || LARGE_NUMBER;\r\n            start = (instance.currentPage - 1) * perPage;\r\n            end = start + perPage;\r\n            var isIdentical = this.stateIsIdentical(id, collection, start, end);\r\n            if (isIdentical) {\r\n                return this.state[id].slice;\r\n            }\r\n            else {\r\n                var slice = collection.slice(start, end);\r\n                this.saveState(id, collection, slice, start, end);\r\n                this.service.change.emit(id);\r\n                return slice;\r\n            }\r\n        }\r\n        // save the state for server-side collection to avoid null\r\n        // flash as new data loads.\r\n        this.saveState(id, collection, collection, start, end);\r\n        return collection;\r\n    };\r\n    /**\r\n     * Create an PaginationInstance object, using defaults for any optional properties not supplied.\r\n     */\r\n    PaginatePipe.prototype.createInstance = function (collection, config) {\r\n        this.checkConfig(config);\r\n        return {\r\n            id: config.id != null ? config.id : this.service.defaultId(),\r\n            itemsPerPage: +config.itemsPerPage || 0,\r\n            currentPage: +config.currentPage || 1,\r\n            totalItems: +config.totalItems || collection.length\r\n        };\r\n    };\r\n    /**\r\n     * Ensure the argument passed to the filter contains the required properties.\r\n     */\r\n    PaginatePipe.prototype.checkConfig = function (config) {\r\n        var required = ['itemsPerPage', 'currentPage'];\r\n        var missing = required.filter(function (prop) { return !(prop in config); });\r\n        if (0 < missing.length) {\r\n            throw new Error(\"PaginatePipe: Argument is missing the following required properties: \" + missing.join(', '));\r\n        }\r\n    };\r\n    /**\r\n     * To avoid returning a brand new array each time the pipe is run, we store the state of the sliced\r\n     * array for a given id. This means that the next time the pipe is run on this collection & id, we just\r\n     * need to check that the collection, start and end points are all identical, and if so, return the\r\n     * last sliced array.\r\n     */\r\n    PaginatePipe.prototype.saveState = function (id, collection, slice, start, end) {\r\n        this.state[id] = {\r\n            collection: collection,\r\n            size: collection.length,\r\n            slice: slice,\r\n            start: start,\r\n            end: end\r\n        };\r\n    };\r\n    /**\r\n     * For a given id, returns true if the collection, size, start and end values are identical.\r\n     */\r\n    PaginatePipe.prototype.stateIsIdentical = function (id, collection, start, end) {\r\n        var state = this.state[id];\r\n        if (!state) {\r\n            return false;\r\n        }\r\n        var isMetaDataIdentical = state.size === collection.length &&\r\n            state.start === start &&\r\n            state.end === end;\r\n        if (!isMetaDataIdentical) {\r\n            return false;\r\n        }\r\n        return state.slice.every(function (element, index) { return element === collection[start + index]; });\r\n    };\r\n    PaginatePipe.decorators = [\r\n        { type: Pipe, args: [{\r\n                    name: 'paginate',\r\n                    pure: false\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    PaginatePipe.ctorParameters = function () { return [\r\n        { type: PaginationService, },\r\n    ]; };\r\n    return PaginatePipe;\r\n}());\n\n/**\r\n * The default template and styles for the pagination links are borrowed directly\r\n * from Zurb Foundation 6: http://foundation.zurb.com/sites/docs/pagination.html\r\n */\r\nvar DEFAULT_TEMPLATE = \"\\n    <pagination-template  #p=\\\"paginationApi\\\"\\n                         [id]=\\\"id\\\"\\n                         [maxSize]=\\\"maxSize\\\"\\n                         (pageChange)=\\\"pageChange.emit($event)\\\">\\n    <ul class=\\\"ngx-pagination\\\" \\n        role=\\\"navigation\\\" \\n        [attr.aria-label]=\\\"screenReaderPaginationLabel\\\" \\n        [class.responsive]=\\\"responsive\\\"\\n        *ngIf=\\\"!(autoHide && p.pages.length <= 1)\\\">\\n\\n        <li class=\\\"pagination-previous\\\" [class.disabled]=\\\"p.isFirstPage()\\\" *ngIf=\\\"directionLinks\\\"> \\n            <a tabindex=\\\"0\\\" *ngIf=\\\"1 < p.getCurrent()\\\" (keyup.enter)=\\\"p.previous()\\\" (click)=\\\"p.previous()\\\" [attr.aria-label]=\\\"previousLabel + ' ' + screenReaderPageLabel\\\">\\n                {{ previousLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </a>\\n            <span *ngIf=\\\"p.isFirstPage()\\\">\\n                {{ previousLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </span>\\n        </li> \\n\\n        <li class=\\\"small-screen\\\">\\n            {{ p.getCurrent() }} / {{ p.getLastPage() }}\\n        </li>\\n\\n        <li [class.current]=\\\"p.getCurrent() === page.value\\\" \\n            [class.ellipsis]=\\\"page.label === '...'\\\"\\n            *ngFor=\\\"let page of p.pages\\\">\\n            <a tabindex=\\\"0\\\" (keyup.enter)=\\\"p.setCurrent(page.value)\\\" (click)=\\\"p.setCurrent(page.value)\\\" *ngIf=\\\"p.getCurrent() !== page.value\\\">\\n                <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }} </span>\\n                <span>{{ page.label }}</span>\\n            </a>\\n            <ng-container *ngIf=\\\"p.getCurrent() === page.value\\\">\\n                <span class=\\\"show-for-sr\\\">{{ screenReaderCurrentLabel }} </span>\\n                <span>{{ page.label }}</span> \\n            </ng-container>\\n        </li>\\n\\n        <li class=\\\"pagination-next\\\" [class.disabled]=\\\"p.isLastPage()\\\" *ngIf=\\\"directionLinks\\\">\\n            <a tabindex=\\\"0\\\" *ngIf=\\\"!p.isLastPage()\\\" (keyup.enter)=\\\"p.next()\\\" (click)=\\\"p.next()\\\" [attr.aria-label]=\\\"nextLabel + ' ' + screenReaderPageLabel\\\">\\n                 {{ nextLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </a>\\n            <span *ngIf=\\\"p.isLastPage()\\\">\\n                 {{ nextLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </span>\\n        </li>\\n\\n    </ul>\\n    </pagination-template>\\n    \";\r\nvar DEFAULT_STYLES = \"\\n.ngx-pagination {\\n  margin-left: 0;\\n  margin-bottom: 1rem; }\\n  .ngx-pagination::before, .ngx-pagination::after {\\n    content: ' ';\\n    display: table; }\\n  .ngx-pagination::after {\\n    clear: both; }\\n  .ngx-pagination li {\\n    -moz-user-select: none;\\n    -webkit-user-select: none;\\n    -ms-user-select: none;\\n    margin-right: 0.0625rem;\\n    border-radius: 0; }\\n  .ngx-pagination li {\\n    display: inline-block; }\\n  .ngx-pagination a,\\n  .ngx-pagination button {\\n    color: #0a0a0a; \\n    display: block;\\n    padding: 0.1875rem 0.625rem;\\n    border-radius: 0; }\\n    .ngx-pagination a:hover,\\n    .ngx-pagination button:hover {\\n      background: #e6e6e6; }\\n  .ngx-pagination .current {\\n    padding: 0.1875rem 0.625rem;\\n    background: #2199e8;\\n    color: #fefefe;\\n    cursor: default; }\\n  .ngx-pagination .disabled {\\n    padding: 0.1875rem 0.625rem;\\n    color: #cacaca;\\n    cursor: default; } \\n    .ngx-pagination .disabled:hover {\\n      background: transparent; }\\n  .ngx-pagination a, .ngx-pagination button {\\n    cursor: pointer; }\\n\\n.ngx-pagination .pagination-previous a::before,\\n.ngx-pagination .pagination-previous.disabled::before { \\n  content: '\\u00AB';\\n  display: inline-block;\\n  margin-right: 0.5rem; }\\n\\n.ngx-pagination .pagination-next a::after,\\n.ngx-pagination .pagination-next.disabled::after {\\n  content: '\\u00BB';\\n  display: inline-block;\\n  margin-left: 0.5rem; }\\n\\n.ngx-pagination .show-for-sr {\\n  position: absolute !important;\\n  width: 1px;\\n  height: 1px;\\n  overflow: hidden;\\n  clip: rect(0, 0, 0, 0); }\\n.ngx-pagination .small-screen {\\n  display: none; }\\n@media screen and (max-width: 601px) {\\n  .ngx-pagination.responsive .small-screen {\\n    display: inline-block; } \\n  .ngx-pagination.responsive li:not(.small-screen):not(.pagination-previous):not(.pagination-next) {\\n    display: none; }\\n}\\n  \";\n\nfunction coerceToBoolean(input) {\r\n    return !!input && input !== 'false';\r\n}\r\n/**\r\n * The default pagination controls component. Actually just a default implementation of a custom template.\r\n */\r\nvar PaginationControlsComponent = (function () {\r\n    function PaginationControlsComponent() {\r\n        this.maxSize = 7;\r\n        this.previousLabel = 'Previous';\r\n        this.nextLabel = 'Next';\r\n        this.screenReaderPaginationLabel = 'Pagination';\r\n        this.screenReaderPageLabel = 'page';\r\n        this.screenReaderCurrentLabel = \"You're on page\";\r\n        this.pageChange = new EventEmitter();\r\n        this._directionLinks = true;\r\n        this._autoHide = false;\r\n        this._responsive = false;\r\n    }\r\n    Object.defineProperty(PaginationControlsComponent.prototype, \"directionLinks\", {\r\n        get: function () {\r\n            return this._directionLinks;\r\n        },\r\n        set: function (value) {\r\n            this._directionLinks = coerceToBoolean(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PaginationControlsComponent.prototype, \"autoHide\", {\r\n        get: function () {\r\n            return this._autoHide;\r\n        },\r\n        set: function (value) {\r\n            this._autoHide = coerceToBoolean(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PaginationControlsComponent.prototype, \"responsive\", {\r\n        get: function () {\r\n            return this._responsive;\r\n        },\r\n        set: function (value) {\r\n            this._responsive = coerceToBoolean(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PaginationControlsComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'pagination-controls',\r\n                    template: DEFAULT_TEMPLATE,\r\n                    styles: [DEFAULT_STYLES],\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                    encapsulation: ViewEncapsulation.None\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    PaginationControlsComponent.ctorParameters = function () { return []; };\r\n    PaginationControlsComponent.propDecorators = {\r\n        'id': [{ type: Input },],\r\n        'maxSize': [{ type: Input },],\r\n        'directionLinks': [{ type: Input },],\r\n        'autoHide': [{ type: Input },],\r\n        'responsive': [{ type: Input },],\r\n        'previousLabel': [{ type: Input },],\r\n        'nextLabel': [{ type: Input },],\r\n        'screenReaderPaginationLabel': [{ type: Input },],\r\n        'screenReaderPageLabel': [{ type: Input },],\r\n        'screenReaderCurrentLabel': [{ type: Input },],\r\n        'pageChange': [{ type: Output },],\r\n    };\r\n    return PaginationControlsComponent;\r\n}());\n\n/**\r\n * This directive is what powers all pagination controls components, including the default one.\r\n * It exposes an API which is hooked up to the PaginationService to keep the PaginatePipe in sync\r\n * with the pagination controls.\r\n */\r\nvar PaginationControlsDirective = (function () {\r\n    function PaginationControlsDirective(service, changeDetectorRef) {\r\n        var _this = this;\r\n        this.service = service;\r\n        this.changeDetectorRef = changeDetectorRef;\r\n        this.maxSize = 7;\r\n        this.pageChange = new EventEmitter();\r\n        this.pages = [];\r\n        this.changeSub = this.service.change\r\n            .subscribe(function (id) {\r\n            if (_this.id === id) {\r\n                _this.updatePageLinks();\r\n                _this.changeDetectorRef.markForCheck();\r\n                _this.changeDetectorRef.detectChanges();\r\n            }\r\n        });\r\n    }\r\n    PaginationControlsDirective.prototype.ngOnInit = function () {\r\n        if (this.id === undefined) {\r\n            this.id = this.service.defaultId();\r\n        }\r\n        this.updatePageLinks();\r\n    };\r\n    PaginationControlsDirective.prototype.ngOnChanges = function (changes) {\r\n        this.updatePageLinks();\r\n    };\r\n    PaginationControlsDirective.prototype.ngOnDestroy = function () {\r\n        this.changeSub.unsubscribe();\r\n    };\r\n    /**\r\n     * Go to the previous page\r\n     */\r\n    PaginationControlsDirective.prototype.previous = function () {\r\n        this.checkValidId();\r\n        this.setCurrent(this.getCurrent() - 1);\r\n    };\r\n    /**\r\n     * Go to the next page\r\n     */\r\n    PaginationControlsDirective.prototype.next = function () {\r\n        this.checkValidId();\r\n        this.setCurrent(this.getCurrent() + 1);\r\n    };\r\n    /**\r\n     * Returns true if current page is first page\r\n     */\r\n    PaginationControlsDirective.prototype.isFirstPage = function () {\r\n        return this.getCurrent() === 1;\r\n    };\r\n    /**\r\n     * Returns true if current page is last page\r\n     */\r\n    PaginationControlsDirective.prototype.isLastPage = function () {\r\n        return this.getLastPage() === this.getCurrent();\r\n    };\r\n    /**\r\n     * Set the current page number.\r\n     */\r\n    PaginationControlsDirective.prototype.setCurrent = function (page) {\r\n        this.pageChange.emit(page);\r\n    };\r\n    /**\r\n     * Get the current page number.\r\n     */\r\n    PaginationControlsDirective.prototype.getCurrent = function () {\r\n        return this.service.getCurrentPage(this.id);\r\n    };\r\n    /**\r\n     * Returns the last page number\r\n     */\r\n    PaginationControlsDirective.prototype.getLastPage = function () {\r\n        var inst = this.service.getInstance(this.id);\r\n        if (inst.totalItems < 1) {\r\n            // when there are 0 or fewer (an error case) items, there are no \"pages\" as such,\r\n            // but it makes sense to consider a single, empty page as the last page.\r\n            return 1;\r\n        }\r\n        return Math.ceil(inst.totalItems / inst.itemsPerPage);\r\n    };\r\n    PaginationControlsDirective.prototype.getTotalItems = function () {\r\n        return this.service.getInstance(this.id).totalItems;\r\n    };\r\n    PaginationControlsDirective.prototype.checkValidId = function () {\r\n        if (this.service.getInstance(this.id).id == null) {\r\n            console.warn(\"PaginationControlsDirective: the specified id \\\"\" + this.id + \"\\\" does not match any registered PaginationInstance\");\r\n        }\r\n    };\r\n    /**\r\n     * Updates the page links and checks that the current page is valid. Should run whenever the\r\n     * PaginationService.change stream emits a value matching the current ID, or when any of the\r\n     * input values changes.\r\n     */\r\n    PaginationControlsDirective.prototype.updatePageLinks = function () {\r\n        var _this = this;\r\n        var inst = this.service.getInstance(this.id);\r\n        var correctedCurrentPage = this.outOfBoundCorrection(inst);\r\n        if (correctedCurrentPage !== inst.currentPage) {\r\n            setTimeout(function () {\r\n                _this.setCurrent(correctedCurrentPage);\r\n                _this.pages = _this.createPageArray(inst.currentPage, inst.itemsPerPage, inst.totalItems, _this.maxSize);\r\n            });\r\n        }\r\n        else {\r\n            this.pages = this.createPageArray(inst.currentPage, inst.itemsPerPage, inst.totalItems, this.maxSize);\r\n        }\r\n    };\r\n    /**\r\n     * Checks that the instance.currentPage property is within bounds for the current page range.\r\n     * If not, return a correct value for currentPage, or the current value if OK.\r\n     */\r\n    PaginationControlsDirective.prototype.outOfBoundCorrection = function (instance) {\r\n        var totalPages = Math.ceil(instance.totalItems / instance.itemsPerPage);\r\n        if (totalPages < instance.currentPage && 0 < totalPages) {\r\n            return totalPages;\r\n        }\r\n        else if (instance.currentPage < 1) {\r\n            return 1;\r\n        }\r\n        return instance.currentPage;\r\n    };\r\n    /**\r\n     * Returns an array of Page objects to use in the pagination controls.\r\n     */\r\n    PaginationControlsDirective.prototype.createPageArray = function (currentPage, itemsPerPage, totalItems, paginationRange) {\r\n        // paginationRange could be a string if passed from attribute, so cast to number.\r\n        paginationRange = +paginationRange;\r\n        var pages = [];\r\n        var totalPages = Math.ceil(totalItems / itemsPerPage);\r\n        var halfWay = Math.ceil(paginationRange / 2);\r\n        var isStart = currentPage <= halfWay;\r\n        var isEnd = totalPages - halfWay < currentPage;\r\n        var isMiddle = !isStart && !isEnd;\r\n        var ellipsesNeeded = paginationRange < totalPages;\r\n        var i = 1;\r\n        while (i <= totalPages && i <= paginationRange) {\r\n            var label = void 0;\r\n            var pageNumber = this.calculatePageNumber(i, currentPage, paginationRange, totalPages);\r\n            var openingEllipsesNeeded = (i === 2 && (isMiddle || isEnd));\r\n            var closingEllipsesNeeded = (i === paginationRange - 1 && (isMiddle || isStart));\r\n            if (ellipsesNeeded && (openingEllipsesNeeded || closingEllipsesNeeded)) {\r\n                label = '...';\r\n            }\r\n            else {\r\n                label = pageNumber;\r\n            }\r\n            pages.push({\r\n                label: label,\r\n                value: pageNumber\r\n            });\r\n            i++;\r\n        }\r\n        return pages;\r\n    };\r\n    /**\r\n     * Given the position in the sequence of pagination links [i],\r\n     * figure out what page number corresponds to that position.\r\n     */\r\n    PaginationControlsDirective.prototype.calculatePageNumber = function (i, currentPage, paginationRange, totalPages) {\r\n        var halfWay = Math.ceil(paginationRange / 2);\r\n        if (i === paginationRange) {\r\n            return totalPages;\r\n        }\r\n        else if (i === 1) {\r\n            return i;\r\n        }\r\n        else if (paginationRange < totalPages) {\r\n            if (totalPages - halfWay < currentPage) {\r\n                return totalPages - paginationRange + i;\r\n            }\r\n            else if (halfWay < currentPage) {\r\n                return currentPage - halfWay + i;\r\n            }\r\n            else {\r\n                return i;\r\n            }\r\n        }\r\n        else {\r\n            return i;\r\n        }\r\n    };\r\n    PaginationControlsDirective.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: 'pagination-template,[pagination-template]',\r\n                    exportAs: 'paginationApi'\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    PaginationControlsDirective.ctorParameters = function () { return [\r\n        { type: PaginationService, },\r\n        { type: ChangeDetectorRef, },\r\n    ]; };\r\n    PaginationControlsDirective.propDecorators = {\r\n        'id': [{ type: Input },],\r\n        'maxSize': [{ type: Input },],\r\n        'pageChange': [{ type: Output },],\r\n    };\r\n    return PaginationControlsDirective;\r\n}());\n\nvar NgxPaginationModule = (function () {\r\n    function NgxPaginationModule() {\r\n    }\r\n    NgxPaginationModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [CommonModule],\r\n                    declarations: [\r\n                        PaginatePipe,\r\n                        PaginationControlsComponent,\r\n                        PaginationControlsDirective\r\n                    ],\r\n                    providers: [PaginationService],\r\n                    exports: [PaginatePipe, PaginationControlsComponent, PaginationControlsDirective]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    NgxPaginationModule.ctorParameters = function () { return []; };\r\n    return NgxPaginationModule;\r\n}());\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { DEFAULT_STYLES as ɵb, DEFAULT_TEMPLATE as ɵa, NgxPaginationModule, PaginationService, PaginationControlsComponent, PaginationControlsDirective, PaginatePipe };\n","module.exports = \"\\n<div class=\\\"form-horizontal2\\\">\\n    <div class=\\\"form-group2 col2-sm-12\\\">\\n        <div class=\\\"col2-sm-6\\\">\\n            <div class=\\\"input-group-btn\\\">\\n           <button tabindex=\\\"-1\\\" class=\\\"btn btn-white btn2-sm\\\" type=\\\"button\\\" (click)=\\\"selecTag()\\\">&emsp;{{row}}&emsp;</button>\\n           <button data-toggle=\\\"dropdown\\\" class=\\\"btn btn-primary dropdown-toggle btn2-sm\\\" type=\\\"button\\\" (click)=\\\"selecTag()\\\"><span class=\\\"caret\\\"></span></button>\\n           <ul id=\\\"selectList\\\" class=\\\"dropdown-menu\\\">\\n               <li><a (click)=manageRow(10)>10</a></li>\\n               <li><a (click)=manageRow(50)>50</a></li>\\n               <li><a (click)=manageRow(100)>100</a></li>\\n               <li><a (click)=manageRow(200)>Show all</a></li>                 \\n           </ul>\\n       </div>\\n        </div>\\n        <div class=\\\"col2-sm-6\\\">\\n            <div class=\\\"col2-sm-7\\\"></div>\\n            <div class=\\\"col2-sm-5\\\">                 \\n                <input type=\\\"text\\\" placeholder=\\\"Search for something...\\\" class=\\\"form-control pull-right input-sm\\\" name=\\\"search\\\" [(ngModel)]=\\\"filter\\\">               \\n            </div>\\n        </div>\\n    </div>                   \\n</div>\\n<table class=\\\"table table-striped table-bordered table-hover\\\">\\n    <thead>\\n        <tr>                \\n            <th style=\\\"width: 50px\\\" (click)=\\\"sort('id',0)\\\" class=\\\"{{class[1][0]}}\\\">\\n                ID<span class=\\\"fa fa-sort{{class[0][0]}} pull-right\\\"></span>\\n            </th>               \\n            <th (click)=\\\"sort('username',1)\\\" class=\\\"{{class[1][1]}}\\\">\\n                Username<span class=\\\"fa fa-sort{{class[0][1]}} pull-right\\\"></span>\\n            </th>\\n            <th (click)=\\\"sort('time_login',2)\\\" class=\\\"{{class[1][2]}}\\\">\\n                Time Login<span class=\\\"fa fa-sort{{class[0][2]}} pull-right\\\"></span>\\n            </th>\\n            <th (click)=\\\"sort('token_expired',3)\\\" class=\\\"{{class[1][3]}}\\\">\\n                Last Request Time<span class=\\\"fa fa-sort{{class[0][3]}} pull-right\\\"></span>\\n            </th>\\n            <th>Status</th>\\n            <th style=\\\"width: 40px\\\" align=\\\"center\\\">Delete</th>                              \\n        </tr>\\n    </thead>\\n    <tbody>\\n        <tr *ngFor = \\\"let user of activeUsers | orderBy: key : reverse | filter:filter | paginate: { itemsPerPage: row, currentPage: p, id: 'first' };\\\">              \\n            <td>{{user.id}}</td>\\n            <td>{{user.username}}</td>\\n            <td>{{user.time_login}}</td>\\n            <td>{{user.last_request_time}}</td>\\n            <td>{{user.status}}</td>\\n            <td align=\\\"center\\\">                                                                     \\n              <button type=\\\"submit\\\" class=\\\"btn btn-danger btn-xs\\\" (click)=\\\"delActiveUser(user.id)\\\">\\n                <span class=\\\"glyphicon glyphicon-trash\\\"></span>\\n              </button>\\n            </td>                                                            \\n        </tr>\\n    </tbody>\\n</table>\\n<p>Showing 1 to {{row}} of {{totalUsr}}</p>\\n<div class=\\\"pull-right\\\">\\n    <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n</div>\\n<button type=\\\"submit\\\" class=\\\"btn btn-w-m btn-primary btn-sm\\\" (click) = \\\"refresh()\\\">Refresh</button> \"","import { Component, OnInit} from '@angular/core'\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { AdminAppLogsService } from './app-logs.service';\nimport { ErrorHandlerService } from '../../../error-handler.service';\n\n@Component\n({\n\tselector: 'room-status-cmp',\n\ttemplateUrl: 'app-logs.component.html'\n})\n\nexport class AdminAppLogsComponent implements OnInit\n{\n\n\tactiveUsers: object[]\n\tloginLogs: object[]\n\n\tclass = [[\"\",\"\",\"\",\"\"],[\"\",\"\",\"\",\"\"]]\n\tkey: string = 'id'\n\treverse: boolean = true\n\trow = 10\n\ttotalUsr: number\n\ttempID\n\tp: number = 1\n\tfilter: string\n\t\n\n\tconstructor(private appLogsService: AdminAppLogsService, \n\t\t\t\tprivate errorHandlerService: ErrorHandlerService){}\n\n\tngOnInit()\n\t{\n\t\tthis.appLogsService.GetActiveUsers()\n\t\t.subscribe( data =>\n\t\t{\t\t\t\n\t\t\tthis.activeUsers = data['users']\n\t\t\tthis.totalUsr = this.activeUsers.length\n\t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t})\t\t\n\t}\n\t\n\n\tdelActiveUser(id: Number)\n\t{\n\t\tthis.appLogsService.DelActiveUsers(id)\n\t\t.subscribe( data =>\n\t\t{\n\t\t\tthis.ngOnInit()\n\t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t})\n\t}\n\n\trefresh()\n\t{\n\t\tthis.ngOnInit()\n\t}\n\n\tsort(key, id: number)\n\t{\t\t\t\t\n\t\tthis.key = key;\n\t\tthis.reverse = !this.reverse;\n\t\tif(this.class[0][id] == \"\" || this.class[0][id] == \"-asc\")\n\t\t{\n\t\t\tthis.class[0][id] = \"-desc\"\n\t\t}\n\t\telse if(this.class[0][id] == \"-desc\")\n\t\t{\n\t\t\tthis.class[0][id] = \"-asc\"\n\t\t}\t\t\n\t\tthis.class[1][this.tempID] = \"\"\n\t\tthis.class[1][id] = \"active\"\n\t\tthis.tempID = id\t\t\n\t}\t\n\t\n\n\n\tmanageRow(length: number)\n\t{\t\t\n\t\tthis.row = length\n\t\tif(length == 200)\n\t\t{\n\t\t\tthis.row = this.totalUsr\n\t\t}\n\t\tthis.selecTag()\t\t\n\t}\n\n\tselecTag()\n\t{\n\t\tvar class_name = document.getElementById(\"selectList\").className\n\t\tif(class_name == \"dropdown-menu\")\n\t\t{\n\t\t\tdocument.getElementById(\"selectList\").className += \" show\"\n\t\t}\n\t\tif(class_name == \"dropdown-menu show\")\n\t\t{\n\t\t\tdocument.getElementById(\"selectList\").className = \"dropdown-menu\"\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router }    from '@angular/router';\nimport { environment } from './../../../../environments/environment'\n\n\n@Injectable()\nexport class AdminAppLogsService\n{\t\n\n\tconstructor ( private http: HttpClient, private cookieService: CookieService, private router: Router ){}\n\tprivate baseUrl = environment.backend_uri\n\n\tGetActiveUsers()\n\t{\t\t\n\t\treturn this.http.get(`${this.baseUrl}/activeUsers`,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\n\t}\n\n\tDelActiveUsers(id: Number)\n\t{\n\t\treturn this.http.delete(`${this.baseUrl}/activeUser/${id}`,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\n\t}\n\n\tprivate Headers()\n\t{\n\t\tif(this.cookieService.get('token'))\n\t\t{\n\t\t\treturn new HttpHeaders().set('x-access-token', this.cookieService.get('token'))\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconsole.log(\"token is missing\")\n\t\t\tthis.cookieService.delete(\"token\")\n\t\t\tthis.cookieService.delete('username');\n\t\t\tthis.cookieService.delete('userType');\n\t\t\tthis.router.navigate(['/login']);\n\t\t}\n\t}\n}\n","module.exports = \"<div class=\\\"form-horizontal2\\\">\\n    <div class=\\\"form-group2 col2-sm-12\\\">\\n\\t\\t<div class=\\\"col2-sm-6\\\">\\n\\t\\t\\t<div class=\\\"input-group-btn\\\">\\n               \\t<button tabindex=\\\"-1\\\" class=\\\"btn btn-white btn2-sm\\\" type=\\\"button\\\" (click)=\\\"selecTag()\\\">&emsp;{{row}}&emsp;</button>\\n               \\t<button data-toggle=\\\"dropdown\\\" class=\\\"btn btn-primary dropdown-toggle btn2-sm\\\" type=\\\"button\\\" (click)=\\\"selecTag()\\\"><span class=\\\"caret\\\"></span></button>\\n\\t               <ul id=\\\"selectList\\\" class=\\\"dropdown-menu\\\">\\n\\t               \\t   <li><a (click)=manageRow(10)>10</a></li>\\n\\t                   <li><a (click)=manageRow(50)>50</a></li>\\n\\t                   <li><a (click)=manageRow(100)>100</a></li>\\n\\t                   <li><a (click)=manageRow(totalUsr)>Show all</a></li>                 \\n\\t               </ul>\\n       \\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col2-sm-6\\\">\\n\\t\\t\\t<div class=\\\"col2-sm-7\\\"></div>\\n\\t\\t\\t<div class=\\\"col2-sm-5\\\">\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t<input type=\\\"text\\\" placeholder=\\\"Search for something...\\\" class=\\\"form-control pull-right input-sm\\\" name=\\\"search\\\" [(ngModel)]=\\\"filter\\\">\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n    </div>                   \\n</div>    \\n\\t<table class=\\\"table table-striped table-bordered table-hover \\\">\\n\\t<thead>\\n\\t\\t<tr>\\t\\t\\t\\n\\t\\t\\t<th style=\\\"width: 40px\\\" (click)=\\\"sort('id',0)\\\" class=\\\"{{class[1][0]}}\\\">\\n\\t\\t\\t\\tID<span class=\\\"fa fa-sort{{class[0][0]}} pull-right\\\"></span>\\n\\t\\t\\t</th>\\n\\t\\t\\t<th (click)=\\\"sort('Fname',1)\\\" class=\\\"{{class[1][1]}}\\\">\\n\\t\\t\\t\\tFirst Name<span class=\\\"fa fa-sort{{class[0][1]}} pull-right\\\"></span>\\n\\t\\t\\t</th>\\t\\t\\t\\t\\n\\t\\t\\t<th (click)=\\\"sort('username',2)\\\" class=\\\"{{class[1][2]}}\\\">\\n\\t\\t\\t\\tUsername<span class=\\\"fa fa-sort{{class[0][2]}} pull-right\\\"></span>\\n\\t\\t\\t</th>\\n\\t\\t\\t<th (click)=\\\"sort('cardID',3)\\\" class=\\\"{{class[1][3]}}\\\">\\n\\t\\t\\t\\tCardID<span class=\\\"fa fa-sort{{class[0][3]}} pull-right\\\"></span>\\n\\t\\t\\t</th>\\n\\t\\t\\t<th (click)=\\\"sort('permission',4)\\\" class=\\\"{{class[1][4]}}\\\">\\n\\t\\t\\t\\tPermission<span class=\\\"fa fa-sort{{class[0][4]}} pull-right\\\"></span>\\n\\t\\t\\t</th>\\n\\t\\t\\t<th (click)=\\\"sort('room',5)\\\" class=\\\"{{class[1][5]}}\\\">\\n\\t\\t\\t\\tRoom<span class=\\\"fa fa-sort{{class[0][5]}} pull-right\\\"></span>\\n\\t\\t\\t</th>\\n\\t\\t\\t<th (click)=\\\"sort('timestamp',6)\\\" class=\\\"{{class[1][6]}}\\\">\\n\\t\\t\\t\\tTimestamp<span class=\\\"fa fa-sort{{class[0][6]}} pull-right\\\"></span>\\n\\t\\t\\t</th>\\n\\t\\t\\t<th (click)=\\\"sort('action',7)\\\" class=\\\"{{class[1][7]}}\\\" style=\\\"width: 70px\\\">\\n\\t\\t\\t\\taction<span class=\\\"fa fa-sort{{class[0][7]}} pull-right\\\"></span>\\n\\t\\t\\t</th>\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t<th style=\\\"width: 40px\\\">Delete</th>\\n\\t\\t</tr>\\n\\t</thead>\\n\\t<tbody>\\n\\t\\t<tr *ngFor=\\\"let data of auditTrail | orderBy: key : reverse | filter:filter | paginate: { itemsPerPage: row, currentPage: p };\\\">\\n\\t\\t\\t<td>{{data.id}}</td>\\n\\t\\t\\t<td>{{data.Fname}}</td>\\n\\t\\t\\t<td>{{data.username}}</td>\\n\\t\\t\\t<td>{{data.cardID}}</td>\\n\\t\\t\\t<td>{{data.permission}}</td>\\n\\t\\t\\t<td>{{data.room}}</td>\\t\\n\\t\\t\\t<td>{{data.timestamp}}</td>\\t\\n\\t\\t\\t<td>{{data.action}}</td>\\t\\t\\t\\t\\t\\n\\t\\t\\t<td align=\\\"center\\\">\\t\\t\\t\\t\\t\\t\\t\\t                                        \\n                <button type=\\\"submit\\\" class=\\\"btn btn-danger btn-xs\\\" (click)=\\\"deleteUser(data.id)\\\">\\n                \\t<span class=\\\"glyphicon glyphicon-trash\\\"></span>\\n                </button>\\n\\t\\t\\t</td>\\n\\t\\t</tr>\\n\\t</tbody>\\n</table>\\n<p>Showing 1 to {{row}} of {{totalUsr}}</p>\\n<div class=\\\"pull-right\\\">\\n\\t<pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n</div><br><br>\\t\\n <button type=\\\"submit\\\" class=\\\"btn btn-w-m btn-danger btn-sm\\\" (click) = \\\"delete_all()\\\">Delete all</button>\\n <button type=\\\"submit\\\" class=\\\"btn btn-w-m btn-primary btn-sm\\\" (click) = \\\"refresh()\\\">Refresh</button>\\n\\n\\n\"","import { Component, OnInit} from '@angular/core'\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { AdminAuditTrailService } from './audit-trail.service';\nimport { ErrorHandlerService } from '../../../error-handler.service';\nimport * as $ from 'jquery'\ndeclare var $: any;\n\n@Component\n({\n\tselector: 'audit-trail-cmp',\n\ttemplateUrl: 'audit-trail.component.html'\n})\n\nexport class AdminAuditTrailComponent implements OnInit\n{\n\n\tauditTrail: object[]\n\n\tclass = [[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]]\n\tkey: string = 'id'\n\treverse: boolean = true\n\trow = 10\n\ttotalUsr: number\n\ttempID\t\n\tfilter: string\n\n\tconstructor(private auditTrailService: AdminAuditTrailService,  \t\t        \n\t\t\t\tprivate errorHandlerService: ErrorHandlerService ){}\n\n\tngOnInit()\n\t{\n\t\tthis.auditTrailService.GetAuditTrails()\n\t\t.subscribe( data => {\n      if(data != undefined){\n        this.auditTrail = data['auditTrail']\n\t  \t\tthis.totalUsr = this.auditTrail.length\n      }\n\t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t})\n\t}\n\n\tdeleteUser(id: string)\n\t{\n\t\tthis.auditTrailService.DeleteAuditTrail(id)\n\t\t.subscribe( data =>\n\t\t{\n\t\t\tthis.ngOnInit()\n\t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t})\n\t}\n\n\tdelete_all()\n\t{\n\t\tthis.auditTrailService.DelAllAuditTrail()\n\t\t.subscribe( data => \n\t\t{\n\t\t\tthis.ngOnInit()\n\t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t})\n\t}\n\n\trefresh()\n\t{\n\t\tthis.ngOnInit()\n\t}\n\n\tsort(key, id: number)\n\t{\t\t\n\t\tconsole.log(key,id)\t\n\t\tthis.key = key;\n\t\tthis.reverse = !this.reverse;\n\t\tif(this.class[0][id] == \"\" || this.class[0][id] == \"-asc\")\n\t\t{\n\t\t\tthis.class[0][id] = \"-desc\"\n\t\t}\n\t\telse if(this.class[0][id] == \"-desc\")\n\t\t{\n\t\t\tthis.class[0][id] = \"-asc\"\n\t\t}\t\t\n\t\tthis.class[1][this.tempID] = \"\"\n\t\tthis.class[1][id] = \"active\"\n\t\tthis.tempID = id\t\n\t\tconsole.log(this.class)\t\n\t}\n\n\tmanageRow(length: number)\n\t{\t\t\n\t\tthis.row = length\n\t\tthis.selecTag()\n\t}\n\tp: number = 1;\n\n\tselecTag()\n\t{\n\t\tvar class_name = $(\"#selectList\").attr('class')\n\t\tif(class_name == \"dropdown-menu\")\n\t\t{\n\t\t\t$(\"#selectList\").addClass(\"show\")\n\t\t}\n\t\tif(class_name == \"dropdown-menu show\")\n\t\t{\n      $(\"#selectList\").attr({'class': \"dropdown-menu\"})\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router }    from '@angular/router';\nimport { environment } from './../../../../environments/environment'; \n\n\n@Injectable()\nexport class AdminAuditTrailService\n{\n\tconstructor ( private http: HttpClient, private cookieService: CookieService, private router: Router ){}\n\tprivate baseUrl = environment.backend_uri;\n\n\tGetAuditTrails()\n\t{\n\t\treturn this.http.get(`${this.baseUrl}/auditTrail`,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\n\t}\n\n\tDeleteAuditTrail(id: string)\n\t{\n\t\treturn this.http.delete(`${this.baseUrl}/auditTrail/${id}`,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\n\t}\n\n\tDelAllAuditTrail()\n\t{\n\t\treturn this.http.delete(`${this.baseUrl}/auditTrail/all`,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\n\t}\n\n\tprivate Headers()\n\t{\n\t\tif(this.cookieService.get('token'))\n\t\t{\n\t\t\treturn new HttpHeaders().set('x-access-token', this.cookieService.get('token'))\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconsole.log(\"token is missing\")\n\t\t\tthis.cookieService.delete(\"token\")\n\t\t\tthis.cookieService.delete('username');\n\t\t\tthis.cookieService.delete('userType');\n\t\t\tthis.router.navigate(['/login']);\n\t\t}\n\t}\t\n}","module.exports = \"<div class=\\\"col2-sm-10\\\"><div class=\\\"col-sm-6\\\"></div><p style=\\\"color: red\\\">{{message}}</p></div>\\n<form #input=\\\"ngForm\\\">\\n\\n\\t<div class=\\\"form-horizontal2\\\">\\n        <div class=\\\"form-group2 col2-sm-12\\\">\\n\\t\\t\\t<div class=\\\"col2-sm-6\\\">\\n\\t\\t\\t\\t<div class=\\\"input-group-btn\\\">\\n               <button tabindex=\\\"-1\\\" class=\\\"btn btn-white btn2-sm\\\" type=\\\"button\\\" (click)=\\\"selecTag()\\\">&emsp;{{row}}&emsp;</button>\\n               <button data-toggle=\\\"dropdown\\\" class=\\\"btn btn-primary dropdown-toggle btn2-sm\\\" type=\\\"button\\\" (click)=\\\"selecTag()\\\"><span class=\\\"caret\\\"></span></button>\\n               <ul id=\\\"selectList\\\" class=\\\"dropdown-menu\\\">\\n               \\t   <li><a (click)=manageRow(10)>10</a></li>\\n                   <li><a (click)=manageRow(50)>50</a></li>\\n                   <li><a (click)=manageRow(100)>100</a></li>\\n                   <li><a (click)=manageRow(200)>Show all</a></li>                 \\n               </ul>\\n           </div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"col2-sm-6\\\">\\n\\t\\t\\t\\t<div class=\\\"col2-sm-7\\\"></div>\\n\\t\\t\\t\\t<div class=\\\"col2-sm-5\\\">\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" placeholder=\\\"Search for something...\\\" class=\\\"form-control pull-right input-sm\\\" name=\\\"search\\\" [(ngModel)]=\\\"filter\\\"> \\t\\t\\t\\t\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n        </div>                   \\n    </div>     \\n \\t<table class=\\\"table table-striped table-bordered table-hover\\\">\\n\\t\\t<thead>\\n\\t\\t\\t<tr>\\t\\t\\t\\t\\n\\t\\t\\t\\t<th style=\\\"width: 50px\\\" (click)=\\\"sort('id',0)\\\" class=\\\"{{class[1][0]}}\\\">\\n\\t\\t\\t\\t\\tID<span class=\\\"fa fa-sort{{class[0][0]}} pull-right\\\"></span>\\n\\t\\t\\t\\t</th>\\n\\t\\t\\t\\t<th (click)=\\\"sort('name',1)\\\" class=\\\"{{class[1][1]}}\\\">\\n\\t\\t\\t\\t\\tName<span class=\\\"fa fa-sort{{class[0][1]}} pull-right\\\"></span>\\n\\t\\t\\t\\t</th>\\n\\t\\t\\t\\t<th (click)=\\\"sort('description',2)\\\" class=\\\"{{class[1][2]}}\\\">\\n\\t\\t\\t\\t\\tDescription<span class=\\\"fa fa-sort{{class[0][2]}} pull-right\\\"></span>\\n\\t\\t\\t\\t</th>\\n        <th (click)=\\\"sort('description',3)\\\" class=\\\"{{class[1][3]}}\\\">\\n          Remote Design<span class=\\\"fa fa-sort{{class[0][3]}} pull-right\\\"></span>\\n        </th>\\n\\t\\t\\t\\t<th style=\\\"width: 40px\\\">Edit</th>\\n\\t\\t\\t\\t<th style=\\\"width: 40px\\\">Delete</th>\\n\\t\\t\\t</tr>\\n\\t\\t</thead>\\n\\t\\t<tbody>\\n\\t\\t\\t<tr *ngFor=\\\"let device of devices | orderBy: key : reverse | filter:filter | paginate: { itemsPerPage: row, currentPage: p };\\\">\\t\\t\\t\\t\\n\\t\\t\\t\\t<td>{{device.id}}</td>\\n\\t\\t\\t\\t<td>{{device.name}}</td>\\n\\t\\t\\t\\t<td>{{device.description}}</td>\\n        <td>{{device.remote_design}}</td>\\n\\t\\t\\t\\t<td align=\\\"center\\\">\\t\\t\\t\\t\\t\\t\\t\\t\\t                \\n            <button class=\\\"btn btn-primary btn-xs\\\" (click) = \\\"getUpdateData(device.id)\\\" data-toggle=\\\"modal\\\" href=\\\"#modal-devices\\\">\\n            \\t<span class=\\\"glyphicon glyphicon-pencil\\\"></span>\\n            </button>\\n\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t<td align=\\\"center\\\">\\t\\t\\t\\t\\t\\t\\t\\t                                        \\n            <button type=\\\"submit\\\" class=\\\"btn btn-danger btn-xs\\\" (click)=\\\"deleteDevice(device.id)\\\">\\n            \\t<span class=\\\"glyphicon glyphicon-trash\\\"></span>\\n            </button>\\n\\t\\t\\t\\t</td>\\n\\t\\t\\t</tr>\\n\\t\\t</tbody>\\n\\t</table>\\n\\t<p>Showing 1 to {{row}} of {{totalUsr}}</p>\\n\\t<div class=\\\"pull-right\\\">\\n\\t\\t<pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n\\t</div><br><br>\\n\\t<button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" data-toggle=\\\"modal\\\" href=\\\"#modal-devices\\\" (click) = \\\"getData()\\\">Add</button>\\t\\n </form>\\n\\n\\n<div id=\\\"modal-devices\\\" class=\\\"modal fade\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog\\\">\\n      <div class=\\\"modal-content animated {{modalAnimation}}\\\">\\n          <div class=\\\"modal-body\\\">\\n          \\t<p></p>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-11\\\">              \\n                  <div class=\\\"col-sm-1\\\">\\n                  </div>               \\n                  <form [formGroup]=\\\"modalForm\\\"  novalidate>        \\n                    <div class=\\\"col-sm-11\\\">\\n\\n                      <div class=\\\"form-horizontal\\\"> \\n                       <div class=\\\"form-group\\\">\\n                        <label class=\\\"col-lg-2 control-label\\\">Name:</label>\\n                          <div class=\\\"col-lg-10\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Name\\\" formControlName=\\\"name\\\" >\\n                          </div>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                          <label class=\\\"col-lg-2 control-label\\\">Description:</label>                          \\n                          <div class=\\\"col-lg-10\\\">\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"description\\\" placeholder=\\\"Enter description ...\\\" ></textarea>\\n                          </div>\\n                        </div>\\n                         <div class=\\\"form-group\\\">\\n                        <label class=\\\"col-lg-2 control-label\\\">Remote Design:</label>                          \\n                          <div class=\\\"col-lg-10\\\">\\n                            <select class=\\\"chosen-select-ws form-control\\\" tabindex=\\\"2\\\" id=\\\"remote_design\\\">                                        \\n                              <option *ngFor = \\\"let data of remote_design \\\" value=\\\"{{data.id}}\\\">{{data.name}}&emsp;&emsp;</option>\\n                            </select>\\n                          </div>\\n                        </div>\\n                      </div>                                                                               \\n\\n                      <div *ngIf = \\\"add == 'addDevice' && modalForm.status == 'VALID'\\\">\\n                        <div class=\\\"col-sm-6\\\"></div>                        \\n                        <button type=\\\"button\\\" class=\\\"btn btn-warning btn-sm\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n                        <button class=\\\"btn btn-primary btn-sm\\\" data-dismiss = \\\"modal\\\" (click) = \\\"addDevice()\\\" >Add</button>\\n                      </div> \\n\\n                      <div *ngIf = \\\"add == 'addDevice' && modalForm.status == 'INVALID'\\\">\\n                        <div class=\\\"col-sm-6\\\"></div>                        \\n                        <button type=\\\"button\\\" class=\\\"btn btn-warning btn-sm\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n                        <button class=\\\"btn btn-primary btn-sm\\\" data-dismiss = \\\"modal\\\" disabled=\\\"\\\">Add</button>\\n                      </div>\\n                                       \\n\\n                      <div *ngIf = \\\"update == 'updateDevice'\\\">\\n                        <div class=\\\"col-sm-6\\\"></div>                        \\n                        <button type=\\\"button\\\" class=\\\"btn btn-warning btn-sm\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n                        <button class=\\\"btn btn-primary btn-sm\\\" data-dismiss = \\\"modal\\\" (click) = \\\"updateDevice()\\\" >Save</button>                      \\n                      </div>                      \\n\\n                      </div>\\n                    </form>\\n                </div>\\n          </div>\\n      </div>\\n      </div>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit} from '@angular/core'\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { FormBuilder, FormGroup, Validators } \tfrom '@angular/forms';\nimport * as $ from 'jquery'\n\ndeclare var $: any;\n\nimport { DevicesService } from './devices.service';\nimport { ErrorHandlerService } from '../../../error-handler.service';\n\n@Component\n({\n\tselector: 'devices-cmp',\n\ttemplateUrl: 'devices.component.html'\n})\n\nexport class DevicesComponent\n{\n\tdevices: object[]\n\tremote_design: object[]\n\tmessage: string\n\tmodalForm: FormGroup\n\t\n\tadd: string\n\tupdate: string\n\tmodalAnimation: string\n\n\tclass = [[\"\",\"\",\"\",\"\"],[\"\",\"\",\"\",\"\"]]\n\tkey: string = 'id'\n\treverse: boolean = false\n\trow = 10\n\ttotalUsr: number\n\ttempID\n\tfilter: string\n\n\tconstructor( private deviceService: DevicesService, private formBuilder: FormBuilder, \n\t\t         private errorHandlerService: ErrorHandlerService ){ this.createForm() }\n\n\tcreateForm()\n\t{\n\t\tthis.modalForm = this.formBuilder.group\n\t\t({\n\t\t\tname: ['',Validators.required],\n\t\t\tdescription: ['', Validators.required]\t\t\n\t\t})    \n\t}\n\n\tngOnInit()\n\t{\n\t\tthis.deviceService\n\t\t.getAll()\n\t\t.subscribe(data => \n\t\t{\t\t\t\t\n\t\t\tthis.devices = data['devices']\n\t\t\tthis.totalUsr = this.devices.length\n\t\t\t$(document).ready(function(){\n\t\t\t\t$('.chosen-select-ws').chosen({width: \"80%\"})\t\t\n\t\t\t})\n\t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t});\n\n\t\tthis.deviceService.getRemoteDesign()\n\t\t.subscribe( data =>\n\t\t{\n\t\t\tthis.remote_design = data['remote_design']\n\t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t})\n\t}\n\n\tgetData()\n\t{\n\t\tthis.update = \"\"\t    \t\t  \t\t\n\t\tthis.add = \"addDevice\"\n\t\tthis.modalAnimation = \"flipInY\" \n\t\tthis.modalForm = this.formBuilder.group\n\t\t({\n\t\t\tname: ['',Validators.required],\n\t\t\tdescription: ['', Validators.required]\n\t\t})\n\t\tthis.initializeSelect('destroy')\n\t\tthis.initializeSelect({width: '80%'})  \t\t   \t\n\t}\n\n\taddDevice()\n\t{\n\t\tif ( this.modalForm.status == \"VALID\")\n\t\t{\t\t\t\n\t\t\tvar data = this.modalForm.value\n\t\t\tdata['remote_design_id'] = document.getElementById('remote_design')['value']\t\t\t\t\t\n\t\t\tthis.deviceService.AddDevice(data,\"devices\").subscribe( response =>\n\t\t\t{\t\t\t\t\n\t\t\t\tthis.message = \"\"\n\t\t\t\tthis.ngOnInit()\t\t\t\n\t\t\t\tif (response['message'] == \"already exist\")\n\t\t\t\t{\n\t\t\t\t\tthis.message = \"Device already exist\"\n\t\t\t\t}\n\t\t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t})\t\t\t\t\n\t\t}\t\t\n\t}\n\n\tdeleteDevice(id: any)\n\t{\n\t\t\t\t\n\t\tthis.deviceService.deleteDevice(id).subscribe( Device => \n\t\t{\t\t\t\t\t\t\n\t\t\tthis.ngOnInit()\n\t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t})\n\t}\n\n\tgetUpdateData(id: string)\n\t{\n\t\tthis.add = \"\"    \n\t\tthis.deviceService.routeID = id\t\t\n\t\tthis.modalAnimation = \"fadeInDown\"    \t\t\n\t\tthis.deviceService.GetDevice(\"device\").subscribe( data => \n\t\t{\t\t\t\t\n\t\t\tthis.mapData(data['data'])\n\t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t})\n\t}\n\n\tupdateDevice()\n\t{\n\t\tif (this.modalForm.status == \"VALID\")\n\t\t{\n\t\t\tconsole.log(document.getElementById('remote_design'))\n\t\t\tvar data = this.modalForm.value\n\t\t\tdata['remote_design_id'] = document.getElementById('remote_design')['value']\n\t\t\tconsole.log(data)\n\t\t\tthis.deviceService.UpdateDevice(data,\"device\")\n\t\t\t.subscribe( data => \n    \t\t{    \t\t\t    \t\t\t\n    \t\t\tif(data == null)\n    \t\t\t{    \t\t\t\t\n\t\t\t\t\tthis.message = \"\"\n\t\t\t\t\tthis.ngOnInit()\n    \t\t\t}\n    \t\t\tif(data['message'])\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"yes\")\n\t\t\t\t\tthis.message = data['message']\n\t\t\t\t}\t\t\t\t\n    \t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t})\n\t\t}\n\t}\n\n\tsort(key, id: number)\n\t{\t\t\t\t\n\t\tthis.key = key;\n\t\tthis.reverse = !this.reverse;\n\t\tif(this.class[0][id] == \"\" || this.class[0][id] == \"-asc\")\n\t\t{\n\t\t\tthis.class[0][id] = \"-desc\"\n\t\t}\n\t\telse if(this.class[0][id] == \"-desc\")\n\t\t{\n\t\t\tthis.class[0][id] = \"-asc\"\n\t\t}\t\t\n\t\tthis.class[1][this.tempID] = \"\"\n\t\tthis.class[1][id] = \"active\"\n\t\tthis.tempID = id\t\t\n\t}\n\n\tmanageRow(length: number)\n\t{\t\t\n\t\tthis.row = length\n\t\tif(length == 200)\n\t\t{\n\t\t\tthis.row = this.totalUsr\n\t\t}\t\t\n\t\tthis.selecTag()\n\t}\n\tp: number = 1;\n\n\n\tprivate mapData(data: object)\n\t{\t\t\t\t\n\t\tthis.set_select(data['remote_design_id'],data['remote_design'])\n\t\tthis.modalForm = this.formBuilder.group\n\t\t({\n\t\t\tname: [data[\"name\"],Validators.required],\n\t\t\tdescription: [data[\"description\"], Validators.required]\n\t\t})\n\t\tthis.update = \"updateDevice\"\t   \n\t}\n\n\tselecTag()\n\t{\n\t\tvar class_name = document.getElementById(\"selectList\").className\n\t\tif(class_name == \"dropdown-menu\")\n\t\t{\n\t\t\tdocument.getElementById(\"selectList\").className += \" show\"\n\t\t}\n\t\tif(class_name == \"dropdown-menu show\")\n\t\t{\n\t\t\tdocument.getElementById(\"selectList\").className = \"dropdown-menu\"\n\t\t}\n\t}\n\n\tinitializeSelect(parameter: any)\n\t{    \n\t\t$(document).ready(function(){\n\t\t\t$('.chosen-select-ws').chosen(parameter);\n\t\t});  \n\t}\n\n\tset_select(id:string, name: string)\n\t{\t\t\t\n\t\tdocument.getElementById(\"remote_design\")['value'] = id\t\t\n\t\tdocument.getElementsByName(\"chosen\")[0]['textContent'] = name\n\t}\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router }    from '@angular/router';\nimport { environment } from './../../../../environments/environment';\n\n\n@Injectable()\nexport class DevicesService\n{\n\trouteID: string\n\n\tconstructor ( private http: HttpClient, private cookieService: CookieService, private router: Router ){}\n\tprivate baseUrl = environment.backend_uri;\n\n\tgetAll()\n\t{\n\t\treturn this.http.get(`${this.baseUrl}/devices`,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\n\t}\n\n\tgetRemoteDesign()\n\t{\n\t\treturn this.http.get(`${this.baseUrl}/remoteDesign`,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\n\t}\n\n\tdeleteDevice(id:number)\n\t{\t\t\n\t\treturn this.http.delete(`${this.baseUrl}/device/${id}`,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\t\t\t\n\t}\n\n\tAddDevice(body: Object, extensUrl: string)\n\t{\t\t\n\t\treturn this.http.post(`${this.baseUrl}/${extensUrl}`,body,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})        \n\t}\n\n\tGetDevice(extensUrl: string)\n\t{\n\t\treturn this.http.get(`${this.baseUrl}/${extensUrl}/${this.routeID}`,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\t\t\t\n\t}\n\n\tUpdateDevice(body: Object, extensUrl: string)\n\t{\n\t\treturn this.http.put(`${this.baseUrl}/${extensUrl}/${this.routeID}`,body,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\t\t\n\t}\n\n\tprivate Headers()\n\t{\n\t\tif(this.cookieService.get('token'))\n\t\t{\n\t\t\treturn new HttpHeaders().set('x-access-token', this.cookieService.get('token'))\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconsole.log(\"token is missing\")\n\t\t\tthis.cookieService.delete(\"token\")\t\t\t\n\t\t\tthis.router.navigate(['/login']);\n\t\t}\n\t}\t\n}","module.exports = \"<div class=\\\"col2-sm-10\\\"><div class=\\\"col-sm-6\\\"></div><p style=\\\"color: red\\\">{{message}}</p></div>\\n<!-- <div class=\\\"wrapper wrapper-content animated fadeInRight\\\">\\n\\t<div class=\\\"row\\\">\\n\\n\\t\\t<div *ngFor = \\\"let group of groups | filter:filter | paginate: { itemsPerPage: row, currentPage: p };\\\">\\n\\t\\t\\t<div class=\\\"col-lg-4\\\">\\n\\t\\t\\t\\t<div class=\\\"grow\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"contact-box\\\">                       \\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-lg-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"text-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<img alt=\\\"image\\\" class=\\\"img-circle m-t-xs img-responsive\\\" src=\\\"assets/img/letters/{{group.name[0]}}.png\\\">                          \\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"m-t-xs font-bold\\\">group: {{group.id}}</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<dir class=\\\"form-horizontal\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">  \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-danger btn-xs\\\" (click)=\\\"deleteGroup(group.id)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"glyphicon glyphicon-trash\\\"></span></button>\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-primary btn-xs\\\" (click) = \\\"getUpdateData(group.id)\\\" data-toggle=\\\"modal\\\" href=\\\"#modal-groups\\\"><span class=\\\"glyphicon glyphicon-pencil\\\"></span></button> \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div> \\n\\t\\t\\t\\t\\t\\t\\t\\t</dir> \\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<a (click)=showMember(group.id)>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-8\\\">                    \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<h3><strong>{{group.name}}</strong></h3>                    \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<strong>Description:</strong><br>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p>{{group.description}}</p>                         \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-container *ngIf = \\\"group.description.length <= 25\\\"><br></ng-container>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<strong>Permission:</strong><br>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p>{{group.permission_name}}</p>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<strong>Number of members:</strong>&nbsp;{{group.members}}                                    \\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"clearfix\\\"></div>\\n\\t\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>    \\n\\t\\t</div>\\n\\t\\t<pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n\\t</div> -->\\n\\t<div class=\\\"form-horizontal2\\\">\\n\\t\\t<div class=\\\"form-group2 col2-sm-12\\\">\\n\\t\\t\\t<div class=\\\"col2-sm-6\\\">\\n\\t\\t\\t\\t<div class=\\\"input-group-btn\\\">\\n\\t\\t\\t\\t\\t<button tabindex=\\\"-1\\\" class=\\\"btn btn-white btn2-sm\\\" type=\\\"button\\\" (click)=\\\"selecTag()\\\">&emsp;{{row}}&emsp;</button>\\n\\t\\t\\t\\t\\t<button data-toggle=\\\"dropdown\\\" class=\\\"btn btn-primary dropdown-toggle btn2-sm\\\" type=\\\"button\\\" (click)=\\\"selecTag()\\\"><span class=\\\"caret\\\"></span></button>\\n\\t\\t\\t\\t\\t<ul id=\\\"selectList\\\" class=\\\"dropdown-menu\\\">\\n\\t\\t\\t\\t\\t\\t<li><a (click)=manageRow(10)>10</a></li>\\n\\t\\t\\t\\t\\t\\t<li><a (click)=manageRow(50)>50</a></li>\\n\\t\\t\\t\\t\\t\\t<li><a (click)=manageRow(100)>100</a></li>\\n\\t\\t\\t\\t\\t\\t<li><a (click)=manageRow(200)>Show all</a></li>                 \\n\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"col2-sm-6\\\">\\n\\t\\t\\t\\t<div class=\\\"col2-sm-7\\\"></div>\\n\\t\\t\\t\\t<div class=\\\"col2-sm-5\\\">\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" placeholder=\\\"Search for something...\\\" class=\\\"form-control pull-right input-sm\\\" name=\\\"search\\\" [(ngModel)]=\\\"filter\\\"> \\t\\t\\t\\t\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>                   \\n\\t</div>\\n\\t<table class=\\\"table table-striped table-bordered table-hover\\\">\\n\\t\\t<thead>\\n\\t\\t\\t<tr>\\t\\t\\t\\t\\n\\t\\t\\t\\t<th style=\\\"width: 50px\\\" (click)=\\\"sort('id',0)\\\" class=\\\"{{class[1][0]}}\\\">\\n\\t\\t\\t\\t\\tID<span class=\\\"fa fa-sort{{class[0][0]}} pull-right\\\"></span>\\n\\t\\t\\t\\t</th>\\n\\t\\t\\t\\t<th (click)=\\\"sort('name',1)\\\" class=\\\"{{class[1][1]}}\\\">\\n\\t\\t\\t\\t\\tName<span class=\\\"fa fa-sort{{class[0][1]}} pull-right\\\"></span>\\n\\t\\t\\t\\t</th>\\n\\t\\t\\t\\t<th (click)=\\\"sort('description',2)\\\" class=\\\"{{class[1][2]}}\\\">\\n\\t\\t\\t\\t\\tDescription<span class=\\\"fa fa-sort{{class[0][2]}} pull-right\\\"></span>\\n\\t\\t\\t\\t</th>\\n\\t\\t\\t\\t<th (click)=\\\"sort('description',3)\\\" class=\\\"{{class[1][3]}}\\\">\\n\\t\\t\\t\\t\\tMembers<span class=\\\"fa fa-sort{{class[0][3]}} pull-right\\\"></span>\\n\\t\\t\\t\\t</th>\\n\\t\\t\\t\\t<th style=\\\"width: 40px\\\">Edit</th>\\n\\t\\t\\t\\t<th style=\\\"width: 40px\\\">Delete</th>\\n\\t\\t\\t</tr>\\n\\t\\t</thead>\\n\\t\\t<tbody>\\n\\t\\t\\t<tr *ngFor=\\\"let group of groups | orderBy: key : reverse | filter:filter | paginate: { itemsPerPage: row, currentPage: p };\\\">\\t\\t\\t\\t\\n\\t\\t\\t\\t<td (click)=showMember(group.id)>{{group.id}}</td>\\n\\t\\t\\t\\t<td (click)=showMember(group.id)>{{group.name}}</td>\\n\\t\\t\\t\\t<td (click)=showMember(group.id)>{{group.description}}</td>\\n\\t\\t\\t\\t<td style=\\\"width: 90px\\\" (click)=GroupAccess(group.id)>{{group.members}}</td>\\n\\t\\t\\t\\t<td align=\\\"center\\\">\\t\\t\\t\\t\\t\\t\\t\\t\\t                \\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-primary btn-xs\\\" (click) = \\\"getUpdateData(group.id)\\\" data-toggle=\\\"modal\\\" href=\\\"#modal-groups\\\"><span class=\\\"glyphicon glyphicon-pencil\\\"></span></button>\\n\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t<td align=\\\"center\\\">\\t\\t\\t\\t\\t\\t\\t\\t                                        \\n\\t\\t\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-danger btn-xs\\\" (click)=\\\"deleteGroup(group.id)\\\">\\n\\t\\t\\t\\t\\t\\t<span class=\\\"glyphicon glyphicon-trash\\\"></span>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</td>\\n\\t\\t\\t</tr>\\n\\t\\t</tbody>\\n\\t</table>\\n\\t<p>Showing 1 to {{row}} of {{totalUsr}}</p>\\n\\t<div class=\\\"pull-right\\\">\\n\\t\\t<pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n\\t</div><br><br>\\n\\t<button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" data-toggle=\\\"modal\\\" href=\\\"#modal-groups\\\" (click) = \\\"getData()\\\">Add</button>\\n\\n\\t<!-- <div class=\\\"footer fixed\\\">\\n\\t\\t<div class=\\\"pull-right\\\">\\n\\t\\t\\t<div class=\\\"form-group form-horizontal\\\">\\n\\t\\t\\t\\t<label class=\\\"col-lg-2 control-label\\\">Search:</label>\\n\\t\\t\\t\\t<div class=\\\"col-lg-10\\\">\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"search\\\" [(ngModel)]=\\\"filter\\\">\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>   \\n\\t\\t</div>\\n\\t\\t<div>\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" data-toggle=\\\"modal\\\" href=\\\"#modal-groups\\\" (click) = \\\"getData()\\\">Add</button>\\n\\t\\t</div>\\n\\t</div> -->\\n\\n\\t<div id=\\\"modal-groups\\\" class=\\\"modal fade\\\" aria-hidden=\\\"true\\\">\\n\\t\\t<div class=\\\"modal-dialog\\\">\\n\\t\\t\\t<div class=\\\"modal-content animated {{modalAnimation}}\\\">\\n\\t\\t\\t\\t<div class=\\\"modal-body\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-3\\\"></div>\\n            <div class=\\\"col-sm-6\\\"><p style=\\\"color: red\\\">{{message}}</p></div>\\n            <div class=\\\"col-sm-3\\\"></div>\\n          <div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-11\\\">              \\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-1\\\">\\n\\t\\t\\t\\t\\t\\t\\t</div>               \\n\\t\\t\\t\\t\\t\\t\\t<form [formGroup]=\\\"modalForm\\\"  novalidate>        \\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-11\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf = \\\"add == 'addGroup' || update == 'updateGroup'\\\" class=\\\"form-horizontal\\\"> \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"col-lg-2 control-label\\\">Name:</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-lg-10\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Name\\\" formControlName=\\\"name\\\" >\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"col-lg-2 control-label\\\">Description:</label>                          \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-lg-10\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<textarea class=\\\"form-control\\\" formControlName=\\\"description\\\" placeholder=\\\"Enter description ...\\\" ></textarea>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-lg-2\\\"></div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-lg-10\\\"> \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-group-btn\\\">                            \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button data-toggle=\\\"dropdown\\\" class=\\\"btn btn-primary btn-table dropdown-toggle\\\" type=\\\"button\\\" (click)=\\\"selecTag2()\\\">{{permission}}&emsp;<span class=\\\"caret\\\"></span></button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ul id=\\\"selectList2\\\" class=\\\"dropdown-menu\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-container *ngFor = \\\"let permission of permissions\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li><a (click)=\\\"choosePermission(permission.id,permission.name)\\\">{{permission.name}}</a></li> \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-container>                               \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>                                          \\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf = \\\"add == 'addGroup' && modalForm. status == 'VALID'\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-6\\\"></div>                        \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-warning btn-sm\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-primary btn-sm\\\" (click) = \\\"addGroup()\\\" >Add</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>  \\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf = \\\"add == 'addGroup' && modalForm. status == 'INVALID'\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-6\\\"></div>                        \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-warning btn-sm\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-primary btn-sm\\\" disabled=\\\"\\\" >Add</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>                 \\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf = \\\"update == 'updateGroup'\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-6\\\"></div>                        \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-warning btn-sm\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-primary btn-sm\\\" (click) = \\\"updateGroup()\\\" >Save</button>                      \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>                      \\n\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</form>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\n\"","import { Component, OnInit} from '@angular/core'\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\nimport { AdminGroupService } from './group.service';\nimport { ErrorHandlerService } from '../../../error-handler.service';\ndeclare var $: any;\n\n@Component\n({\n\tselector: 'group-cmp',\n\ttemplateUrl: 'group.component.html'\n})\n\nexport class AdminGroupComponent\n{\n\tgroups: object[]\n\tpermissions: object[]\n\tmessage: string\n\tchoosenPermission: object\n\tpermission: string\t\n\n\tmodalForm: FormGroup\t\n\tadd: string\n\tupdate: string\n\tmodalAnimation:string\n\n\tclass = [[\"\",\"\",\"\",\"\"],[\"\",\"\",\"\",\"\"]]\n\ttempID\n\tkey: string = 'id'\n\treverse: boolean = false\n\ttotalUsr: number\n\tfilter: string\n\trow = 10\n\tp = 1\n\n\tconstructor( private groupService: AdminGroupService, private errorHandlerService: ErrorHandlerService,\n\t\t\t\t private formBuilder: FormBuilder, private router: Router ){ this.createForm()}\n\n\tcreateForm()\n\t{\n\t\tthis.modalForm = this.formBuilder.group\n\t\t({\n\t\t    \t\t\t\n\t\t})    \n\t}\n\n\tngOnInit()\n\t{\t\t\t\n\t\tthis.groupService.getGroups()\n\t\t.subscribe( data => \n\t\t{\n\t\t\tthis.groups  = data['groups']\n\t\t\tthis.totalUsr = this.groups.length\n\t\t},(error: HttpErrorResponse) =>\n      {\n        this.message = error.error.message;\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t})\n\t}\n\n\tgetUpdateData(id: string)\n\t{\n\t\tthis.add = \"\"    \n\t\tthis.groupService.routeID = id\t\t\n\t\tthis.modalAnimation = \"fadeInDown\"\n\n\t\tthis.groupService.GetPermissions()\n\t\t.subscribe( data =>\n\t\t{\t\t\t\n\t\t\tthis.permissions = data['permissions']\n\t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n        this.message = error.error.message;\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t}) \n\t\tthis.groupService.GetGroup(\"group\").subscribe( data =>\n\t\t{\n\t\t\tthis.permission = data['data'].permission_name\n\t\t\tthis.choosenPermission = {permission_id: data['data'].permission_id}\n\t\t\tthis.mapData(data['data'])\n\t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n        this.message = error.error.message;\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t})\t\t\n\t}\n\n\tupdateGroup()\n\t{    \t\t\n\t\tif ( this.modalForm.status == \"VALID\")\n\t\t{\n\t\t\tvar data: object\n\t\t\tdata = Object.assign(this.modalForm.value,this.choosenPermission)\n\t\t\tthis.groupService.UpdateGroup(data,\"group\")\n\t\t\t.subscribe( data =>\n\t\t\t{\n\t\t\t  this.message = \"\"\n        $(\"#modal-groups\").modal('hide');\n\t\t\t\tthis.ngOnInit()\n\t\t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n        this.message = error.error.message;\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t})\n\t\t}\t\t\n\t}\n\n\tdeleteGroup(id: string)\n\t{\n\t\tthis.groupService.DeleteGroup(id)\n\t\t.subscribe( group =>\n\t\t{\n\t\t\tthis.ngOnInit()\n\t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n        this.message = error.error.message;\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t})\n\t}\n\n\tgetData()\n\t{\n\t\tthis.permission = \"Permission\"\n\t\tthis.update = \"\"\n\t\tthis.add = \"addGroup\"    \t\t\n\t\tthis.modalAnimation = \"fadeInDown\"\n\t\tthis.modalForm = this.formBuilder.group\n\t\t({\n\t\t\tname: ['',Validators.required],\n\t\t\tdescription: ['', Validators.required]\n\t\t}) \n\t\tthis.groupService.GetPermissions()\n\t\t.subscribe( data =>\n\t\t{\t\t\t\n\t\t\tthis.permissions = data['permissions']\n\t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n        this.message = error.error.message;\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t})   \t\t   \t\n\t}\n\n\taddGroup()\n\t{\n\t\tif ( this.modalForm.status == \"VALID\" && this.permission != \"Permission\")\n\t\t{\t\t\t\t\t\t\n\t\t\tvar data: object\n\t\t\tdata = Object.assign(this.modalForm.value,this.choosenPermission)\n\t\t\tthis.groupService.AddGroup(data,\"groups\").subscribe( response =>\n\t\t\t{\n\t\t\t\tthis.message = \"\"\n        $(\"#modal-groups\").modal('hide');\n\t\t\t\tthis.ngOnInit()\t\t\t\n\t\t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n        this.message = error.error.message;\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t})\t\t\t\n\t\t}\n\t\telse if(this.permission == \"Permission\")\n\t\t{\n\t\t\tthis.message = \"Error Permission is missing! Please choose permission type when adding group\"\n\t\t}\t\t\n\t}\n\n\tchoosePermission(permission_id: string, permission_name: string)\n\t{\t\t\t\t\n\t\tthis.choosenPermission = {permission_id: permission_id}\n\t\tthis.permission = permission_name\n\t\tthis.selecTag2()\t\t\n\t}\n\n\tshowMember(id: string)\n\t{\n\t\tthis.router.navigate(['/home/admin/groupMember',id])\n\t}\n\n\tmanageRow(length: number)\n\t{\t\t\n\t\tthis.row = length\n\t\tif(length == 200)\n\t\t{\n\t\t\tthis.row = this.totalUsr\n\t\t}\t\t\n\t\tthis.selecTag()\n\t}\n\n\tsort(key, id: number)\n\t{\t\t\t\t\n\t\tthis.key = key;\n\t\tthis.reverse = !this.reverse;\n\t\tif(this.class[0][id] == \"\" || this.class[0][id] == \"-asc\")\n\t\t{\n\t\t\tthis.class[0][id] = \"-desc\"\n\t\t}\n\t\telse if(this.class[0][id] == \"-desc\")\n\t\t{\n\t\t\tthis.class[0][id] = \"-asc\"\n\t\t}\t\t\n\t\tthis.class[1][this.tempID] = \"\"\n\t\tthis.class[1][id] = \"active\"\n\t\tthis.tempID = id\t\t\n\t}\n\n\n\tselecTag()\n\t{\t\t\n\t\tvar class_name = document.getElementById(\"selectList\").className\n\t\tif(class_name == \"dropdown-menu\")\n\t\t{\n\t\t\tdocument.getElementById(\"selectList\").className += \" show\"\n\t\t}\n\t\tif(class_name == \"dropdown-menu show\")\n\t\t{\n\t\t\tdocument.getElementById(\"selectList\").className = \"dropdown-menu\"\n\t\t}\n\t}\n\n\tselecTag2()\n\t{\t\t\n\t\tvar class_name = document.getElementById(\"selectList2\").className\n\t\tif(class_name == \"dropdown-menu\")\n\t\t{\n\t\t\tdocument.getElementById(\"selectList2\").className += \" show\"\n\t\t}\n\t\tif(class_name == \"dropdown-menu show\")\n\t\t{\n\t\t\tdocument.getElementById(\"selectList2\").className = \"dropdown-menu\"\n\t\t}\n\t}\n\n\tprivate mapData(data: object)\n\t{\n\t\tthis.modalForm = this.formBuilder.group\n\t\t({\n\t\t\tname: [data[\"name\"],Validators.required],\n\t\t\tdescription: [data[\"description\"], Validators.required]\n\t\t})\n\t\tthis.update = \"updateGroup\"\n\t}\t\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router }    from '@angular/router';\nimport { environment } from './../../../../environments/environment'; \n\n@Injectable()\nexport class AdminGroupService\n{\n  \tprivate baseUrl = environment.backend_uri;\n\trouteID: string\n\n\tconstructor ( private http: HttpClient, private cookieService: CookieService, private router: Router ){}\n\n\tgetGroups()\n\t{\n\t\treturn this.http.get(`${this.baseUrl}/groups`, \n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\t\t\n\t}\n\n\tDeleteGroup(id: string)\n\t{\n\t\treturn this.http.delete(`${this.baseUrl}/group/${id}`,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\t\t\n\t}\n\n\tAddGroup(body: Object, extensUrl: string)\n\t{\t\t\n\t\treturn this.http.post(`${this.baseUrl}/${extensUrl}`,body,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})     \n\t}\n\n\tGetGroup(extensUrl: string)\n\t{\n\t\treturn this.http.get(`${this.baseUrl}/${extensUrl}/${this.routeID}`,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\t\t\t\n\t}\n\n\tUpdateGroup(body: Object, extensUrl: string)\n\t{\n\t\treturn this.http.put(`${this.baseUrl}/${extensUrl}/${this.routeID}`,body,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\t\t\t\n\t}\n\n\tGetPermissions()\n\t{\n\t\treturn this.http.get(`${this.baseUrl}/getAllPermission`, \n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\t\t\n\t}\n\n\tprivate Headers()\n\t{\n\t\tif(this.cookieService.get('token'))\n\t\t{\n\t\t\treturn new HttpHeaders().set('x-access-token', this.cookieService.get('token'))\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconsole.log(\"token is missing\")\n\t\t\tthis.cookieService.delete(\"token\")\n\t\t\tthis.cookieService.delete('username');\n\t\t\tthis.cookieService.delete('userType');\n\t\t\tthis.router.navigate(['/login']);\n\t\t}\n\t}\t\n\n}\n\n","module.exports = \"<form #input=\\\"ngForm\\\">\\n\\n\\t<div class=\\\"form-horizontal2\\\">\\n        <div class=\\\"form-group2 col2-sm-12\\\">\\n\\t\\t\\t<div class=\\\"col2-sm-6\\\">\\n\\t\\t\\t\\t<div class=\\\"input-group-btn\\\">\\n               <button tabindex=\\\"-1\\\" class=\\\"btn btn-white btn2-sm\\\" type=\\\"button\\\" (click)=\\\"selecTag()\\\">&emsp;{{row}}&emsp;</button>\\n               <button data-toggle=\\\"dropdown\\\" class=\\\"btn btn-primary dropdown-toggle btn2-sm\\\" type=\\\"button\\\" (click)=\\\"selecTag()\\\"><span class=\\\"caret\\\"></span></button>\\n               <ul id=\\\"selectList\\\" class=\\\"dropdown-menu\\\">\\n               \\t   <li><a (click)=manageRow(10)>10</a></li>\\n                   <li><a (click)=manageRow(50)>50</a></li>\\n                   <li><a (click)=manageRow(100)>100</a></li>\\n                   <li><a (click)=manageRow(200)>Show all</a></li>                 \\n               </ul>\\n           </div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"col2-sm-6\\\">\\n\\t\\t\\t\\t<div class=\\\"col2-sm-7\\\"></div>\\n\\t\\t\\t\\t<div class=\\\"col2-sm-5\\\">\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" placeholder=\\\"Search for something...\\\" class=\\\"form-control pull-right input-sm\\\" name=\\\"search\\\" [(ngModel)]=\\\"filter\\\"> \\t\\t\\t\\t\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n        </div>                   \\n    </div>\\n\\n \\t<table class=\\\"table table-striped table-bordered table-hover\\\">\\n\\t\\t<thead>\\n\\t\\t\\t<tr>\\t\\t\\t\\t\\n\\t\\t\\t\\t<th style=\\\"width: 50px\\\" (click)=\\\"sort('id',0)\\\" class=\\\"{{class[1][0]}}\\\">\\n\\t\\t\\t\\t\\tID<span class=\\\"fa fa-sort{{class[0][0]}} pull-right\\\"></span>\\n\\t\\t\\t\\t</th>\\t\\t\\t\\t\\n\\t\\t\\t\\t<th (click)=\\\"sort('username',1)\\\" class=\\\"{{class[1][1]}}\\\">\\n\\t\\t\\t\\t\\tUsername<span class=\\\"fa fa-sort{{class[0][1]}} pull-right\\\"></span>\\n\\t\\t\\t\\t</th>\\n\\t\\t\\t\\t<th (click)=\\\"sort('Lname',2)\\\" class=\\\"{{class[1][2]}}\\\">\\n\\t\\t\\t\\t\\tLname<span class=\\\"fa fa-sort{{class[0][2]}} pull-right\\\"></span>\\n\\t\\t\\t\\t</th>\\n\\t\\t\\t\\t<th (click)=\\\"sort('Fname',3)\\\" class=\\\"{{class[1][3]}}\\\">\\n\\t\\t\\t\\t\\tFname<span class=\\\"fa fa-sort{{class[0][3]}} pull-right\\\"></span>\\n\\t\\t\\t\\t</th>\\n\\t\\t\\t\\t<th (click)=\\\"sort('CardID',4)\\\" class=\\\"{{class[1][4]}}\\\">\\n\\t\\t\\t\\t\\tCardID<span class=\\\"fa fa-sort{{class[0][4]}} pull-right\\\"></span>\\n\\t\\t\\t\\t</th>\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t<th style=\\\"width: 40px\\\">Delete</th>\\n\\t\\t\\t</tr>\\n\\t\\t</thead>\\n\\t\\t<tbody>\\n\\t\\t\\t<tr *ngFor = \\\"let member of groupMember | orderBy: key : reverse | filter:filter | paginate: { itemsPerPage: row, currentPage: p, id: 'first' };\\\">\\t\\t\\t\\t\\n\\t\\t\\t\\t<td>{{member.id}}</td>\\n\\t\\t\\t\\t<td>{{member.username}}</td>\\n\\t\\t\\t\\t<td>{{member.Lname}}</td>\\n\\t\\t\\t\\t<td>{{member.Fname}}</td>\\n\\t\\t\\t\\t<td>{{member.cardID}}</td>\\n\\t\\t\\t\\t<td align=\\\"center\\\">\\t\\t\\t\\t\\t\\t\\t\\t                                        \\n          <button type=\\\"submit\\\" class=\\\"btn btn-danger btn-xs\\\" (click)=\\\"deleteMember(member.id)\\\">\\n          \\t<span class=\\\"glyphicon glyphicon-trash\\\"></span>\\n          </button>\\n\\t\\t\\t\\t</td>\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t</tr>\\n\\t\\t</tbody>\\n\\t</table>\\n\\t<p>Showing 1 to {{row}} of {{totalUsr}}</p>\\n\\t<div class=\\\"pull-right\\\">\\n\\t\\t<pagination-controls (pageChange)=\\\"p = $event\\\" id = \\\"first\\\"></pagination-controls>\\n\\t</div><br><br>\\n\\t<button type=\\\"button\\\" class=\\\"btn btn-back btn-sm\\\" (click) = \\\"back()\\\">Back</button>\\t\\n\\t<button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" data-toggle=\\\"modal\\\" href=\\\"#modal-members\\\" (click) = \\\"getData()\\\">Add</button>\\t\\n </form>\\n\\n\\n\\n<div id=\\\"modal-members\\\" class=\\\"modal fade\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content animated bounceInRight\\\">    \\n      <div class=\\\"modal-body\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <form #input=\\\"ngForm\\\">                \\n              <div class=\\\"col-sm-2\\\"></div>                     \\n              <div class=\\\"col-sm-12\\\">\\n              <br>           \\n              <div class=\\\"form-horizontal2\\\">\\n                <div class=\\\"form-group2 col2-sm-12\\\">\\n                  <div class=\\\"col2-sm-6\\\">\\n                    <div class=\\\"input-group-btn\\\">\\n                      <button tabindex=\\\"-1\\\" class=\\\"btn btn-white btn2-sm\\\" type=\\\"button\\\" (click)=\\\"selecTag2()\\\">&emsp;{{row2}}&emsp;</button>\\n                      <button data-toggle=\\\"dropdown\\\" class=\\\"btn btn-primary dropdown-toggle btn2-sm\\\" type=\\\"button\\\" (click)=\\\"selecTag2()\\\"><span class=\\\"caret\\\"></span></button>\\n                      <ul id=\\\"selectList2\\\" class=\\\"dropdown-menu\\\">\\n                        <li><a (click)=manageRow2(8)>8</a></li>\\n                        <li><a (click)=manageRow2(50)>50</a></li>\\n                        <li><a (click)=manageRow2(100)>100</a></li>\\n                        <li><a (click)=manageRow2(200)>Show all</a></li>                 \\n                      </ul>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col2-sm-6\\\">\\n                    <div class=\\\"col2-sm-5\\\"></div>\\n                    <div class=\\\"col2-sm-7\\\">         \\n                      <input type=\\\"text\\\" placeholder=\\\"Search for something...\\\" class=\\\"form-control pull-right input-sm\\\" name=\\\"search\\\" [(ngModel)]=\\\"filter2\\\">        \\n                    </div>\\n                  </div>\\n                </div>                   \\n              </div>\\n                <table class=\\\"table table-fixed table-striped table-hover \\\">\\n                  <thead>\\n                    <tr>                                 \\n                      <th (click)=\\\"sort2('Username',1)\\\" class=\\\"{{class2[1][0]}}\\\">\\n                        Username<span class=\\\"fa fa-sort{{class2[0][0]}} pull-right\\\"></span>\\n                      </th>\\n                      <th (click)=\\\"sort2('Lname',2)\\\" class=\\\"{{class2[1][1]}}\\\">\\n                        Lname<span class=\\\"fa fa-sort{{class2[0][1]}} pull-right\\\"></span>\\n                      </th>\\n                      <th (click)=\\\"sort2('Fname',3)\\\" class=\\\"{{class2[1][2]}}\\\">\\n                        Fname<span class=\\\"fa fa-sort{{class2[0][2]}} pull-right\\\"></span>\\n                      </th>\\n                      <th (click)=\\\"sort2('CardID',4)\\\" class=\\\"{{class2[1][3]}}\\\">\\n                        CardID<span class=\\\"fa fa-sort{{class2[0][3]}} pull-right\\\"></span>\\n                      </th>\\n                      <th style=\\\"width: 25px\\\"></th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>                              \\n                    <tr *ngFor = \\\"let user of notMember | orderBy: key2 : reverse2 | filter:filter2 | paginate: { itemsPerPage: row2, currentPage: p2, id: 'second' };\\\">                                  \\n                      <td style=\\\"width: 169px\\\">{{user.username}}</td>\\n                      <td style=\\\"width: 98px\\\">{{user.Lname}}</td>\\n                      <td style=\\\"width: 98px\\\">{{user.Fname}}</td>\\n                      <td style=\\\"width: 101px\\\">{{user.cardID}}</td>\\n                      <td><input type=\\\"checkbox\\\"  name=\\\"a{{user.id}}\\\" ngModel></td>\\n                    </tr>                                \\n                  </tbody>\\n                </table>\\n                <p>Showing 1 to {{row2}} of {{totalUsr2}}</p>\\n                <div class=\\\"pull-right\\\">\\n                  <pagination-controls (pageChange)=\\\"p2 = $event\\\" id = \\\"second\\\"></pagination-controls>\\n                </div><br><br>\\n              </div>\\n              <div>\\n                <div class=\\\"col-sm-7\\\"></div>                        \\n                <button type=\\\"button\\\" class=\\\"btn btn-warning btn-sm\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n                <button class=\\\"btn btn-primary btn-sm\\\" data-dismiss = \\\"modal\\\" (click) = \\\"addMember(input)\\\" >Add</button>                      \\n              </div> \\n            </form>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, DoCheck } from '@angular/core'\nimport { Location } from '@angular/common';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { AdminMembersService } from './member.service';\nimport { ErrorHandlerService } from '../../../error-handler.service';\n\n\n@Component\n({\n\tselector: 'member-cmp',\n\ttemplateUrl: 'member.component.html'\n})\n\nexport class AdminMemberComponent \n{\n\tgroupMember: object[]\n\tnotMember: object[]\n\n\tclass = [[\"\",\"\",\"\",\"\",\"\"],[\"\",\"\",\"\",\"\",\"\"]]\n\tkey: string = 'id'\n\treverse: boolean = false\n\trow = 10\n\ttotalUsr: number\n\ttempID\n\tp: number = 1\n\tfilter: string\n\n\tclass2 = [[\"\",\"\",\"\",\"\",\"\"],[\"\",\"\",\"\",\"\",\"\"]]\n\tkey2: string = 'id'\n\treverse2: boolean = false\n\trow2 = 8\n\ttotalUsr2: number\n\ttempID2\n\tp2: number = 1\n\tfilter2: string\n\n\tconstructor( private route: ActivatedRoute, private membersService: AdminMembersService,\n\t\t\t\t private router: Router, private errorHandlerService: ErrorHandlerService){}\n\n\tngOnInit()\n\t{\t\t\n\t\tvar id = this.route.snapshot.paramMap.get('id')\t\t\t\t\n\t\tthis.membersService.getAllMem(id)\n\t\t.subscribe( data =>\n\t\t{\n\t\t\tthis.groupMember = data['members']\n\t\t\tthis.totalUsr = this.groupMember.length\n\t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t})\n\t}\n\n\tgetData()\n\t{\t\t\t\n\t\tthis.membersService.getAllNotMem(this.route.snapshot.paramMap.get('id')\t)\n\t\t\t.subscribe( data =>\n\t\t\t{\t\n\t\t\t\tthis.notMember = data['members']\n\t\t\t\tthis.totalUsr2 = this.notMember.length\t\t\t\t\n\t\t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t})\t\n\t}\n\n\tdeleteMember(id: string)\n\t{\t\t\t\n\t\tvar group_id = this.route.snapshot.paramMap.get('id')\n\t\tthis.membersService.DeleteMember(group_id, id).subscribe( data => \n\t\t{\n\t\t\tthis.ngOnInit()\t\n\t\t\t\n\t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t})\n\t\t\t\t\n\t}\n\n\taddMember(input: NgForm)\n\t{\t\t\n\t\tvar body = []\n\t\tthis.notMember.forEach( user =>\n\t\t\t{\n\t\t\t\tif(input.value[\"a\"+user['id']] == true)\n\t\t\t\t{\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t// body.id.unshift(user['id'].toString())\n\t\t\t\t\tbody.push(user['id'])\n\t\t\t\t}\t\t\t\n\t\t\t})\n\t\tconsole.log(body)\n\t\tthis.membersService.AddMember(body,\"groupMember\",this.route.snapshot.paramMap.get('id'))\n\t\t.subscribe( response =>\n\t\t{\n\t\t\tthis.ngOnInit()\t\t\n\t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t})\n\t}\n\n\tback()\n\t{\t\t\n\t\tthis.router.navigate(['home/admin/groups'])\n\t}\n\n\n\tsort(key, id: number)\n\t{\t\t\t\t\n\t\tthis.key = key;\n\t\tthis.reverse = !this.reverse;\n\t\tif(this.class[0][id] == \"\" || this.class[0][id] == \"-asc\")\n\t\t{\n\t\t\tthis.class[0][id] = \"-desc\"\n\t\t}\n\t\telse if(this.class[0][id] == \"-desc\")\n\t\t{\n\t\t\tthis.class[0][id] = \"-asc\"\n\t\t}\t\t\n\t\tthis.class[1][this.tempID] = \"\"\n\t\tthis.class[1][id] = \"active\"\n\t\tthis.tempID = id\t\t\n\t}\t\n\n\tsort2(key, id: number)\n\t{\t\t\t\t\n\t\tthis.key2 = key;\n\t\tthis.reverse2 = !this.reverse2;\n\t\tif(this.class2[0][id] == \"\" || this.class2[0][id] == \"-asc\")\n\t\t{\n\t\t\tthis.class2[0][id] = \"-desc\"\n\t\t}\n\t\telse if(this.class2[0][id] == \"-desc\")\n\t\t{\n\t\t\tthis.class2[0][id] = \"-asc\"\n\t\t}\t\t\n\t\tthis.class2[1][this.tempID] = \"\"\n\t\tthis.class2[1][id] = \"active\"\n\t\tthis.tempID2 = id\t\t\n\t}\t\n\n\n\tmanageRow(length: number)\n\t{\t\t\n\t\tthis.row = length\n\t\tif(length == 200)\n\t\t{\n\t\t\tthis.row = this.totalUsr\n\t\t}\n\t\tthis.selecTag()\t\n\t}\n\n\tmanageRow2(length: number)\n\t{\t\t\n\t\tthis.row2 = length\n\t\tif(length == 200)\n\t\t{\n\t\t\tthis.row2 = this.totalUsr2\n\t\t}\n\t\tthis.selecTag2()\t\t\n\t}\n\n\tselecTag()\n\t{\n\t\tvar class_name = document.getElementById(\"selectList\").className\n\t\tif(class_name == \"dropdown-menu\")\n\t\t{\n\t\t\tdocument.getElementById(\"selectList\").className += \" show\"\n\t\t}\n\t\tif(class_name == \"dropdown-menu show\")\n\t\t{\n\t\t\tdocument.getElementById(\"selectList\").className = \"dropdown-menu\"\n\t\t}\n\t}\n\n\tselecTag2()\n\t{\n\t\tvar class_name = document.getElementById(\"selectList2\").className\n\t\tif(class_name == \"dropdown-menu\")\n\t\t{\n\t\t\tdocument.getElementById(\"selectList2\").className += \" show\"\n\t\t}\n\t\tif(class_name == \"dropdown-menu show\")\n\t\t{\n\t\t\tdocument.getElementById(\"selectList2\").className = \"dropdown-menu\"\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router }    from '@angular/router';\nimport { environment } from './../../../../environments/environment'; \n\n\n@Injectable()\nexport class AdminMembersService\n{\n\n\tconstructor ( private http: HttpClient, private cookieService: CookieService, private router: Router ){}\n\tprivate baseUrl = environment.backend_uri;\n\n\tgetAllMem(id: string)\n\t{\n\t\treturn this.http.get(`${this.baseUrl}/groupMember/${id}`,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\t\t\t\n\t}\n\n\tDeleteMember(group_id: string, user_id: string)\n\t{\t\t\t\t\n\t\treturn this.http.delete(`${this.baseUrl}/deleteMember/${group_id}/${user_id}`,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\t\t\t\n\t}\n\n\tgetAllNotMem(id: string)\n\t{\n\t\treturn this.http.get(`${this.baseUrl}/shwNotMem/${id}`,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\t\t\t  \n\t}\n\n\tAddMember(body: object, extensUrl: string, id: string)\n\t{\t\t\n        return this.http.post(`${this.baseUrl}/${extensUrl}/${id}`,body, \n        {\n        \theaders: this.Headers()\n        })      \n\t}\n\n\n\tprivate Headers()\n\t{\n\t\tif(this.cookieService.get('token'))\n\t\t{\n\t\t\treturn new HttpHeaders().set('x-access-token', this.cookieService.get('token'))\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconsole.log(\"token is missing\")\n\t\t\tthis.cookieService.delete(\"token\")\n\t\t\tthis.cookieService.delete('username');\n\t\t\tthis.cookieService.delete('userType');\n\t\t\tthis.router.navigate(['/login']);\n\t\t}\n\t}\t\n\n}\n","module.exports = \"<div class=\\\"col2-sm-10\\\"><div class=\\\"col-sm-6\\\"></div><p style=\\\"color: red\\\">{{message}}</p></div>\\n<form #input=\\\"ngForm\\\">\\n\\n\\t<div class=\\\"form-horizontal2\\\">\\n        <div class=\\\"form-group2 col2-sm-12\\\">\\n\\t\\t\\t<div class=\\\"col2-sm-6\\\">\\n\\t\\t\\t\\t<div class=\\\"input-group-btn\\\">\\n               <button tabindex=\\\"-1\\\" class=\\\"btn btn-white btn2-sm\\\" type=\\\"button\\\" (click)=\\\"selecTag()\\\">&emsp;{{row}}&emsp;</button>\\n               <button data-toggle=\\\"dropdown\\\" class=\\\"btn btn-primary dropdown-toggle btn2-sm\\\" type=\\\"button\\\" (click)=\\\"selecTag()\\\"><span class=\\\"caret\\\"></span></button>\\n               <ul id=\\\"selectList\\\" class=\\\"dropdown-menu\\\">\\n               \\t   <li><a (click)=manageRow(10)>10</a></li>\\n                   <li><a (click)=manageRow(50)>50</a></li>\\n                   <li><a (click)=manageRow(100)>100</a></li>\\n                   <li><a (click)=manageRow(200)>Show all</a></li>                 \\n               </ul>\\n           </div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"col2-sm-6\\\">\\n\\t\\t\\t\\t<div class=\\\"col2-sm-7\\\"></div>\\n\\t\\t\\t\\t<div class=\\\"col2-sm-5\\\">\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" placeholder=\\\"Search for something...\\\" class=\\\"form-control pull-right input-sm\\\" name=\\\"search\\\" [(ngModel)]=\\\"filter\\\"> \\t\\t\\t\\t\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n        </div>                   \\n    </div>\\n    <p>Showing 1 to {{row}} of {{totalUsr}}</p>\\n \\t<table class=\\\"table table-striped table-bordered table-hover\\\">\\n\\t\\t<thead>\\n\\t\\t\\t<tr>\\t\\t\\t\\t\\n\\t\\t\\t\\t<th style=\\\"width: 50px\\\" (click)=\\\"sort('id',0)\\\" class=\\\"{{class[1][0]}}\\\">\\n\\t\\t\\t\\t\\tID<span class=\\\"fa fa-sort{{class[0][0]}} pull-right\\\"></span>\\n\\t\\t\\t\\t</th>\\n\\t\\t\\t\\t<th (click)=\\\"sort('name',1)\\\" class=\\\"{{class[1][1]}}\\\">\\n\\t\\t\\t\\t\\tName<span class=\\\"fa fa-sort{{class[0][1]}} pull-right\\\"></span>\\n\\t\\t\\t\\t</th>\\n\\t\\t\\t\\t<th (click)=\\\"sort('description',2)\\\" class=\\\"{{class[1][2]}}\\\">\\n\\t\\t\\t\\t\\tDescription<span class=\\\"fa fa-sort{{class[0][2]}} pull-right\\\"></span>\\n\\t\\t\\t\\t</th>\\n\\t\\t\\t\\t<th style=\\\"width: 40px\\\">Edit</th>\\n\\t\\t\\t\\t<th style=\\\"width: 40px\\\">Delete</th>\\n\\t\\t\\t</tr>\\n\\t\\t</thead>\\n\\t\\t<tbody>\\n\\t\\t\\t<tr *ngFor=\\\"let permission of permissions | orderBy: key : reverse | filter:filter | paginate: { itemsPerPage: row, currentPage: p };\\\">\\t\\t\\t\\t\\n\\t\\t\\t\\t<td>{{permission.id}}</td>\\n\\t\\t\\t\\t<td>{{permission.name}}</td>\\n\\t\\t\\t\\t<td>{{permission.description}}</td>\\n\\t\\t\\t\\t<td align=\\\"center\\\">\\t\\t\\t\\t\\t\\t\\t\\t\\t                \\n                    <button class=\\\"btn btn-primary btn-xs\\\" (click) = \\\"getUpdateData(permission.id)\\\" data-toggle=\\\"modal\\\" href=\\\"#modal-permissions\\\">\\n                    \\t<span class=\\\"glyphicon glyphicon-pencil\\\"></span>\\n                    </button>\\n\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t<td align=\\\"center\\\">\\t\\t\\t\\t\\t\\t\\t\\t                                        \\n                    <button type=\\\"submit\\\" class=\\\"btn btn-danger btn-xs\\\" (click)=\\\"deletePermission(permission.id)\\\">\\n                    \\t<span class=\\\"glyphicon glyphicon-trash\\\"></span>\\n                    </button>\\n\\t\\t\\t\\t</td>\\n\\t\\t\\t</tr>\\n\\t\\t</tbody>\\n\\t</table>\\n\\t<p>Showing 1 to {{row}} of {{totalUsr}}</p>\\n\\t<div class=\\\"pull-right\\\">\\n\\t\\t<pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n\\t</div><br><br>\\n\\t<button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" data-toggle=\\\"modal\\\" href=\\\"#modal-permissions\\\" (click) = \\\"getData()\\\">Add</button>\\t\\n </form>\\n\\n\\n<div id=\\\"modal-permissions\\\" class=\\\"modal fade\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog\\\">\\n      <div class=\\\"modal-content animated {{modalAnimation}}\\\">\\n          <div class=\\\"modal-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-3\\\"></div>\\n                <div class=\\\"col-sm-6\\\"><p style=\\\"color: red\\\">{{message}}</p></div>\\n                <div class=\\\"col-sm-3\\\"></div>\\n              </div>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-11\\\">              \\n                  <div class=\\\"col-sm-1\\\">\\n                  </div>               \\n                  <form [formGroup]=\\\"modalForm\\\"  novalidate>        \\n                    <div class=\\\"col-sm-11\\\">\\n\\n                      <div *ngIf = \\\"add == 'addPermission' || update == 'updatePermission'\\n                       || add == 'addGroup' || update == 'updateGroup'\\\" class=\\\"form-horizontal\\\"> \\n                       <div class=\\\"form-group\\\">\\n                        <label class=\\\"col-lg-2 control-label\\\">Name:</label>\\n                          <div class=\\\"col-lg-10\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Name\\\" formControlName=\\\"name\\\" >\\n                          </div>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                          <label class=\\\"col-lg-2 control-label\\\">Description:</label>                          \\n                          <div class=\\\"col-lg-10\\\">\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"description\\\" placeholder=\\\"Enter description ...\\\" ></textarea>\\n                          </div>\\n                        </div>\\n                      </div>                                          \\n\\n                      <div *ngIf = \\\"add == 'addPermission' && modalForm.status == 'VALID'\\\">\\n                        <div class=\\\"col-sm-6\\\"></div>                        \\n                        <button type=\\\"button\\\" class=\\\"btn btn-warning btn-sm\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n                        <button class=\\\"btn btn-primary btn-sm\\\" (click) = \\\"addPermission()\\\" >Add</button>\\n                      </div> \\n\\n                      <div *ngIf = \\\"add == 'addPermission' && modalForm.status == 'INVALID'\\\">\\n                        <div class=\\\"col-sm-6\\\"></div>                        \\n                        <button type=\\\"button\\\" class=\\\"btn btn-warning btn-sm\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n                        <button class=\\\"btn btn-primary btn-sm\\\"  disabled=\\\"\\\">Add</button>\\n                      </div>                 \\n\\n                      <div *ngIf = \\\"update == 'updatePermission'\\\">\\n                        <div class=\\\"col-sm-6\\\"></div>                        \\n                        <button type=\\\"button\\\" class=\\\"btn btn-warning btn-sm\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n                        <button class=\\\"btn btn-primary btn-sm\\\" (click) = \\\"updatePermission()\\\" >Save</button>                      \\n                      </div>                      \\n\\n                      </div>\\n                    </form>\\n                </div>\\n          </div>\\n      </div>\\n      </div>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit, DoCheck} from '@angular/core'\nimport { NgForm } from '@angular/forms';\nimport { FormBuilder, FormGroup, Validators } \tfrom '@angular/forms';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router }    from '@angular/router';\n\nimport { AdminPermissionService } from './permission.service';\nimport { ErrorHandlerService } from '../../../error-handler.service';\ndeclare var $: any;\n\n@Component\n({\n\tselector: 'permission-cmp',\n\ttemplateUrl: 'permission.component.html'\n})\n\nexport class AdminPermissionComponent\n{\n\tpermissions: object[]\n\tmessage: string\n\tmodalForm: FormGroup\n\t\n\tadd: string\n\tupdate: string\n\tmodalAnimation: string\n\n\tclass = [[\"\",\"\",\"\"],[\"\",\"\",\"\"]]\n\tkey: string = 'id'\n\treverse: boolean = false\n\trow = 10\n\ttotalUsr: number\n\ttempID\n\tfilter: string\n\n\tconstructor( private permissionService: AdminPermissionService, private formBuilder: FormBuilder, \n\t\t           private route: Router,  private errorHandlerService: ErrorHandlerService ){ this.createForm() }\n\n\tcreateForm()\n\t{\n\t\tthis.modalForm = this.formBuilder.group\n\t\t({\n\t\t    \t\t\t\n\t\t})    \n\t}\n\n\tngOnInit()\n\t{\n\t\tthis.permissionService\n\t\t.getAll()\n\t\t.subscribe(data => \n\t\t{\n\t\t\tthis.permissions = data['permissions']\n\t\t\tthis.totalUsr = this.permissions.length\n\t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n        this.message = error.error.message;\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t});\n\t}\n\n\tgetData()\n\t{\n\t\tthis.update = \"\"\t    \t\t  \t\t\n\t\tthis.add = \"addPermission\"\n\t\tthis.modalAnimation = \"flipInY\" \n\t\tthis.modalForm = this.formBuilder.group\n\t\t({\n\t\t\tname: ['',Validators.required],\n\t\t\tdescription: ['', Validators.required]\n\t\t})    \t\t   \t\n\t}\n\n\taddPermission()\n\t{\n\t\tif ( this.modalForm.status == \"VALID\")\n\t\t{\t\t\t\t\t\t\t\t\n\t\t\tthis.permissionService.AddPermission(this.modalForm.value,\"permissions\").subscribe( response =>\n\t\t\t{\n\t\t\t\tthis.message = \"\"\n        $(\"#modal-permissions\").modal('hide');\n\t\t\t\tthis.ngOnInit()\t\t\t\n\t\t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n        this.message = error.error.message;\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t})\t\t\t\t\n\t\t}\t\t\n\t}\n\n\tdeletePermission(id: any)\n\t{\n\t\t\t\t\n\t\tthis.permissionService.deletePermission(id).subscribe( permission => \n\t\t{\n\t\t\tthis.ngOnInit()\n\t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n        this.message = error.error.message;\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t})\n\t}\n\n\tgetUpdateData(id: string)\n\t{\n\t\tthis.add = \"\"    \n\t\tthis.permissionService.routeID = id\t\t\n\t\tthis.modalAnimation = \"fadeInDown\"    \t\t\n\t\tthis.permissionService.GetPermission(\"permission\").subscribe( data => \n\t\t{\n\t\t\tthis.mapData(data['data'])\n\t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n        this.message = error.error.message;\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t})\n\t}\n\n\tupdatePermission()\n\t{\n\t\tif (this.modalForm.status == \"VALID\")\n\t\t{\n\t\t\tthis.permissionService.UpdatePermission(this.modalForm.value,\"permission\")\n\t\t\t.subscribe( data => \n    \t\t{\n          $(\"#modal-permissions\").modal('hide');\n\t\t\t\t\tthis.message = \"\"\n\t\t\t\t\tthis.ngOnInit()\n    \t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n        this.message = error.error.message;\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t})\n\t\t}\n\t}\t\n\n\tsort(key, id: number)\n\t{\t\t\t\t\n\t\tthis.key = key;\n\t\tthis.reverse = !this.reverse;\n\t\tif(this.class[0][id] == \"\" || this.class[0][id] == \"-asc\")\n\t\t{\n\t\t\tthis.class[0][id] = \"-desc\"\n\t\t}\n\t\telse if(this.class[0][id] == \"-desc\")\n\t\t{\n\t\t\tthis.class[0][id] = \"-asc\"\n\t\t}\t\t\n\t\tthis.class[1][this.tempID] = \"\"\n\t\tthis.class[1][id] = \"active\"\n\t\tthis.tempID = id\t\t\n\t}\n\n\tmanageRow(length: number)\n\t{\t\t\n\t\tthis.row = length\n\t\tif(length == 200)\n\t\t{\n\t\t\tthis.row = this.totalUsr\n\t\t}\n\t\tthis.selecTag()\t\t\n\t}\n\tp: number = 1;\n\n\n\tprivate mapData(data: object)\n\t{\t\t\n\t\tthis.modalForm = this.formBuilder.group\n\t\t({\n\t\t\tname: [data[\"name\"],Validators.required],\n\t\t\tdescription: [data[\"description\"], Validators.required]\n\t\t})\n\t\tthis.update = \"updatePermission\"\t   \n\t}\n\n\tselecTag()\n\t{\n\t\tvar class_name = document.getElementById(\"selectList\").className\n\t\tif(class_name == \"dropdown-menu\")\n\t\t{\n\t\t\tdocument.getElementById(\"selectList\").className += \" show\"\n\t\t}\n\t\tif(class_name == \"dropdown-menu show\")\n\t\t{\n\t\t\tdocument.getElementById(\"selectList\").className = \"dropdown-menu\"\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router }    from '@angular/router';\nimport { environment } from './../../../../environments/environment'; \n\n\n@Injectable()\nexport class AdminPermissionService\n{\n\n\trouteID: string\n\n\tconstructor ( private http: HttpClient, private cookieService: CookieService, private router: Router ){}\n\tprivate baseUrl = environment.backend_uri;\n\n\tgetAll()\n\t{\n\t\treturn this.http.get(`${this.baseUrl}/permissions`,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\n\t}\n\n\tdeletePermission(id:number)\n\t{\t\t\n\t\treturn this.http.delete(`${this.baseUrl}/permission/${id}`,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\t\t\t\n\t}\n\n\tAddPermission(body: Object, extensUrl: string)\n\t{\t\t\n\t\treturn this.http.post(`${this.baseUrl}/${extensUrl}`,body,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})        \n\t}\n\n\tGetPermission(extensUrl: string)\n\t{\n\t\treturn this.http.get(`${this.baseUrl}/${extensUrl}/${this.routeID}`,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\t\t\t\n\t}\n\n\tUpdatePermission(body: Object, extensUrl: string)\n\t{\n\t\treturn this.http.put(`${this.baseUrl}/${extensUrl}/${this.routeID}`,body,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\t\t\n\t}\n\n\tprivate Headers()\n\t{\n\t\tif(this.cookieService.get('token'))\n\t\t{\n\t\t\treturn new HttpHeaders().set('x-access-token', this.cookieService.get('token'))\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconsole.log(\"token is missing\")\n\t\t\tthis.cookieService.delete(\"token\")\n\t\t\tthis.cookieService.delete('username');\n\t\t\tthis.cookieService.delete('userType');\n\t\t\tthis.router.navigate(['/login']);\n\t\t}\n\t}\t\n\n}\n\n\n","module.exports = \"\\n<!-- <div class=\\\"tabs-container\\\"> -->\\n\\t<!-- <ul class=\\\"nav nav-tabs\\\">\\n\\t\\t<li id=\\\"room_list_tab\\\" class=\\\"active\\\"><a (click)=\\\"change_view('room_list')\\\">Table view</a></li>\\n\\t\\t<li id=\\\"room_card_tab\\\" class=\\\"\\\"><a (click)=\\\"change_view('room_card')\\\">Card view</a></li>\\n\\t</ul> -->\\n\\t<!-- <div class=\\\"tab-content\\\"> -->\\n\\t<!-- \\t<div id=\\\"room_list\\\" class=\\\"tab-pane active\\\">\\n\\t\\t\\t<div class=\\\"panel-body\\\"> -->\\n\\t\\t\\t\\t<div class=\\\"form-horizontal2\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"form-group2 col2-sm-12\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col2-sm-6\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-group-btn\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<button tabindex=\\\"-1\\\" class=\\\"btn btn-white btn2-sm\\\" type=\\\"button\\\" (click)=\\\"selecTag()\\\">&emsp;{{row}}&emsp;</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t<button data-toggle=\\\"dropdown\\\" class=\\\"btn btn-primary dropdown-toggle btn2-sm\\\" type=\\\"button\\\" (click)=\\\"selecTag()\\\"><span class=\\\"caret\\\"></span></button>\\n\\t\\t\\t\\t\\t\\t\\t\\t<ul id=\\\"selectList\\\" class=\\\"dropdown-menu\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<li><a (click)=manageRow(10)>10</a></li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<li><a (click)=manageRow(50)>50</a></li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<li><a (click)=manageRow(100)>100</a></li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<li><a (click)=manageRow(200)>Show all</a></li>                 \\n\\t\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col2-sm-6\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col2-sm-7\\\"></div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col2-sm-5\\\">\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" placeholder=\\\"Search for something...\\\" class=\\\"form-control pull-right input-sm\\\" name=\\\"search\\\" [(ngModel)]=\\\"filter\\\"> \\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>                   \\n\\t\\t\\t\\t</div>\\t\\t\\t\\t\\n\\t\\t\\t\\t<table class=\\\"table table-striped table-bordered table-hover\\\">\\n\\t\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t\\t\\t<tr>\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<th style=\\\"width: 50px\\\" (click)=\\\"sort('id',0)\\\" class=\\\"{{class[1][0]}}\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\tID<span class=\\\"fa fa-sort{{class[0][0]}} pull-right\\\"></span>\\n\\t\\t\\t\\t\\t\\t\\t</th>\\n\\t\\t\\t\\t\\t\\t\\t<th (click)=\\\"sort('name',1)\\\" class=\\\"{{class[1][1]}}\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\tName<span class=\\\"fa fa-sort{{class[0][1]}} pull-right\\\"></span>\\n\\t\\t\\t\\t\\t\\t\\t</th>\\n\\t\\t\\t\\t\\t\\t\\t<th (click)=\\\"sort('description',2)\\\" class=\\\"{{class[1][2]}}\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\tDescription<span class=\\\"fa fa-sort{{class[0][2]}} pull-right\\\"></span>\\n\\t\\t\\t\\t\\t\\t\\t</th>\\n\\t\\t\\t\\t\\t\\t\\t<th (click)=\\\"sort('description',3)\\\" class=\\\"{{class[1][3]}}\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\tGroups<span class=\\\"fa fa-sort{{class[0][3]}} pull-right\\\"></span>\\n\\t\\t\\t\\t\\t\\t\\t</th>\\n\\t\\t\\t\\t\\t\\t\\t<th style=\\\"width: 40px\\\">Edit</th>\\n\\t\\t\\t\\t\\t\\t\\t<th style=\\\"width: 40px\\\">Delete</th>\\n\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t</thead>\\n\\t\\t\\t\\t\\t<tbody>\\n\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let room of rooms | orderBy: key : reverse | filter:filter | paginate: { itemsPerPage: row, currentPage: p };\\\">\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<td (click)=GroupAccess(room.id)>{{room.id}}</td>\\n\\t\\t\\t\\t\\t\\t\\t<td (click)=GroupAccess(room.id)>{{room.name}}</td>\\n\\t\\t\\t\\t\\t\\t\\t<td (click)=GroupAccess(room.id)>{{room.description}}</td>\\n\\t\\t\\t\\t\\t\\t\\t<td style=\\\"width: 80px\\\" (click)=GroupAccess(room.id)>{{room.groups}}</td>\\n\\t\\t\\t\\t\\t\\t\\t<td align=\\\"center\\\">\\t\\t\\t\\t\\t\\t\\t\\t\\t                \\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-primary btn-xs\\\" (click) = \\\"getUpdateData(room.id)\\\" data-toggle=\\\"modal\\\" href=\\\"#modal-rooms\\\"><span class=\\\"glyphicon glyphicon-pencil\\\"></span></button>\\n\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t<td align=\\\"center\\\">\\t\\t\\t\\t\\t\\t\\t\\t                                        \\n\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-danger btn-xs\\\" (click)=\\\"deleteRoom(room.id)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"glyphicon glyphicon-trash\\\"></span>\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t</tbody>\\n\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t<p>Showing 1 to {{row}} of {{totalUsr}}</p>\\n\\t\\t\\t\\t<div class=\\\"pull-right\\\">\\n\\t\\t\\t\\t\\t<pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n\\t\\t\\t\\t</div><br><br>\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" data-toggle=\\\"modal\\\" href=\\\"#modal-rooms\\\" (click) = \\\"getData()\\\">Add</button>\\n\\t<!-- \\t\\t</div>\\n\\t\\t</div> -->\\n\\t\\t<!-- <div id=\\\"room_card\\\" class=\\\"tab-pane\\\">\\n\\t\\t\\t<div>\\n\\t\\t\\t\\t<div class=\\\"col2-sm-10\\\"><div class=\\\"col-sm-6\\\"></div><p style=\\\"color: red\\\">{{message}}</p></div>\\n\\t\\t\\t\\t<div class=\\\"wrapper wrapper-content animated fadeInRight\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div *ngFor = \\\"let room of rooms  | filter:filter | paginate: { itemsPerPage: row, currentPage: p };\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-lg-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"grow\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"contact-box\\\">                       \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-lg-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"text-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<img alt=\\\"image\\\" class=\\\"img-circle m-t-xs img-responsive\\\" src=\\\"assets/img/letters/{{room.name[0]}}.png\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"m-t-xs font-bold\\\">Room: {{room.id}}</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<dir class=\\\"form-horizontal\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">  \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-danger btn-xs\\\" (click)=\\\"deleteRoom(room.id)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"glyphicon glyphicon-trash\\\"></span></button>\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-primary btn-xs\\\" (click) = \\\"getUpdateData(room.id)\\\" data-toggle=\\\"modal\\\" href=\\\"#modal-rooms\\\"><span class=\\\"glyphicon glyphicon-pencil\\\"></span></button> \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div> \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</dir> \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a (click)=GroupAccess(room.id)>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-8\\\">                    \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h3><strong>{{room.name}}</strong></h3>                    \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<strong>Description</strong><br>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p>{{room.description}}</p><br>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-container *ngIf = \\\"room.description.length <= 25\\\"><br></ng-container>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<strong>Number of groups:</strong>&nbsp;{{room.groups}}<br>\\t\\t\\t                                    \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"clearfix\\\"></div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n\\t\\t\\t\\t\\t</div>            \\n\\n\\t\\t\\t\\t\\t<div class=\\\"footer fixed\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"pull-right\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group form-horizontal\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"col-lg-2 control-label\\\">Search:</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-lg-10\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"search\\\" [(ngModel)]=\\\"filter\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>   \\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" data-toggle=\\\"modal\\\" href=\\\"#modal-rooms\\\" (click) = \\\"getData()\\\">Add</button>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div> -->\\n\\t\\t<!-- </div> -->\\n\\n\\n\\t<!-- </div> -->\\n\\n\\t<div id=\\\"modal-rooms\\\" class=\\\"modal fade\\\" aria-hidden=\\\"true\\\">\\n\\t\\t<div class=\\\"modal-dialog\\\">\\n\\t\\t\\t<div class=\\\"modal-content animated {{modalAnimation}}\\\">\\n\\t\\t\\t\\t<div class=\\\"modal-body\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-3\\\"></div>\\n            <div class=\\\"col-sm-6\\\"><p style=\\\"color: red\\\">{{message}}</p></div>\\n            <div class=\\\"col-sm-3\\\"></div>\\n          </div>\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-11\\\">              \\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-1\\\">\\n\\t\\t\\t\\t\\t\\t\\t</div>               \\n\\t\\t\\t\\t\\t\\t\\t<form [formGroup]=\\\"modalForm\\\"  novalidate>        \\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-11\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf = \\\"add == 'addRoom' || update == 'updateRoom'\\\" class=\\\"form-horizontal\\\"> \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"col-lg-2 control-label\\\">Name:</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-lg-10\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Name\\\" formControlName=\\\"name\\\" >\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"col-lg-2 control-label\\\">Description:</label>                          \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-lg-10\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<textarea class=\\\"form-control\\\" formControlName=\\\"description\\\" placeholder=\\\"Enter description ...\\\" ></textarea>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>                                          \\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf = \\\"add == 'addRoom' && modalForm.status == 'VALID'\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-6\\\"></div>                        \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-warning btn-sm\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-primary btn-sm\\\" (click) = \\\"addRoom()\\\" >Add</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div> \\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf = \\\"add == 'addRoom' && modalForm.status == 'INVALID'\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-6\\\"></div>                        \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-warning btn-sm\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-primary btn-sm\\\" disabled=\\\"\\\">Add</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>                \\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf = \\\"update == 'updateRoom'\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-6\\\"></div>                        \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-warning btn-sm\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-primary btn-sm\\\" (click) = \\\"updateRoom()\\\" >Save</button>                      \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>                      \\n\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</form>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\n\"","import { Component, OnInit, DoCheck } from '@angular/core'\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } \tfrom '@angular/forms';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { AdminRoomService } from './room.service';\nimport { ErrorHandlerService } from '../../../error-handler.service';\ndeclare var $: any;\n\n@Component\n({\n\tselector: 'room-cmp',\n\ttemplateUrl: 'room.component.html'\n})\n\nexport class AdminRoomComponent\n{\n\n\trooms: object[]\n\tmessage: string\n\n\tmodalForm: FormGroup\t\n\tadd: string\n\tupdate: string\n\tmodalAnimation: string\n\n\tclass = [[\"\",\"\",\"\",\"\"],[\"\",\"\",\"\",\"\"]]\n\tkey: string = 'id'\n\treverse: boolean = false\n\ttotalUsr: number\n\tfilter: string\n\trow = 10\n\tp = 1\n\ttempID\n\n\tconstructor( private roomService: AdminRoomService,private router: Router, private errorHandlerService: ErrorHandlerService, \n\t\t         private formBuilder: FormBuilder){this.createForm()}\n\n\n\tcreateForm()\n\t{\n\t\tthis.modalForm = this.formBuilder.group\n\t\t({\n\t\t    \t\t\t\n\t\t})    \n\t}\n\n\tngOnInit()\n\t{\n\t\tthis.roomService.getRooms()\n\t\t.subscribe( data =>\n\t\t{\n\t\t\tthis.rooms  = data['rooms']\n\t\t\tthis.totalUsr = this.rooms.length\t\t\n\t\t},(error: HttpErrorResponse) =>\n      {\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t})\n\t}\n\n\tgetData()\n\t{\n\t\tthis.update = \"\"\n\t\tthis.add = \"addRoom\"    \t\t\n\t\tthis.modalAnimation = \"fadeInDown\"\n\t\tthis.modalForm = this.formBuilder.group\n\t\t({\n\t\t\tname: ['',Validators.required],\n\t\t\tdescription: ['', Validators.required]\n\t\t})    \t\n\t}\n\n\taddRoom()\n\t{\n\t\tif ( this.modalForm.status == \"VALID\")\n\t\t{\t\t\t\t\t\t\t\t\n\t\t\tthis.roomService.AddRoom(this.modalForm.value,\"rooms\").subscribe( response =>\n\t\t\t{\t\n\t\t\t\tthis.message = \"\"\n\t\t\t\tthis.ngOnInit()\t\t\t\n        $(\"#modal-rooms\").modal('hide');\n\t\t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n        this.message = error.error.message;\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t})\t\t\t\t\n\t\t}\t\n\t}\n\n\tdeleteRoom(id: string)\n\t{\n\t\tthis.roomService.DeleteRoom(id)\n\t\t.subscribe( room =>\n\t\t{\n\t\t\tthis.ngOnInit()\n\t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t})\n\t}\n\n\tgetUpdateData(id: string)\n\t{\n\t\tthis.roomService.roomID = id\n\t\tthis.add = \"\"    \t\t\n\t\tthis.modalAnimation = \"fadeInDown\"\n\t\tthis.roomService.GetRoom(\"room\").subscribe( data =>\n\t\t{\n\t\t\tthis.mapData(data['data'])\n\t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t})\n\t}\n\n\tupdateRoom()\n\t{    \t\t\n\t\tif ( this.modalForm.status == \"VALID\")\n\t\t{\n\t\t\tthis.roomService.UpdateRoom(this.modalForm.value,\"room\")\n\t\t\t.subscribe( data => \n\t\t\t{\n\t\t\t\tthis.message = \"\"\n        $(\"#modal-rooms\").modal('hide');\n\t\t\t\tthis.ngOnInit()\n      },(error: HttpErrorResponse) => {\n        console.error(error);\n        this.message = error.error.message;\n        this.errorHandlerService.handleError(error)\n\t\t\t})\n\t\t}\t\t\n\t}\n\n\tGroupAccess(id: string)\n\t{\n\t\tthis.router.navigate(['/home/admin/roomAccess',id])\n\t}\n\n\tchange_view(view: string)\n\t{\t\t\t\t\n\t\tif(view == 'room_list')\n\t\t{\n\t\t\tconsole.log(document.getElementById(\"room_list\").style)\n\t\t\tdocument.getElementById(\"room_list\").className = 'tab-panel active'\n\t\t\tdocument.getElementById(\"room_card\").className = 'tab-panel'\n\t\t\tdocument.getElementById(\"room_list\").style.display = 'block'\n\t\t\tdocument.getElementById(\"room_card\").style.display = 'none'\n\t\t\tdocument.getElementById(\"room_list_tab\").className = 'active'\n\t\t\tdocument.getElementById(\"room_card_tab\").className = ''\n\t\t}\n\t\tif(view == 'room_card')\n\t\t{\n\n\t\t\tdocument.getElementById(\"room_list\").className = 'tab-panel'\n\t\t\tdocument.getElementById(\"room_card\").className = 'tab-panel active'\n\t\t\tdocument.getElementById(\"room_list\").style.display = 'none'\n\t\t\tdocument.getElementById(\"room_card\").style.display = 'block'\n\t\t\tdocument.getElementById(\"room_list_tab\").className = ''\n\t\t\tdocument.getElementById(\"room_card_tab\").className = 'active'\n\t\t}\n\t}\n\n\tmanageRow(length: number)\n\t{\t\t\n\t\tthis.row = length\n\t\tif(length == 200)\n\t\t{\n\t\t\tthis.row = this.totalUsr\n\t\t}\t\t\n\t\tthis.selecTag()\n\t}\n\n\tsort(key, id: number)\n\t{\t\t\t\t\n\t\tthis.key = key;\n\t\tthis.reverse = !this.reverse;\n\t\tif(this.class[0][id] == \"\" || this.class[0][id] == \"-asc\")\n\t\t{\n\t\t\tthis.class[0][id] = \"-desc\"\n\t\t}\n\t\telse if(this.class[0][id] == \"-desc\")\n\t\t{\n\t\t\tthis.class[0][id] = \"-asc\"\n\t\t}\t\t\n\t\tthis.class[1][this.tempID] = \"\"\n\t\tthis.class[1][id] = \"active\"\n\t\tthis.tempID = id\t\t\n\t}\n\n\tselecTag()\n\t{\n\t\tvar class_name = document.getElementById(\"selectList\").className\n\t\tif(class_name == \"dropdown-menu\")\n\t\t{\n\t\t\tdocument.getElementById(\"selectList\").className += \" show\"\n\t\t}\n\t\tif(class_name == \"dropdown-menu show\")\n\t\t{\n\t\t\tdocument.getElementById(\"selectList\").className = \"dropdown-menu\"\n\t\t}\n\t}\n\n\tprivate mapData(data: object)\n\t{\n\t\tconsole.log(\"====>\",data)\n\t\tthis.modalForm = this.formBuilder.group\n\t\t({\n\t\t\tname: [data[\"name\"],Validators.required],\n\t\t\tdescription: [data[\"description\"], Validators.required]\n\t\t})\n\t\tthis.update = \"updateRoom\"\n\t}\t\n\t\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router }    from '@angular/router';\nimport { environment } from './../../../../environments/environment'; \n\n\n\n@Injectable()\nexport class AdminRoomService\n{\n  \tprivate baseUrl = environment.backend_uri;\n\troomID: string\n\n\tconstructor ( private http: HttpClient, private cookieService: CookieService, private router: Router ){}\n\n\tgetRooms()\n\t{\n\t\treturn this.http.get(`${this.baseUrl}/rooms`,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\n\t}\n\n\tDeleteRoom(id: string)\n\t{\n\t\treturn this.http.delete(`${this.baseUrl}/room/${id}`,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\n\t}\n\n\tAddRoom(body: Object, extensUrl: string)\n\t{\t\t\t\t\n        return this.http.post(`${this.baseUrl}/${extensUrl}`,body,\n        {\n        \theaders: this.Headers()\n        })\n\n\t}\n\n\tGetRoom(extensUrl: string)\n\t{\n\t\treturn this.http.get(`${this.baseUrl}/${extensUrl}/${this.roomID}`,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\t\t\n\t}\n\n\tUpdateRoom(body: Object, extensUrl: string)\n\t{\t       \n\t\tconsole.log(\"====>\",this.roomID)\n\t\treturn this.http.put(`${this.baseUrl}/${extensUrl}/${this.roomID}`,body,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\t\t\n\t}\n\n\tprivate Headers()\n\t{\n\t\tif(this.cookieService.get('token'))\n\t\t{\n\t\t\treturn new HttpHeaders().set('x-access-token', this.cookieService.get('token'))\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconsole.log(\"token is missing\")\n\t\t\tthis.cookieService.delete(\"token\")\n\t\t\tthis.cookieService.delete('username');\n\t\t\tthis.cookieService.delete('userType');\n\t\t\tthis.router.navigate(['/login']);\n\t\t}\n\t}\t\n\n}\n\n","module.exports = \"<form #input=\\\"ngForm\\\">\\n \\t<table class=\\\"table table-striped table-bordered table-hover\\\">\\n\\t\\t<thead>\\n\\t\\t\\t<tr>\\t\\t\\t\\t\\n\\t\\t\\t\\t<th style=\\\"width: 40px\\\">ID</th>\\n\\t\\t\\t\\t<th>Group Name</th>\\n\\t\\t\\t\\t<th >Permission Name</th>\\n\\t\\t\\t\\t<th style=\\\"width: 40px\\\">Users</th>\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t<th style=\\\"width: 40px\\\">Delete</th>\\n\\t\\t\\t</tr>\\n\\t\\t</thead>\\n\\t\\t<tbody>\\n\\t\\t\\t<tr *ngFor = \\\"let access of groupAccess\\\">\\t\\t\\t\\t\\n\\t\\t\\t\\t<td>{{access.id}}</td>\\n\\t\\t\\t\\t<td>{{access.groupName}}</td>\\n\\t\\t\\t\\t<td>{{access.permissionName}}</td>\\n\\t\\t\\t\\t<td align=\\\"center\\\">{{access.users}}</td>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t<td align=\\\"center\\\">\\t\\t\\t\\t\\t\\t\\t\\t                                        \\n                    <button type=\\\"submit\\\" class=\\\"btn btn-danger btn-xs\\\" (click)=\\\"delGroupAccess(access.id)\\\">\\n                    \\t<span class=\\\"glyphicon glyphicon-trash\\\"></span>\\n                    </button>\\n\\t\\t\\t\\t</td>\\n\\t\\t\\t</tr>\\n\\t\\t</tbody>\\n\\t</table>\\n\\t<button type=\\\"button\\\" class=\\\"btn btn-back btn-sm\\\" (click) = \\\"back()\\\">Back</button>\\n\\t<button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" data-toggle=\\\"modal\\\" href=\\\"#modal-grpAccess\\\" (click) = \\\"getData()\\\">Add</button>\\t\\n </form>\\n\\n\\n<div id=\\\"modal-grpAccess\\\" class=\\\"modal fade\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content animated bounceInRight\\\">    \\n      <div class=\\\"modal-body\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <form #input=\\\"ngForm\\\">                \\n              <div class=\\\"col-sm-2\\\"></div>                     \\n              <div class=\\\"col-sm-12\\\">\\n                <br>\\n                <table class=\\\"table table-fixed table-striped table-hover \\\">\\n                  <thead>\\n                    <tr>                                 \\n                      <th style=\\\"width: 266px\\\">Group Name</th>\\n                      <th style=\\\"width: 200px\\\">Permission Name</th> \\n                      <th>Members</th>                     \\n                      <th style=\\\"width: 25px\\\"></th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>                                                           \\n                    <tr *ngFor = \\\"let group of unregistered_group\\\">                                  \\n                      <td style=\\\"width: 266px\\\" >{{group.name}}</td>\\n                      <td style=\\\"width: 200px\\\" >\\n                        <div class=\\\"input-group-btn\\\">\\n                          <button data-toggle=\\\"dropdown\\\" class=\\\"btn btn-primary btn-table dropdown-toggle\\\" type=\\\"button\\\" (click)=\\\"selecTag(group.id)\\\">{{CB_Status['a'+group.id]}} <span class=\\\"caret\\\"></span></button>\\n                           <ul id=\\\"selectList\\\" class=\\\"dropdown-menu\\\">\\n                              <ng-container *ngFor = \\\"let permission of permissions\\\">\\n                                <li><a (click)=\\\"addPermission(group.id,permission.id,permission.name)\\\">{{permission.name}}</a></li> \\n                              </ng-container>                               \\n                           </ul>\\n                        </div>                      \\n                      </td> \\n                      <td align=\\\"center\\\">{{group.members}}</td>                   \\n                      <ng-container *ngIf = \\\"CB_Status['a'+group.id] == 'Permission'\\\">\\n                        <input type=\\\"checkbox\\\" name=\\\"\\\" disabled=\\\"\\\">\\n                      </ng-container>\\n                      <ng-container *ngIf = \\\"CB_Status['a'+group.id] != 'Permission'\\\">\\n                        <input type=\\\"checkbox\\\" name=\\\"\\\" checked=\\\"\\\" (click) = \\\"unCheck_CB(group.id)\\\">\\n                      </ng-container>\\n                    </tr>                                \\n                  </tbody>\\n                </table>\\n              </div>\\n              <div class=\\\"pull-right\\\">            \\n                <button type=\\\"button\\\" class=\\\"btn btn-warning btn-sm\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n                <button class=\\\"btn btn-primary btn-sm\\\" data-dismiss = \\\"modal\\\" (click) = \\\"addGrpAccess()\\\" >Add</button>                      \\n              </div> \\n            </form>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit} from '@angular/core'\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { AdminRoomAccessService } from './room-access.service';\nimport { ErrorHandlerService } from '../../../error-handler.service';\n\n\n@Component\n({\n\tselector: 'room-access-cmp',\n\ttemplateUrl: 'room-access.component.html'\n})\n\nexport class AdminRoomAccessComponent implements OnInit\n{\n\t\n\tgroupAccess: object[]\n\tunregistered_group: object[]\n\tpermissions: object[]\n\tCB_Status = {}\t\n\taddAccess = [[],[]]\n\n\tgroup_id:string\n\n\tconstructor(private roomAccessService: AdminRoomAccessService, private errorHandlerService: ErrorHandlerService,\n\t\t        private route: ActivatedRoute, private router: Router ){}\n\n\tngOnInit()\n\t{\n\t\tvar id = this.route.snapshot.paramMap.get('id')\n\t\tthis.roomAccessService.getGroupAccess(id)\n\t\t.subscribe( data =>\n\t\t{\n\t\t\tthis.groupAccess = data['group']\t\t\t\n\t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t})\n\t}\n\n\tgetData()\n\t{\t\t\n\t\tthis.addAccess = [[],[]]\t\t\n\t\tthis.roomAccessService.getNtGrpAccess(this.route.snapshot.paramMap.get('id'))\n\t\t.subscribe( data =>\n\t\t{\t\t\t\n\t\t\tthis.unregistered_group = data['group']\t\t\t\t\n\t\t\tthis.unregistered_group.forEach( data =>\n\t\t\t{\n\t\t\t\tvar id = 'a'+data['id']\n\t\t\t\tvar obj = {}\n\t\t\t\tobj[id] = \"Permission\"\n\t\t\t\tthis.CB_Status = Object.assign(this.CB_Status,obj)\t\t\t\t\t\t\n\t\t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t})\t\t\n\t\t})\n\n\t\tthis.roomAccessService.getPermissions()\n\t\t.subscribe( data =>\n\t\t{\t\t\t\n\t\t\tthis.permissions = data['permissions']\t\t\n\t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t})\n\t}\n\n\taddGrpAccess()\n\t{\n\t\tvar all_data = []\n\t\tvar counter = 0\n\t\tthis.addAccess[0].forEach( data =>\n\t\t{\t\t\t\n\t\t\tall_data.push(this.addAccess[1][counter])\n\t\t\tcounter++\t\t\t\n\t\t})\n\t\tthis.roomAccessService.AddGroupAccess(this.route.snapshot.paramMap.get('id'),all_data)\n\t\t.subscribe( response =>\n\t\t{\n\t\t\tthis.ngOnInit()\n\t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t})\n\t}\n\n\taddPermission(groupID: number, permissionID: number, permissionName: string)\n\t{\t\t\t\t\n\t\tthis.addAccess[0].push('a'+this.group_id)\n\t\tthis.addAccess[1].push({group_id: this.group_id, permission_id: permissionID})\t\t\n\t\tthis.CB_Status['a'+this.group_id] = permissionName\t\t\n\t\tthis.selecTag(null)\t\t\n\t}\n\n\tunCheck_CB(groupID: number)\n\t{\n\t\tthis.CB_Status['a'+groupID] = \"Permission\"\n\t\tthis.addAccess[0].splice(this.addAccess[0].indexOf('a'+groupID),1)\n\t\tthis.addAccess[1].splice(this.addAccess[0].indexOf('a'+groupID),1)\t\t\n\t}\n\n\tdelGroupAccess(id: string)\n\t{\n\t\tthis.roomAccessService.DeleteGroupAccess(id)\n\t\t.subscribe( response =>\n\t\t{\n\t\t\tthis.ngOnInit()\n\t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t})\n\t}\n\n\tback()\n\t{\t\t\n\t\tthis.router.navigate(['home/admin/rooms'])\n\t}\t\n\n\tselecTag(group_id)\n\t{\n\t\tthis.group_id = group_id\n\t\tvar class_name = document.getElementById(\"selectList\").className\n\t\tif(class_name == \"dropdown-menu\")\n\t\t{\n\t\t\tdocument.getElementById(\"selectList\").className += \" show\"\n\t\t}\n\t\tif(class_name == \"dropdown-menu show\")\n\t\t{\n\t\t\tdocument.getElementById(\"selectList\").className = \"dropdown-menu\"\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router }    from '@angular/router';\nimport { environment } from './../../../../environments/environment'\n\n\n@Injectable()\nexport class AdminRoomAccessService\n{\n\n\tconstructor ( private http: HttpClient, private cookieService: CookieService, private router: Router ){}\n\tprivate baseUrl = environment.backend_uri\n\n\tgetGroupAccess(id: string)\n\t{\n\t\treturn this.http.get(`${this.baseUrl}/groupAccess/${id}`,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\t\t\t\t\t\n\t}\n\n\tAddGroupAccess(id: string, body: object[])\n\t{\n\t\treturn this.http.post(`${this.baseUrl}/groupAccess/${id}`, body,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\n\t}\n\n\tDeleteGroupAccess(id: string)\n\t{\t\t\t\t\n\t\treturn this.http.delete(`${this.baseUrl}/deleteGrpAccess/${id}`,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\t\t\t\n\t}\n\n\tgetNtGrpAccess(routeID: string)\n\t{\n\t\treturn this.http.get(`${this.baseUrl}/shwNotGrpAccess/${routeID}`,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\t\t      \t\t   \n\t}\n\n\tgetPermissions()\n\t{\n\t\treturn this.http.get(`${this.baseUrl}/permissions`,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\t\t\t  \n\t}\n\n\n\tprivate Headers()\n\t{\n\t\tif(this.cookieService.get('token'))\n\t\t{\n\t\t\treturn new HttpHeaders().set('x-access-token', this.cookieService.get('token'))\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconsole.log(\"token is missing\")\n\t\t\tthis.cookieService.delete(\"token\")\n\t\t\tthis.cookieService.delete('username');\n\t\t\tthis.cookieService.delete('userType');\n\t\t\tthis.router.navigate(['/login']);\n\t\t}\n\t}\t\n\n\t\n}\n\n","module.exports = \".room-status .grow{\\n  min-height: 280px;\\n  margin-bottom: 10px;\\n}\\n.room-status .contact-box{\\n  min-height: 250px;\\n  margin-bottom: 0px;\\n}\\n.row.searchbar{\\n  margin-bottom: 10px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkL2FkbWluL3Jvb21TdGF0dXMvcm9vbS1zdGF0dXMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlCQUFpQjtFQUNqQixtQkFBbUI7QUFDckI7QUFDQTtFQUNFLGlCQUFpQjtFQUNqQixrQkFBa0I7QUFDcEI7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9hZG1pbi9yb29tU3RhdHVzL3Jvb20tc3RhdHVzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucm9vbS1zdGF0dXMgLmdyb3d7XG4gIG1pbi1oZWlnaHQ6IDI4MHB4O1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xufVxuLnJvb20tc3RhdHVzIC5jb250YWN0LWJveHtcbiAgbWluLWhlaWdodDogMjUwcHg7XG4gIG1hcmdpbi1ib3R0b206IDBweDtcbn1cblxuLnJvdy5zZWFyY2hiYXJ7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59XG4iXX0= */\"","module.exports = \"\\n<div class=\\\"wrapper wrapper-content animated fadeInRight\\\">\\n  <div class=\\\"row searchbar\\\">\\n    <div class=\\\"pull-right\\\">\\n      <div class=\\\"form-group form-horizontal\\\">\\n        <label class=\\\"col-lg-3 control-label\\\">Search:</label>\\n        <div class=\\\"col-lg-11\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"search\\\" [(ngModel)]=\\\"filter\\\" style=\\\"height: 29px\\\">\\n        </div>\\n      </div>   \\n    </div>    \\n  </div>\\n\\n\\t<div class=\\\"row\\\">\\n\\t\\t<ng-container *ngFor=\\\"let room of room_status  | filter:filter | paginate: { itemsPerPage: row, currentPage: p };\\\">\\n\\t\\t\\t<div class=\\\"room-status col-lg-3\\\">\\n\\t\\t\\t\\t<div class=\\\"grow\\\">\\n          <div class=\\\"ibox-title\\\">             \\n              <h5>ID-{{room.room_id}} - {{room.room_name}}</h5>\\n          </div>\\n\\t\\t\\t\\t\\t<div class=\\\"contact-box\\\">\\n\\t\\t\\t\\t\\t\\t<!-- <div class=\\\"col-md-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"text-center\\\">\\t\\t\\t                    \\n\\t\\t\\t\\t\\t\\t\\t\\t<img alt=\\\"image\\\" class=\\\"img-circle m-t-xs img-responsive\\\" src=\\\"assets/img/letters/{{room.room_name[0]}}.png\\\">                          \\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"m-t-xs font-bold\\\">Room: {{room.room_id}}</div><br>\\n\\t\\t\\t\\t\\t\\t\\t\\t<ng-container *ngIf = \\\"room.add_device\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-primary btn-xs\\\" data-toggle=\\\"modal\\\" href=\\\"#modal-add-devies\\\" (click) = \\\"getRoomDevice(room.room_id)\\\">Add Device</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div> -->\\n\\t\\t\\t\\t\\t\\t<a>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"\\\">\\t\\t\\t\\t\\t\\t\\t\\t                  \\t\\t\\t                 \\n\\t\\t\\t\\t\\t\\t\\t\\t<strong>Devices:</strong><br><br>\\n\\t\\t\\t\\t\\t\\t\\t\\t<table>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<tbody class=\\\"room-status\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let device of room.devices\\\" >\\n                      <ng-container *ngIf = \\\"device.remote_design != 'Temperature Slider'\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td style=\\\"width: 150px ; padding-right: 5px; padding-left: 5px\\\">{{device.device_name}}</td>\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td style=\\\"width: 40px; padding-right: 20px; padding-left: 5px\\\">                         \\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"switch\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"onoffswitch{{device.class_name}}\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-container *ngIf = \\\"device.device_status == 'True' || device.device_status == 'true'\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\"  class=\\\"onoffswitch-checkbox\\\" id=\\\"{{device.room_status_id}}\\\" checked (change)=\\\"valuechange($event)\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-container>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-container *ngIf = \\\"device.device_status == 'False' || device.device_status == 'false'\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\"  class=\\\"onoffswitch-checkbox\\\" id=\\\"{{device.room_status_id}}\\\" (change)=\\\"valuechange($event)\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-container>\\t\\t\\t\\t\\t                                    \\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"onoffswitch-label\\\" for=\\\"{{device.room_status_id}}\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"onoffswitch-inner{{device.class_name}}\\\"></span>\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"onoffswitch-switch{{device.class_name}}\\\"></span>\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n                        <td></td>                        \\t\\t\\t\\t\\t\\t\\t\\t\\t\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td align=\\\"center\\\">\\t\\t\\t\\t\\t\\t\\t\\t                                        \\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-danger btn-xs\\\" (click)=\\\"deleteRoomDevice(device.room_status_id)\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"glyphicon glyphicon-trash\\\"></span>\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</button>\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n                      </ng-container>                     \\n                      <ng-container *ngIf = \\\"device.remote_design == 'Temperature Slider'\\\">\\n                        <td style=\\\"width: 150px ; padding-right: 5px; padding-left: 5px\\\">{{device.device_name}}</td>\\n                        <td style=\\\"width: 1000px\\\"><input type=\\\"text\\\" id=\\\"{{device.room_status_id}}\\\"></td>\\n                        <td style=\\\"width: 100px\\\"></td>\\n                        <td align=\\\"center\\\">                                                      \\n                          <button type=\\\"submit\\\" class=\\\"btn btn-danger btn-xs\\\" (click)=\\\"deleteRoomDevice(device.room_status_id)\\\">\\n                            <span class=\\\"glyphicon glyphicon-trash\\\"></span>\\n                          </button>\\n                        </td>\\n                      </ng-container>                    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</tbody>\\n\\t\\t\\t\\t\\t\\t\\t\\t</table>                \\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</a>\\n            <div class=\\\"footer-ibox text-right\\\">\\n              <ng-container *ngIf = \\\"room.add_device\\\">\\n                <button class=\\\"btn btn-primary btn-xs\\\" data-toggle=\\\"modal\\\" href=\\\"#modal-add-devies\\\" (click) = \\\"getRoomDevice(room.room_id)\\\">Add Device</button>\\n            </ng-container>\\n            </div>       \\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\t\\t\\t\\t\\n\\t\\t</ng-container>\\n\\t</div>\\n  <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n</div>\\n\\n<div id=\\\"modal-add-devies\\\" class=\\\"modal fade\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content animated bounceInRight\\\">    \\n      <div class=\\\"modal-body\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <form #input=\\\"ngForm\\\">                \\n              <div class=\\\"col-sm-2\\\"></div>                     \\n              <div class=\\\"col-sm-12\\\">\\n                <br>           \\n                <div class=\\\"form-horizontal2\\\">\\n                  <div class=\\\"form-group2 col2-sm-12\\\">\\n                    <div class=\\\"col2-sm-6\\\">\\n                      <div class=\\\"input-group-btn\\\">\\n                        <button tabindex=\\\"-1\\\" class=\\\"btn btn-white btn2-sm\\\" type=\\\"button\\\" (click)=\\\"selecTag()\\\" >&emsp;{{row2}}&emsp;</button>\\n                        <button data-toggle=\\\"dropdown\\\" class=\\\"btn btn-primary dropdown-toggle btn2-sm\\\" type=\\\"button\\\" (click)=\\\"selecTag()\\\"><span class=\\\"caret\\\"></span></button>\\n                        <ul id=\\\"rt-selectList\\\" class=\\\"dropdown-menu\\\">\\n                          <li><a (click)=manageRow2(8)>8</a></li>\\n                          <li><a (click)=manageRow2(50)>50</a></li>\\n                          <li><a (click)=manageRow2(100)>100</a></li>\\n                          <li><a (click)=manageRow2(200)>Show all</a></li>                 \\n                        </ul>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col2-sm-6\\\">\\n                      <div class=\\\"col2-sm-5\\\"></div>\\n                      <div class=\\\"col2-sm-7\\\">         \\n                        <input type=\\\"text\\\" placeholder=\\\"Search for something...\\\" class=\\\"form-control pull-right input-sm\\\" name=\\\"search\\\" [(ngModel)]=\\\"filter2\\\">        \\n                      </div>\\n                    </div>\\n                  </div>                   \\n                </div>\\n                <table class=\\\"table table-fixed table-striped table-hover \\\">\\n                  <thead>\\n                    <tr>                                 \\n                      <th (click)=\\\"sort('id',1)\\\" class=\\\"{{class[1][0]}}\\\">\\n                        ID<span class=\\\"fa fa-sort{{class[0][0]}} pull-right\\\"></span>\\n                      </th>\\n                      <th (click)=\\\"sort('Lname',2)\\\" class=\\\"{{class[1][1]}}\\\">\\n                        Name<span class=\\\"fa fa-sort{{class[0][1]}} pull-right\\\"></span>\\n                      </th>\\n                      <th (click)=\\\"sort('Fname',3)\\\" class=\\\"{{class[1][2]}}\\\">\\n                        Description<span class=\\\"fa fa-sort{{class[0][2]}} pull-right\\\"></span>\\n                      </th>                      \\n                      <th style=\\\"width: 25px\\\"></th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>                              \\n                    <tr *ngFor = \\\"let device of devices | orderBy: key2 : reverse2 | filter:filter2 | paginate: { itemsPerPage: row2, currentPage: p2, id: 'second' };\\\">                                  \\n                      <td style=\\\"width: 25px\\\">{{device.id}}</td>\\n                      <td style=\\\"width: 98px\\\">{{device.name}}</td>\\n                      <td style=\\\"width: 98px\\\">{{device.description}}</td>                      \\n                      <td><input type=\\\"checkbox\\\"  name=\\\"a{{device.id}}\\\" ngModel></td>\\n                    </tr>                                \\n                  </tbody>\\n                </table>\\n                <p>Showing 1 to {{row2}} of {{totalUsr}}</p>\\n                <div class=\\\"pull-right\\\">\\n                  <pagination-controls (pageChange)=\\\"p2 = $event\\\" id = \\\"first\\\"></pagination-controls>\\n                </div><br><br>                \\n              </div>\\n              <div>\\n                <div class=\\\"col-sm-7\\\"></div>                        \\n                <button type=\\\"button\\\" class=\\\"btn btn-warning btn-sm\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n                <button class=\\\"btn btn-primary btn-sm\\\" data-dismiss = \\\"modal\\\" (click) = \\\"addRoomDevice(input)\\\" >Add</button>                      \\n              </div> \\n            </form>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, OnDestroy} from '@angular/core'\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { NgForm } from '@angular/forms';\nimport { interval } from 'rxjs';\n\nimport { ErrorHandlerService } from '../../../error-handler.service';\nimport { AdminRoomStatusService } from './room-status.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\nimport * as $ from 'jquery'\n\ndeclare var $: any;\n\nvar temp_change: boolean = false\nvar room_status_id: string\nvar temperature: number\n\n@Component\n({\n\tselector: 'room-status-cmp',\n  templateUrl: 'room-status.component.html',\n  styleUrls: ['./room-status.component.css']\n})\n\nexport class AdminRoomStatusComponent implements OnInit, OnDestroy\n{\n\tconstructor(private adminRoomStatusService: AdminRoomStatusService, private errorHandlerService: ErrorHandlerService){\n    interval(4000)\n      .pipe(takeUntil(this.unsubscribe))\n      .subscribe( x =>\n        {\n        this.adminRoomStatusService.CheckRoomControlData()\n        .subscribe( data => {\n          console.log(data)\n          if(data['room_control_updated'] == false)\n          {\n            console.log(\"UPDATE\")\n            this.ngOnInit()\n          }\n        })\n      })\n\t}\n\n\troom_status: object[]\n\tdevices: object[]\n\t\n\n\tclass = [[\"\",\"\",\"\"],[\"\",\"\",\"\"]]\n\tkey2: string = 'id'\n\treverse2: boolean = false\n  row2 = 10\n  private unsubscribe: Subject<void> = new Subject();\n  totalUsr: number\n\ttempID2\n\tfilter2: string\n\tp2: number = 1;\n\n\tfilter: string\n\trow = 9\n  p = 1\n\n  ngOnDestroy(){\n    console.debug(\"Destroying\");\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n\n\tngOnInit()\n\t{\t\t\t\t\n\t\tthis.adminRoomStatusService.GetRoomStatus()\n\t\t.subscribe( data =>\n\t\t{\t\t\t\t\t\t\n\t\t\tthis.room_status = data['room_status']\n\t\t\tthis.room_status.forEach( room =>\n\t\t\t{\t\t\t\t\t\t\n\t\t\t\troom['devices'].forEach( device =>\n\t\t\t\t{\t\t\t\t\t\n\t\t\t\t\tif(device['remote_design'] == \"Temperature Slider\")\n\t\t\t\t\t{\n\t\t\t\t\t\t$(document).ready(function(){\n\t\t\t\t\t\t\t$(\"#\"+device['room_status_id']).ionRangeSlider({\t\t\t\t\t\n\t\t\t\t\t            min: device['min'],\n\t\t\t\t\t            max: device['max'],\n\t\t\t\t\t            from: device['device_status'],\n\t\t\t\t\t            postfix: device['postfix'],\n\t\t\t\t\t            prettify: device['prettify'],\n\t\t\t\t\t            hasGrid: device['hasGrid'],\n\t\t\t\t\t            disable: device['disable'],\t\t\t\t\t           \n\t\t\t\t\t            onFinish: function(data)\n\t\t\t\t\t            {\t\t\t\t\t\t\t\t\t            \t     \n\t\t\t\t\t            \tvar room_status_id1 = data['input'][0]['id']\t\t\t\t\t            \t\n\t\t\t\t\t            \tvar temperature1 = data['fromNumber']\n\t\t\t\t\t            \tconsole.log(temperature1)\n\t\t\t\t\t            \ttemperature = temperature1\n\t\t\t\t\t            \troom_status_id = room_status_id1\n\t\t\t\t\t            \ttemp_change = true\t\t\t\t\t\t\t\t       \t\n\t\t\t\t\t            }\n\t\t\t\t\t        });\n\t\t\t\t\t\t})\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t})\t\t\t\t \n\t\t\t})\t\t\t\t\t\n\t\t})\t\t\n\t}\n\n\tgetRoomDevice(room_id)\n\t{\n\t\tthis.adminRoomStatusService.room_id = room_id\n\t\tthis.adminRoomStatusService.GetAllDevice()\n\t\t.subscribe( data =>\n\t\t{\n\t\t\t// this.sessionService.updateToken(data['token'])\n\t\t\tthis.devices = data['devices']\n\t\t\tconsole.log(\"devices\", this.devices)\n\t\t\tthis.totalUsr = this.devices.length\n\t\t\tconsole.log(this.totalUsr)\n\t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t})\n\t}\n\n\taddRoomDevice(input: NgForm)\n\t{\t\t\n\t\tvar data = []\n\t\tthis.devices.forEach( device =>\n\t\t\t{\n\t\t\t\tif(input.value[\"a\"+device['id']] == true)\n\t\t\t\t{\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tdata.push(device['id'])\n\t\t\t\t}\t\t\t\n\t\t\t})\n\t\tconsole.log(data)\n\t\tif(data.length != 0)\n\t\t{\n\t\t\tthis.adminRoomStatusService.AddRoomDevice(data)\n\t\t\t.subscribe( data =>\n\t\t\t{\n\t\t\t\tthis.ngOnInit()\n\t\t\t},(error: HttpErrorResponse) =>\n\t\t\t\t{\n\t\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t\t})\n\t\t}\n\t}\n\n\tdeleteRoomDevice(id: string)\n\t{\n\t\tthis.adminRoomStatusService.deleteRoomDevice(id)\n\t\t.subscribe( data =>\n\t\t{\n\t\t\tthis.ngOnInit()\n\t\t},(error: HttpErrorResponse) =>\n\t\t\t\t{\n\t\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t\t})\n\t}\n\n\tvaluechange(value: any) // CONTROLL DEVICE\n\t{\t\t\n\t\tvar room_status_id = value['target']['id']\t\t\n\t\tvar data = {value: value['target']['checked']}\n\t\tthis.adminRoomStatusService.ControlDevice(data,room_status_id)\n\t\t.subscribe( data =>\n\t\t{\n\t\t\t\t\t\t\n\t\t})\n\t}\n\n\tsort(key, id: number)\n\t{\t\t\t\t\n\t\tthis.key2 = key;\n\t\tthis.reverse2 = !this.reverse2;\n\t\tif(this.class[0][id] == \"\" || this.class[0][id] == \"-asc\")\n\t\t{\n\t\t\tthis.class[0][id] = \"-desc\"\n\t\t}\n\t\telse if(this.class[0][id] == \"-desc\")\n\t\t{\n\t\t\tthis.class[0][id] = \"-asc\"\n\t\t}\t\t\n\t\tthis.class[1][this.tempID2] = \"\"\n\t\tthis.class[1][id] = \"active\"\n\t\tthis.tempID2 = id\t\t\n\t}\n\n\tmanageRow2(length: number)\n\t{\t\t\n\t\tthis.row2 = length\n\t\tif(length == 200)\n\t\t{\n\t\t\tthis.row2 = this.totalUsr\n\t\t}\t\t\n\t\tthis.selecTag()\n\t}\n\n\tselecTag()\n\t{\t\n\t\tvar class_name = document.getElementById(\"rt-selectList\").className\t\t\n\t\tif(class_name == \"dropdown-menu\")\n\t\t{\n\t\t\tdocument.getElementById(\"rt-selectList\").className += \" show\"\n\t\t}\n\t\tif(class_name == \"dropdown-menu show\")\n\t\t{\n\t\t\tdocument.getElementById(\"rt-selectList\").className = \"dropdown-menu\"\n\t\t}\n\t}\t\n\n\tngDoCheck()\n\t{\n\t\tif(temp_change == true)\n\t\t{\n\t\t\tvar data = {value: temperature}\n\t\t\tconsole.log(data)\n\t\t\tthis.adminRoomStatusService.ControlDevice(data,room_status_id)\n\t\t\t.subscribe( data =>\n\t\t\t{\n\t\t\t\tthis.ngOnInit()\n\t\t\t})\n\t\t\ttemp_change = false\n\t\t}\n\t}\t\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router }    from '@angular/router';\nimport { environment } from './../../../../environments/environment'\n\n@Injectable()\nexport class AdminRoomStatusService\n{\n\tconstructor ( private http: HttpClient, private cookieService: CookieService, private router: Router ){}\n\tprivate baseUrl = environment.backend_uri\t\n\n\troom_id: string\n\n\tGetRoomStatus()\n\t{\n\t\treturn this.http.get(`${this.baseUrl}/RoomStatus`,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\t\t\t\t\t\n\t}\n\n\tGetAllDevice()\n\t{\n\t\treturn this.http.get(`${this.baseUrl}/getDeviceToAdd/${this.room_id}`,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\n\t}\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\tAddRoomDevice(data: number[])\n\t{\n\t\treturn this.http.post(`${this.baseUrl}/addRoomDevice/${this.room_id}`,data,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\n\t}\n\n\tControlDevice(data: object, room_status_id: string)\n\t{\n\t\treturn this.http.put(`${this.baseUrl}/roomStatusByID/${room_status_id}`,data,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\n\t}\n\n\tdeleteRoomDevice(id: string)\n\t{\n\t\treturn this.http.delete(`${this.baseUrl}/roomStatusByID/${id}`,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\n\t}\n\n\tCheckRoomControlData()\n\t{\n\t\treturn this.http.get(`${this.baseUrl}/checkRoomControl`,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\n\t}\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n\tprivate Headers()\n\t{\n\t\tif(this.cookieService.get('token'))\n\t\t{\n\t\t\treturn new HttpHeaders().set('x-access-token', this.cookieService.get('token'))\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconsole.log(\"token is missing\")\n\t\t\tthis.cookieService.delete(\"token\")\n\t\t\tthis.cookieService.delete('username');\n\t\t\tthis.cookieService.delete('userType');\n\t\t\tthis.router.navigate(['/login']);\n\t\t}\n\t}\n}","module.exports = \"<div class=\\\"col2-sm-10\\\"><div class=\\\"col-sm-6\\\"></div><p style=\\\"color: red\\\">{{message}}</p></div>\\n<form #input=\\\"ngForm\\\">\\n\\n    <div class=\\\"form-horizontal2\\\">\\n        <div class=\\\"form-group2 col2-sm-12\\\">\\n\\t\\t\\t<div class=\\\"col2-sm-6\\\">\\n\\t\\t\\t\\t<div class=\\\"input-group-btn\\\">\\n\\t               \\t<button tabindex=\\\"-1\\\" class=\\\"btn btn-white btn2-sm\\\" type=\\\"button\\\" (click)=\\\"selecTag()\\\">&emsp;{{row}}&emsp;</button>\\n\\t               \\t<button data-toggle=\\\"dropdown\\\" class=\\\"btn btn-primary dropdown-toggle btn2-sm\\\" type=\\\"button\\\" (click)=\\\"selecTag()\\\"><span class=\\\"caret\\\"></span></button>\\n\\t\\t               <ul id=\\\"selectList\\\" class=\\\"dropdown-menu\\\">\\n\\t\\t               \\t   <li><a (click)=manageRow(10)>10</a></li>\\n\\t\\t                   <li><a (click)=manageRow(50)>50</a></li>\\n\\t\\t                   <li><a (click)=manageRow(100)>100</a></li>\\n\\t\\t                   <li><a (click)=manageRow(totalUsr)>Show all</a></li>                 \\n\\t\\t               </ul>\\n           \\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"col2-sm-6\\\">\\n\\t\\t\\t\\t<div class=\\\"col2-sm-7\\\"></div>\\n\\t\\t\\t\\t<div class=\\\"col2-sm-5\\\">\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" placeholder=\\\"Search for something...\\\" class=\\\"form-control pull-right input-sm\\\" name=\\\"search\\\" [(ngModel)]=\\\"filter\\\">\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n        </div>                   \\n    </div>    \\n \\t<table class=\\\"table table-striped table-bordered table-hover \\\">\\n\\t\\t<thead>\\n\\t\\t\\t<tr>\\n\\t\\t\\t\\t<th style=\\\"width: 30px\\\"></th>\\t\\t\\t\\t\\n\\t\\t\\t\\t<th style=\\\"width: 50px\\\" (click)=\\\"sort('id',0)\\\" class=\\\"{{class[1][0]}}\\\">\\n\\t\\t\\t\\t\\tID<span class=\\\"fa fa-sort{{class[0][0]}} pull-right\\\"></span>\\n\\t\\t\\t\\t</th>\\t\\t\\t\\t\\n\\t\\t\\t\\t<th (click)=\\\"sort('Username',1)\\\" class=\\\"{{class[1][1]}}\\\">\\n\\t\\t\\t\\t\\tUsername<span class=\\\"fa fa-sort{{class[0][1]}} pull-right\\\"></span>\\n\\t\\t\\t\\t</th>\\n\\t\\t\\t\\t<th (click)=\\\"sort('Lname',2)\\\" class=\\\"{{class[1][2]}}\\\">\\n\\t\\t\\t\\t\\tLastname<span class=\\\"fa fa-sort{{class[0][2]}} pull-right\\\"></span>\\n\\t\\t\\t\\t</th>\\n\\t\\t\\t\\t<th (click)=\\\"sort('Fname',3)\\\" class=\\\"{{class[1][3]}}\\\">\\n\\t\\t\\t\\t\\tFirstname<span class=\\\"fa fa-sort{{class[0][3]}} pull-right\\\"></span>\\n\\t\\t\\t\\t</th>\\n\\t\\t\\t\\t<th (click)=\\\"sort('CardID',4)\\\" class=\\\"{{class[1][4]}}\\\">\\n\\t\\t\\t\\t\\tCardID<span class=\\\"fa fa-sort{{class[0][4]}} pull-right\\\"></span>\\n\\t\\t\\t\\t</th>\\t\\t\\t\\t\\n\\t\\t\\t\\t<th style=\\\"width: 40px\\\">Edit</th>\\n\\t\\t\\t\\t<th style=\\\"width: 40px\\\">Delete</th>\\n\\t\\t\\t</tr>\\n\\t\\t</thead>\\n\\t\\t<tbody>\\n\\t\\t\\t<tr *ngFor=\\\"let user of users | orderBy: key : reverse | filter:filter | paginate: { itemsPerPage: row, currentPage: p };\\\">\\n\\t\\t\\t\\t<td align=\\\"center\\\" ><input type=\\\"checkbox\\\"  name=\\\"a{{user.id}}\\\" ngModel></td>\\n\\t\\t\\t\\t<td>{{user.id}}</td>\\n\\t\\t\\t\\t<td>{{user.username}}</td>\\n\\t\\t\\t\\t<td>{{user.Lname}}</td>\\n\\t\\t\\t\\t<td>{{user.Fname}}</td>\\n\\t\\t\\t\\t<td>{{user.cardID }}</td>\\t\\t\\t\\t\\n\\t\\t\\t\\t<td align=\\\"center\\\">\\t\\t\\t\\t\\t\\t\\t\\t\\t                \\n                    <button class=\\\"btn btn-primary btn-xs\\\" (click) = \\\"update_user(user.id)\\\" data-toggle=\\\"modal\\\" href=\\\"#modal-userss\\\">\\n                    \\t<span class=\\\"glyphicon glyphicon-pencil\\\"></span>\\n                    </button>\\n\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t<td align=\\\"center\\\">\\t\\t\\t\\t\\t\\t\\t\\t                                        \\n                    <button type=\\\"submit\\\" class=\\\"btn btn-danger btn-xs\\\" (click)=\\\"deleteUser(input,user.id)\\\">\\n                    \\t<span class=\\\"glyphicon glyphicon-trash\\\"></span>\\n                    </button>\\n\\t\\t\\t\\t</td>\\n\\t\\t\\t</tr>\\n\\t\\t</tbody>\\n\\t</table>\\n\\t<p>Showing 1 to {{row}} of {{totalUsr}}</p>\\n\\t<div class=\\\"pull-right\\\">\\n\\t\\t<pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n\\t</div><br><br>\\n\\n\\t<button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" data-toggle=\\\"modal\\\" href=\\\"#modal-userss\\\" (click) = \\\"add_user()\\\">Add</button>\\n\\t <button type=\\\"submit\\\" class=\\\"btn btn-w-m btn-danger btn-sm\\\" (click) = \\\"deleteUser(input,'none')\\\">Delete</button>   \\n </form>\\n\\n\\n<div id=\\\"modal-userss\\\" class=\\\"modal fade\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog\\\">\\n      <div class=\\\"modal-content animated {{modalAnimation}}\\\">\\n          <div class=\\\"modal-header\\\">\\n            <div class=\\\"col-sm-12\\\"><p style=\\\"text-align:center;color: red\\\">{{message}}</p></div>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n          \\t<p></p>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-11\\\">              \\n                  <div class=\\\"col-sm-1\\\">\\n                  </div>               \\n                  <form [formGroup]=\\\"modalForm\\\"  novalidate>        \\n                    <div class=\\\"col-sm-11\\\">               \\n                      <div *ngIf = \\\"add == 'addUser' || update == 'updateUser'\\\" class=\\\"form-horizontal\\\">                                                                      \\n                         <div class=\\\"form-group\\\">\\n                          <label class=\\\"col-lg-2 control-label\\\">Lastname:</label>\\n                            <div class=\\\"col-lg-10\\\">\\n                              <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Last Name\\\" formControlName=\\\"Lname\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                          <label class=\\\"col-lg-2 control-label\\\">Firstname:</label>\\n                            <div class=\\\"col-lg-10\\\">\\n                              <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"First Name\\\" formControlName=\\\"Fname\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                          <label class=\\\"col-lg-2 control-label\\\">Username:</label>\\n                            <div class=\\\"col-lg-10\\\">\\n                              <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\" formControlName=\\\"username\\\">\\n                            </div>\\n                        </div>\\n                        <div *ngIf = \\\"add == 'addUser'\\\" class=\\\"form-group\\\">\\n                          <label class=\\\"col-lg-2 control-label\\\">Password:</label>\\n                            <div class=\\\"col-lg-10\\\">\\n                              <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" formControlName=\\\"userpassword\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                          <label class=\\\"col-lg-2 control-label\\\">CardID:</label>\\n                            <div class=\\\"col-lg-10\\\">\\n                              <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"cardID\\\" formControlName=\\\"cardID\\\">\\n                            </div>\\n                        </div>\\n                      </div>                    \\n\\n                      <div *ngIf = \\\"add == 'addUser' && modalForm.status == 'VALID'\\\">\\n                        <div class=\\\"col-sm-6\\\"></div>                        \\n                        <button type=\\\"button\\\" class=\\\"btn btn-warning btn-sm\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n                        <button class=\\\"btn btn-primary btn-sm\\\" (click) = \\\"addUser()\\\" >Add</button>\\n                      </div>   \\n\\n                      <div *ngIf = \\\"add == 'addUser' && modalForm.status == 'INVALID'\\\">\\n                        <div class=\\\"col-sm-6\\\"></div>                        \\n                        <button type=\\\"button\\\" class=\\\"btn btn-warning btn-sm\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n                        <button class=\\\"btn btn-primary btn-sm\\\" disabled=\\\"\\\">Add</button>\\n                      </div>                 \\n\\n                      <div *ngIf = \\\"update == 'updateUser'\\\">\\n                        <div class=\\\"col-sm-6\\\"></div>                \\n                        <button type=\\\"button\\\" class=\\\"btn btn-warning btn-sm\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n                        <button class=\\\"btn btn-primary btn-sm\\\" (click) = \\\"updateUser()\\\" >Save</button>                      \\n                      </div>                      \\n\\n                      </div>\\n                    </form>\\n                </div>\\n          </div>\\n      </div>\\n      </div>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit, DoCheck} from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { FormBuilder, FormGroup, Validators } \tfrom '@angular/forms';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router }    from '@angular/router';\n\nimport { AdminUsersService} from './users.service';\nimport { ErrorHandlerService } from '../../../error-handler.service';\ndeclare var $: any;\n\n@Component\n({\n\tselector: 'users-cmp',\n\ttemplateUrl: 'users.component.html'\n})\n\nexport class AdminUsersComponent implements OnInit\n{\n\tusers: object[]\t\n\tclass = [[\"\",\"\",\"\",\"\",\"\"],[\"\",\"\",\"\",\"\",\"\"]]\n\tkey: string = 'id'\n\treverse: boolean = false\n\trow = 10\n\ttotalUsr: number\n\ttempID\t\n\n\tmodalForm: FormGroup\n\taddDetails: object\t\n\tadd: string\n\tupdate: string\n\tmodalAnimation: string\n\tmessage: string\n\tfilter: string\n\tcounter = false\n\tcoutner2 = false\n\t\n\n\tconstructor(private usersService: AdminUsersService, private formBuilder: FormBuilder, private errorHandlerService: ErrorHandlerService,\n\t\t\t\tprivate route: Router){ this.createForm() }\n\n\n\tcreateForm()\n\t{\t\t\t\t\t\n\t\tthis.modalForm = this.formBuilder.group\n\t\t({\n\n\t\t})    \n\t}\n\n\tngOnInit()\n\t{\t\t\n\t\tthis.message = \"\"\t\n\t\tthis.usersService\n\t\t.getAll()\n\t\t.subscribe( data => \n\t\t\t{\t\t\t\t\n\t\t\t\tthis.users = data['users']\n\t\t\t\tthis.totalUsr = this.users.length\n\t\t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t});\n\t}\n\t\n\tdeleteUser(input: NgForm ,id: any)\n\t{\n\t\t// console.log(input.value,this.users)\t\n\t\tif (id == \"none\")\n\t\t{\n\t\t\tthis.users.forEach( user =>\n\t\t\t{\t\t\t\t\n\t\t\t\t//console.log(\"-------------------\",user.username)\t\t\t\t\t\n\t\t\t\tif(input.value[\"a\"+user['id']] == true)\n\t\t\t\t{\t\t\t\t\t\n\t\t\t\t\tthis.usersService.deleteUser(user[\"id\"])\n\t\t\t\t\t\t.subscribe( data =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.ngOnInit()\n\t\t\t\t\t\t\tif(data['message'])\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.message = data['message']\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t})\t\t\t\t\t\t\t\t\t\n\t\t\t\t}\t\t\t\n\t\t\t})\t\t\t\n\t\t}\n\t\telse\n\t\t{\t\t\t\n\t\t\tthis.usersService.deleteUser(id).subscribe( data => \n\t\t\t{\n\t\t\t\tthis.ngOnInit()\t\t\t\t\n\t\t\t\tif(data!=null && data['message'])\n\t\t\t\t{\n\t\t\t\t\tthis.message = data['message']\n\t\t\t\t}\n\t\t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t})\n\t\t}\t\t\n\t}\n\n\tadd_user()\n\t{\n\t\tthis.modalForm = this.formBuilder.group\n\t\t({\n\t\t\tLname: ['',Validators.required],\n\t\t\tFname: ['', Validators.required],\n\t\t\tusername: ['', Validators.required],\n\t\t\tuserpassword: ['', Validators.required],\n\t\t\tcardID: ''\n\t\t})\n\t\tthis.update = \"\"    \t\t\n\t\tthis.add = \"addUser\"    \t\t\n\t\tthis.modalAnimation = \"flipInY\"\n\t}\n\n\taddUser()\n\t{\t\t\n\t\tif( this.modalForm.status == \"VALID\")\n\t\t{\n\t\t\tthis.message = \"\"\t\t\t\t\t\t\n\t\t\tthis.addDetails = this.modalForm.value\t\t\t\n\t\t\tthis.usersService.AddUser(this.addDetails,\"users\").subscribe( response => \n        {\n          console.log(\"Reponse\", response)\n\t\t\t\t\tif ( response['message'] == \"success\")\n          {\t\n            console.log(\"Added user successfully\")\n\t\t\t\t\t\tif( this.counter == false)// SHOW THE LATEST ADDED USER\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.sort('id',0) \t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tthis.counter = true\n            }\n            console.log(\"Hiding user modal\");\n            $(\"#modal-userss\").modal('hide');\n\t\t\t\t\t\tthis.ngOnInit()\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.message = response['message']\n\t\t\t\t\t}\n\t\t\t\t},(error: HttpErrorResponse) =>\n        {\n          this.message = error.error[\"message\"];\n\t\t\t\t  this.errorHandlerService.handleError(error)\n\t\t\t  })\n\t\t}\t\n\t}\n\n\tupdate_user(id: string)\n\t{\n\t\tthis.add = \"\"\n\t\tthis.modalAnimation = \"fadeInDown\"  \n\t\tthis.usersService.routeID = id \t\t    \t\t \t    \t\t  \t\t    \t    \t\n\t\tthis.usersService.GetUser().subscribe( data => \n\t\t{\t\t\t\t\n\t\t\tthis.mapData(data['data'])\t\t\t\t\t\n\t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n        console.error(\"Error occured\", error);\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t})\n\t}\n\n\tupdateUser()\n\n\t{\t\t\t\t\n\n\t\tconst formData: FormData = new FormData();\t\t\n\t\tformData.append('Fname', this.modalForm.value['Fname']);\t\t\n\t\tformData.append('Lname', this.modalForm.value['Lname']);\n\t\tformData.append('username', this.modalForm.value['username']);\n\t\tformData.append('cardID', this.modalForm.value['cardID']);\n\n\t\tthis.usersService.UpdateUser(formData)\n\t\t.subscribe( data => \n\t\t{\t\n\t\t\tif(data!=null && data['message'])\n\t\t\t{\n\t\t\t\tthis.message = data['message']\n\t\t\t}\n\t\t\telse\n\t\t\t{\n        $(\"#modal-userss\").modal('hide');\n\t\t\t\tthis.message = \"\"\n\t\t\t\tthis.ngOnInit()\n\t\t\t}\t\t\t\t\t\t\n\t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t})\t\t\n\t}\n\n\tprivate mapData(data: object)\n\t{\t\t\n    this.modalForm = this.formBuilder.group\n\t\t({\n\t\t\tLname: [data['Lname'],Validators.required],\n\t\t\tFname: [data['Fname'], Validators.required],\n\t\t\tusername: [data['username'], Validators.required],\n\t\t\tcardID: data['cardID']\n\t\t})\n\t\tthis.update = \"updateUser\"\t\n\t}\t\n\t\n\tsort(key, id: number)\n\t{\t\t\t\t\n\t\tthis.key = key;\n\t\tthis.reverse = !this.reverse;\n\t\tif(this.class[0][id] == \"\" || this.class[0][id] == \"-asc\")\n\t\t{\n\t\t\tthis.class[0][id] = \"-desc\"\n\t\t}\n\t\telse if(this.class[0][id] == \"-desc\")\n\t\t{\n\t\t\tthis.class[0][id] = \"-asc\"\n\t\t}\t\t\n\t\tthis.class[1][this.tempID] = \"\"\n\t\tthis.class[1][id] = \"active\"\n\t\tthis.tempID = id\t\t\n\t}\n\n\tmanageRow(length: number)\n\t{\t\t\n\t\tthis.row = length\n\t\tthis.selecTag()\n\t}\n\tp: number = 1;\n\n\tselecTag()\n\t{\n\t\tvar class_name = document.getElementById(\"selectList\").className\n\t\tconsole.log(class_name)\n\t\tif(class_name == \"dropdown-menu\")\n\t\t{\n\t\t\tdocument.getElementById(\"selectList\").className += \" show\"\n\t\t}\n\t\tif(class_name == \"dropdown-menu show\")\n\t\t{\n\t\t\tdocument.getElementById(\"selectList\").className = \"dropdown-menu\"\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router }    from '@angular/router';\nimport { environment } from './../../../../environments/environment'; \n\n\n\n\n@Injectable()\nexport class AdminUsersService\n{\n\trouteID: string\n\n\tconstructor ( private http: HttpClient, private cookieService: CookieService, private router: Router ){}\n\tprivate baseUrl = environment.backend_uri;\n\n\tgetAll()\n\t{\t\t\n\t\treturn this.http.get(`${this.baseUrl}/users`, \n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\t\t\t\n\t}\n\n\tAddUser(body: Object, extensUrl: string)\n\t{\t\t\t\t      \n        return this.http.post(`${this.baseUrl}/${extensUrl}`,body, \n        {\n        \theaders: this.Headers()\n        })        \n\t}\n\n\tdeleteUser(id:number)\n\t{\n\t\treturn this.http.delete(`${this.baseUrl}/user/${id}`,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\t\t\t\n\t}\t\n\n\tGetUser()\n\t{\n\t\treturn this.http.get(`${this.baseUrl}/user/${this.routeID}`,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\t\t\t\n\t}\n\n\tUpdateUser(body: FormData)\n\t{\t\t\t\t\n        \n\t\treturn this.http.put(`${this.baseUrl}/user/${this.routeID}`,body,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\t\t\t\n\t}\n\n\tEditProfile()\n\t{\n\t\treturn this.http.get(`${this.baseUrl}/editProfile`,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\n\t}\n\n\tChangePassword(body: object)\n\t{\n\t\treturn this.http.post(`${this.baseUrl}/changeUserPassword`,body,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\n\t}\n\n\tprivate Headers()\n\t{\n\t\tif(this.cookieService.get('token'))\n\t\t{\t\t\t\n\t\t\treturn new HttpHeaders().set('x-access-token', this.cookieService.get('token'))\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.cookieService.deleteAll()\n\t\t\tthis.router.navigate(['/login']);\n\t\t}\n\t}\t\n\t\n\t\n}\n","module.exports = \"#sidebar{\\n  display: none;\\n}\\n#sidebar.active{\\n  display: block;\\n}\\n#page-wrapper.nomenu{\\n  margin-left: 0px;\\n}\\n.body-small #page-wrapper{\\n  margin-left: 70px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtBQUNmO0FBQ0E7RUFDRSxjQUFjO0FBQ2hCO0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEI7QUFFQTtFQUNFLGlCQUFpQjtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiNzaWRlYmFye1xuICBkaXNwbGF5OiBub25lO1xufVxuI3NpZGViYXIuYWN0aXZle1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuI3BhZ2Utd3JhcHBlci5ub21lbnV7XG4gIG1hcmdpbi1sZWZ0OiAwcHg7XG59XG5cbi5ib2R5LXNtYWxsICNwYWdlLXdyYXBwZXJ7XG4gIG1hcmdpbi1sZWZ0OiA3MHB4O1xufVxuIl19 */\"","module.exports = \"<nav id=\\\"sidebar\\\" class=\\\"active navbar-default navbar-static-side\\\" role=\\\"navigation\\\">\\n\\t<div class=\\\"sidebar-collapse\\\">\\n\\t\\t<ul class=\\\"nav\\\" id=\\\"side-menu\\\">\\n\\t\\t\\t<sidebar-header-cmp></sidebar-header-cmp>\\n\\t\\t\\t<sidebar-cmp></sidebar-cmp>\\n\\t\\t</ul>\\n\\t</div>\\n</nav>\\n<div id=\\\"page-wrapper\\\" class=\\\"gray-bg\\\">\\n\\t<div class=\\\"row border-bottom\\\">\\n\\t\\t<nav class=\\\"navbar navbar-static-top\\\" role=\\\"navigation\\\" style=\\\"margin-bottom: 0\\\">\\n\\t\\t\\t<content-header-cmp></content-header-cmp>\\n\\t\\t</nav>\\n\\t</div>\\n\\t<navbar-cmp></navbar-cmp>\\n\\t<div class=\\\"{{class}}\\\">\\n   <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\">\\n     <div class=\\\"ibox float-e-margins\\\">\\n      <table-header-cmp></table-header-cmp>\\n      <div class = \\\"{{class3}}\\\">\\t\\t\\t\\t  \\t\\t\\t\\t    \\t\\t\\n       <router-outlet></router-outlet>\\t\\t    \\t\\t\\n     </div>\\n   </div>\\n </div>\\n</div>\\n</div>\\n<footer-cmp></footer-cmp>             \\n</div>\\n\\n<div id=\\\"modal-users\\\" class=\\\"modal fade\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content animated {{modalAnimation}}\\\">\\n      <div class=\\\"modal-body\\\">\\n        <div class=\\\"col-sm-12\\\"><p style=\\\"text-align: center;color: red\\\">{{message}}</p></div>\\n        <p></p>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-11\\\">              \\n            <div class=\\\"col-sm-1\\\">\\n            </div>               \\n            <form #heroForm=\\\"ngForm\\\">\\n              <div class=\\\"col-sm-11\\\">               \\n                <div  class=\\\"form-horizontal\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label class=\\\"col-lg-4 control-label\\\" style=\\\"margin-top: 15%\\\">Profile picture: &emsp;</label>\\n                    <div class=\\\"col-lg-8\\\">\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"profile-image upload-btn-wrapper\\\">\\n                          <img id=\\\"user_photo_modal\\\" [src]=\\\"image_path\\\" class=\\\"img-circle circle-border2\\\" alt=\\\"profile\\\">\\n                          <h5 class=\\\"text-center\\\">Edit</h5>\\n                          <input type=\\\"file\\\" #Image accept=\\\"image/*\\\" (change)=\\\"handleFileInput($event.target.files)\\\">                  \\n                        </div>\\n                        <div style=\\\"margin-top: 15%\\\" class=\\\"upload-btn-wrapper\\\">\\n                          <input type=\\\"file\\\" #Image accept=\\\"image/*\\\" (change)=\\\"handleFileInput($event.target.files)\\\">\\n                          \\n                        </div>\\n                      </div>\\n                    </div>       \\n                  </div>                                                               \\n                  <div class=\\\"form-group\\\">\\n                    <label class=\\\"col-lg-3 control-label\\\">Last name:</label>\\n                    <div class=\\\"col-lg-9\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Last Name\\\" [(ngModel)]=\\\"profile.Fname\\\" name = \\\"Fname\\\">\\n                    </div>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <label class=\\\"col-lg-3 control-label\\\">First name:</label>\\n                    <div class=\\\"col-lg-9\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"First Name\\\" [(ngModel)]=\\\"profile.Lname\\\" name = \\\"Lname\\\">\\n                    </div>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <label class=\\\"col-lg-3 control-label\\\">Username:</label>\\n                    <div class=\\\"col-lg-9\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\" [(ngModel)]=\\\"profile.username\\\" name = \\\"username\\\">\\n                    </div>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <label class=\\\"col-lg-3 control-label\\\">Card ID:</label>\\n                    <div class=\\\"col-lg-9\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"cardID\\\" [(ngModel)]=\\\"profile.cardID\\\" name = \\\"cardID\\\">\\n                    </div>\\n                  </div>\\n                </div>                            \\n\\n                <div>\\n                  <div class=\\\"col-sm-6\\\"></div>                \\n                  <button type=\\\"button\\\" class=\\\"btn btn-warning btn-sm\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n                  <button class=\\\"btn btn-primary btn-sm\\\" (click) = \\\"editProfile()\\\" >Save</button>                      \\n                </div>                      \\n\\n              </div>\\n            </form>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div id=\\\"modal-users2\\\" class=\\\"modal fade\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content animated {{modalAnimation}}\\\">\\n      <div class=\\\"modal-body\\\">\\n        <div class=\\\"col-sm-12\\\"><p style=\\\"text-align: center;color: red\\\">{{message}}</p></div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-11\\\">              \\n            <div class=\\\"col-sm-1\\\">\\n            </div>               \\n            <form [formGroup]=\\\"modalForm\\\"  novalidate> \\n              <div class=\\\"col-sm-11\\\">               \\n                <div  class=\\\"form-horizontal\\\">                                                                      \\n                 <div class=\\\"form-group\\\">\\n                  <label class=\\\"col-lg-2 control-label\\\">Current Password:</label>\\n                  <div class=\\\"col-lg-10\\\">\\n                    <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Current Password\\\" formControlName=\\\"current_password\\\">\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"col-lg-2 control-label\\\">New Password:</label>\\n                  <div class=\\\"col-lg-10\\\">\\n                    <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"New Password\\\" formControlName=\\\"new_password\\\">\\n                  </div>\\n                </div>                                            \\n              </div>                            \\n\\n              <div>\\n                <div class=\\\"col-sm-6\\\"></div>                \\n                <button type=\\\"button\\\" class=\\\"btn btn-warning btn-sm\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n                <button class=\\\"btn btn-primary btn-sm\\\" (click) = \\\"changePassword()\\\" >Save</button>                      \\n              </div>                      \\n\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n</div>\\n\"","import { Component, DoCheck} from '@angular/core'\nimport { FormBuilder, FormGroup, Validators } \tfrom '@angular/forms';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { DashboardService } from './dashboard.service';\nimport { ErrorHandlerService } from './../error-handler.service';\nimport { SidebarHeaderComponent } from '../share/sidebar-header/sidebar-header.component';\nimport { Profile } from './dashboard.metadata';\nimport * as $ from 'jquery'\ndeclare var $: any;\n\n@Component\n({\n\tselector: 'dashboard-cmp',\n  templateUrl: 'dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\n\nexport class DashboardComponent implements DoCheck\n{\n\n\tmessage: string;\n\tclass: string;\n\tclass2: string;\n\tclass3: string; \n\n\tmodalForm: FormGroup\n\n\tprofile: Profile = {Fname: '', Lname: '', username: '', cardID: ''}\n\tuser_id: string\n\tmodalAnimation = \"fadeInLeftBig\"\n\n\n\timage_path = \"../assets/img/logo.png\"\n\timageToUpload: File = null;\n\n\tdoCheck:boolean = true\n\turl: string\n\n\tconstructor( private dashboardService: DashboardService, private formBuilder: FormBuilder, private errorHandlerService: ErrorHandlerService, private sidebarHeaderComponent:SidebarHeaderComponent){ this.createForm()}\n\n\tcreateForm()\n\t{\t\t\t\t\t\n\t\tthis.modalForm = this.formBuilder.group\n\t\t({\n\t\t\tcurrent_password: ['',Validators.required],\n\t\t\tnew_password: ['', Validators.required],\n\t\t})    \n\t}\n\n\tngOnInit()\n\t{\t\t\n\t\tthis.message = \"\"\t\n\t\tthis.dashboardService.EditProfile()\n\t\t.subscribe( data =>\n\t\t{\t\t\t\t\t\n\t\t\tthis.profile.Fname = data['Fname']\n\t\t\tthis.profile.Lname = data['Lname']\n\t\t\tthis.profile.username = data['username']\n\t\t\tthis.profile.cardID = data['cardID']\t\n\t\t\tthis.user_id = data['id']\t\t\t\t\t\n\t\t})\t\n\n\t\tthis.dashboardService.Get_user_photo()\n\t\t.subscribe( data =>\n\t\t{\n\t\t\tif(data['type'] == 'image/jpg')\n\t\t\t{\t\t\t\t\n\t\t\t\tthis.createImageFromBlob(data)\n\t\t\t}\n\t\t\telse{\n\t\t\t\t$(\"user_photo_modal\")['src'] = \"../assets/img/logo.png\"\n\t\t\t}\n\t\t})\n\n\t\tif(location.hash.slice(1,location.hash.length) == \"/home/roomStatus\" || location.hash.slice(1,location.hash.length) == \"/home/admin/roomStatus\")\n\t\t{\n\t\t\tconsole.log(\"MINI\")\n\t\t\tvar body_class_name = $(\"index-body\").attr(\"class\")\n\t  \t\tif(body_class_name == undefined || body_class_name.indexOf(\"mini-navbar\") == -1)\n\t  \t\t{\n          $(\"#index-body\").attr({'class': \"mini-navbar body-small\"})\n\t  \t\t} \n\t\t}\t\t\n\t}\n\n\tngDoCheck()\n\t{\t\t\n\t\tif(this.doCheck)\n\t\t{\n\t\t\tif (location.hash.slice(1,location.hash.length) == \"/home/roomStatus\" || location.hash.slice(1,location.hash.length) == \"/home/appLogs\" || location.hash.slice(1,location.hash.length) == \"/home/admin/roomStatus\")\n\t\t\t{\n\t\t\t\tthis.class = \"\"\t\t\n\t\t\t\tthis.class3 = \"\"\n\t\t\t\tconsole.log(\"PASS\")\n\t\t\t}\n\t\t\telse \n\t\t\t{\t\t\t\n\t\t\t\tthis.class = \"wrapper wrapper-content animated fadeInRight\"\t\t\t\n\t\t\t\tthis.class3 = \"ibox-content\"\n\t\t\t}\t\t\t\n\t\t\tthis.doCheck = false\n\t\t\tthis.url = location.hash.slice(1,location.hash.length)\n\t\t}\n\t\telse if(this.url != location.hash.slice(1,location.hash.length))\n\t\t{\n\t\t\tthis.doCheck = true\n\t\t\tif(location.hash.slice(1,location.hash.length) == \"/home/roomStatus\" || location.hash.slice(1,location.hash.length) == \"/home/admin/roomStatus\")\n\t\t\t{\n\t\t\t\tconsole.log(\"MINI\")\n\t\t\t\tvar body_class_name = $(\"#index-body\").attr('class')  \t\t\n        if(body_class_name == undefined || body_class_name.indexOf(\"mini-navbar\") == -1)\n        {\n          $(\"#index-body\").attr({'class': \"mini-navbar body-small\"});\n        } \n\t\t\t}\n\t\t\telse if(location.hash.slice(1,location.hash.length) != \"/home/roomStatus\" || location.hash.slice(1,location.hash.length) != \"/home/admin/roomStatus\")\n\t\t\t{\n\t\t\t\tvar body_class_name = $(\"#index-body\").attr('class')\n\t\t\t\tif(body_class_name == undefined || body_class_name.indexOf(\"mini-navbar\") == 0)\n\t\t  \t\t{\n\t\t  \t\t\tconsole.log(\"YES\")\n            $(\"#index-body\").attr({'class': \"body-small\"})\n\t\t  \t\t}\n\t\t  \t}\t\t\t\n\t\t}\t\t\t\n\t}\n\n\tupdateUser()\n\t{\t\t\n\t\tvar usrFrmData = this.modalForm.value\n\t\tthis.dashboardService.UpdateUser(usrFrmData)\n\t\t.subscribe( data => \n\t\t{\t\t\t\t\n\t\t\tif(data!=null && data['message'])\n\t\t\t{\n\t\t\t\tthis.message = data['message']\n\t\t\t}\n\t\t\telse\n\t\t\t{\n        this.message = \"\"\n        $(\"#modal-users\").modal(\"hide\");\n\t\t\t\tthis.ngOnInit()\n\t\t\t}\t\t\t\t\t\t\n\t\t},(error: HttpErrorResponse) =>\n      {\n        this.message = error.error['message'];\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t})\t\t\n\t}\n\t\n\n\teditProfile()\n\t{\n\t\tconst formData: FormData = new FormData();\t\t\n\t\tformData.append('Fname', this.profile['Fname']);\t\t\n\t\tformData.append('Lname', this.profile['Lname']);\n\t\tformData.append('username', this.profile['username']);\n\t\tformData.append('cardID', this.profile['cardID']);\n\n\t\tif(this.imageToUpload != null)\n\t\t{\t\t\t\n\t\t\tformData.append('Image', this.imageToUpload);\n\t\t}\t\t\n\n\t\tthis.dashboardService.routeID = this.user_id\n\t\tthis.dashboardService.UpdateUser(formData)\n\t\t.subscribe( data => \n\t\t{\t\t\t\t\t\t\n\t\t\tif(data == null)\n\t\t\t{\t\t\t\t\n\t\t\t\tthis.message = \"\"\n\t\t\t\tthis.ngOnInit()\n        $(\"#modal-users\").modal(\"hide\");\n\t\t\t\tthis.sidebarHeaderComponent.ngOnInit()\n\t\t\t}\t\n\t\t\telse if(data['message'])\n\t\t\t{\n\t\t\t\tthis.message = data['message']\n\t\t\t}\t\t\t\t\t\t\t\t\n\t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n        this.message = error.error['message'];\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t})\n\t}\n\n\thandleFileInput(file: FileList)\n\t{\t\t\n\t\tthis.imageToUpload = file.item(0);\t\t\n\n\t    //Show image preview\n\t    var reader = new FileReader();\n\t    reader.onload = (event:any) => {\n\t      this.image_path = event.target.result;\t      \n\t    }\t    \n\t    reader.readAsDataURL(this.imageToUpload);\n\t}\n\n\tcreateImageFromBlob(image: Blob) {\n\t   let reader = new FileReader();\n\t   reader.addEventListener(\"load\", () => {\t   \t\t\t     \n       $(\"#user_photo_modal\").attr({'src': reader.result});\n\t   }, false);\n\n\t   if (image) {\t   \t\t\n\t      reader.readAsDataURL(image);\n\t   }\n\t}\n\n\tchangePassword()\n\t{\t\t\t\t\n\t\tthis.dashboardService.ChangePassword(this.modalForm.value)\n\t\t.subscribe( data =>\n\t\t{\t\t\t\n\t\t\tif(data['message'] != 'your password is successfully changed')\n\t\t\t{\n\t\t\t\tthis.message = data['message']\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.message = \"\"\n        $(\"#modal-users2\").modal(\"hide\");\n\t\t\t}\n\t\t},(error: HttpErrorResponse) =>\n      {\n        this.message = error.error['message'];\n\t\t\t\tthis.errorHandlerService.handleError(error);\n      }\n    )\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule }    from '@angular/forms';\nimport { CommonModule }   from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter'; //importing the module\nimport { OrderModule } from 'ngx-order-pipe'; //importing the module\nimport { NgxPaginationModule } from 'ngx-pagination'; // <-- import the module\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AdminUsersComponent } from './admin/users/users.component';\nimport { AdminPermissionComponent } from './admin/permission/permission.component';\nimport { AdminGroupComponent } from './admin/group/group.component';\nimport { AdminMemberComponent } from './admin/member/member.component';\nimport { AdminRoomComponent } from './admin/room/room.component';\nimport { AdminRoomAccessComponent } from './admin/roomAccess/room-access.component';\nimport { AdminAuditTrailComponent } from './admin/auditTrail/audit-trail.component';\nimport { AdminRoomStatusComponent } from './admin/roomStatus/room-status.component';\nimport { AdminAppLogsComponent } from './admin/appLogs/app-logs.component';\nimport { UsersComponent } from './user/users/users.component';\nimport { PermissionComponent } from './user/permission/permission.component';\nimport { GroupComponent } from './user/group/group.component';\nimport { MemberComponent } from './user/member/member.component';\nimport { RoomComponent } from './user/room/room.component';\nimport { RoomAccessComponent } from './user/roomAccess/room-access.component';\nimport { AuditTrailComponent } from './user/auditTrail/audit-trail.component';\nimport { RoomStatusComponent } from './user/roomStatus/room-status.component';\nimport { DevicesComponent } from './admin/devices/devices.component'\nimport { DashboardComponent } from './dashboard.component';\n\nimport { DashboardRoutingModule } from './dashboard.routes';\nimport { SidebarHeaderModule } from '../share/sidebar-header/sidebar-header.module';\nimport { ContentHeaderModule } from '../share/content-header/content-header.module';\nimport { NavbarModule } from '../share/navbar/navbar.module';\nimport { TableHeaderModule } from '../share/table-header/table-header.module';\nimport { FooterModule } from '../share/footer/footer.module';\nimport { SidebarModule } from '../sidebar/sidebar.module';\nimport { TokenRegistrationService } from '../tokenRegistration.service';\n\n\n@NgModule({\n  imports: \n  [      \n    FormsModule,\n    CommonModule,\n    ReactiveFormsModule,\n    DashboardRoutingModule,\n    SidebarHeaderModule,\n    ContentHeaderModule,\n    NavbarModule,\n    TableHeaderModule,\n    FooterModule,   \n    SidebarModule,\n    Ng2SearchPipeModule, //including into imports\n    OrderModule, // importing the sorting package here\n    NgxPaginationModule,\n    HttpClientModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: TokenRegistrationService, multi: true},\n  ],\n  declarations: \n  [ \n    AdminUsersComponent,\n    AdminPermissionComponent,\n    AdminGroupComponent,\n    AdminMemberComponent,\n    AdminRoomComponent,\n    AdminRoomAccessComponent,\n    AdminAuditTrailComponent,\n    AdminRoomStatusComponent,\n    AdminAppLogsComponent,\n    UsersComponent,\n    PermissionComponent,\n    GroupComponent,\n    MemberComponent,\n    RoomComponent,\n    RoomAccessComponent,\n    AuditTrailComponent,\n    RoomStatusComponent,\n    DevicesComponent,\n    DashboardComponent\n  ]\n\n})\n\nexport class DashboardModule{}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AdminUsersComponent } from './admin/users/users.component';\nimport { AdminPermissionComponent } from './admin/permission/permission.component';\nimport { AdminGroupComponent } from './admin/group/group.component';\nimport { AdminMemberComponent } from './admin/member/member.component';\nimport { AdminRoomComponent } from './admin/room/room.component';\nimport { AdminRoomAccessComponent } from './admin/roomAccess/room-access.component';\nimport { AdminAuditTrailComponent } from './admin/auditTrail/audit-trail.component';\nimport { AdminRoomStatusComponent } from './admin/roomStatus/room-status.component';\nimport { AdminAppLogsComponent } from './admin/appLogs/app-logs.component';\nimport { UsersComponent } from './user/users/users.component';\nimport { PermissionComponent } from './user/permission/permission.component';\nimport { GroupComponent } from './user/group/group.component';\nimport { MemberComponent } from './user/member/member.component';\nimport { RoomComponent } from './user/room/room.component';\nimport { RoomAccessComponent } from './user/roomAccess/room-access.component';\nimport { AuditTrailComponent } from './user/auditTrail/audit-trail.component';\nimport { RoomStatusComponent } from './user/roomStatus/room-status.component';\nimport { DashboardComponent } from '../dashboard/dashboard.component';\nimport { DevicesComponent } from './admin/devices/devices.component';\n\nimport { AuthGuard } from '../route-guard';\n\nimport { AdminUsersService } from './admin/users/users.service';\nimport { AdminPermissionService } from './admin/permission/permission.service';\nimport { AdminGroupService } from './admin/group/group.service';\nimport { AdminMembersService } from './admin/member/member.service';\nimport { AdminRoomService } from './admin/room/room.service';\nimport { AdminRoomAccessService } from './admin/roomAccess/room-access.service';\nimport { DevicesService } from './admin/devices/devices.service';\nimport { AdminRoomStatusService } from './admin/roomStatus/room-status.service';\nimport { AdminAuditTrailService } from './admin/auditTrail/audit-trail.service';\nimport { AdminAppLogsService } from './admin/appLogs/app-logs.service';\n\nimport { UsersService } from './user/users/users.service';\nimport { PermissionService } from './user/permission/permission.service';\nimport { GroupService } from './user/group/group.service';\nimport { MembersService } from './user/member/member.service';\nimport { RoomService } from './user/room/room.service';\nimport { RoomAccessService } from './user/roomAccess/room-access.service';\nimport { AuditTrailService } from './user/auditTrail/audit-trail.service';\nimport { RoomStatusService } from './user/roomStatus/room-status.service';\n\nimport { SessionService } from '.././session.service';\nimport { ErrorHandlerService } from '.././error-handler.service';\nimport { DashboardService } from './dashboard.service';\n\nimport { SidebarHeaderComponent } from '../share/sidebar-header/sidebar-header.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardComponent,\n    canActivate: [AuthGuard],\n    canActivateChild: [AuthGuard],\n    children: \n    [\n      {\n        path: 'admin/users',\n        component: AdminUsersComponent,\n        data: {\n          inMenu: true,\n          icon: 'fa fa-user',\n          class: 'nav-label',\n          title: 'Users',\n          status: '',\n          accessUrl: '/users'\n        }\n      },\n      {\n        path: 'admin/groups',\n        component: AdminGroupComponent,\n        data: {\n          inMenu: true,\n          icon: 'fa fa-group',\n          class: 'nav-label',\n          title: 'Groups',\n          status: '',\n          accessUrl: '/groups'\n        }\n      },\n      {\n        path: 'admin/permissions',\n        component: AdminPermissionComponent,\n        data: {\n          inMenu: true,\n          icon: 'fa fa-unlock-alt',\n          class: 'nav-label',\n          title: 'Permissions',\n          status: '',\n          accessUrl: '/permissions'\n        }\n      },\n      {\n        path: 'admin/rooms',\n        component: AdminRoomComponent,\n        data: {\n          inMenu: true,\n          icon: 'fa fa-bank',\n          class: 'nav-label',\n          title: 'Rooms',\n          status: '',\n          accessUrl: '/rooms'\n        }\n      },\n      {\n        path: 'admin/roomStatus',\n        component: AdminRoomStatusComponent,\n        data: {\n          inMenu: true,\n          icon: 'fa fa-sliders',\n          class: 'nav-label',\n          title: 'Room Control',\n          status: '',\n          accessUrl: '/RoomStatus'\n        }\n      },\n      {\n        path: 'admin/auditTrials',\n        component: AdminAuditTrailComponent,\n        data: {\n          inMenu: true,\n          icon: 'fa fa-table',\n          class: 'nav-label',\n          title: 'Audit Trails',\n          status: '/auditTrail'\n        }\n      },\n      { \n        path: 'admin/groupMember/:id',\n        component: AdminMemberComponent,\n        data:{\n          inMenu: false\n        }\n      },\n      { path: 'admin/roomAccess/:id', component: AdminRoomAccessComponent},\n      {\n        path: 'admin/devices',\n        component: DevicesComponent,\n        data: {\n          inMenu: false,\n          icon: 'fa fa-th-list',\n          class: 'nav-label',\n          title: \"Devices\",\n          status: ''\n        }\n      },\n      {\n        path: 'admin/appLogs',\n        component: AdminAppLogsComponent,\n        data: {\n          inMenu: false,\n          icon: 'fa fa-tasks',\n          class: 'nav-label',\n          title: 'App Logs',\n          status: ''\n        }\n      },\n      {\n        path: 'users',\n        component: UsersComponent,\n        data: {\n          inMenu: false,\n          icon: 'fa fa-user',\n          class: 'nav-label',\n          title: 'Users',\n          status: ''\n        }\n      },\n      {\n        path: 'groups',\n        component: GroupComponent,\n        data: {\n          inMenu: false,\n          icon: 'fa fa-group',\n          class: 'nav-label',\n          title: 'Groups',\n          status: ''\n        }\n      },\n      {\n        path: 'permissions',\n        component: PermissionComponent,\n        data: {\n          inMenu: false,\n          icon: 'fa fa-unlock-alt',\n          class: 'nav-label',\n          title: 'Permissions',\n          status: ''\n        }\n      },\n      { path: 'groupMember/:id', component: MemberComponent },\n      {\n        path: 'rooms',\n        component: RoomComponent,\n        data: {\n          inMenu: false,\n          icon: 'fa fa-bank',\n          class: 'nav-label',\n          title: 'Rooms',\n          status: ''\n        }\n      },\n      {path: 'roomAccess/:id', component: RoomAccessComponent},\n      {\n        path: 'roomStatus',\n        component: RoomStatusComponent,\n        data: {\n          inMenu: false,\n          icon: 'fa fa-sliders',\n          class: 'nav-label',\n          title: 'Room Status',\n          status: ''\n        }\n      },\n      {\n        path: 'auditTrials',\n        component: AuditTrailComponent,\n        data: {\n          inMenu: false,\n          icon: 'fa fa-table',\n          class: 'nav-label',\n          title: 'Audit Trails',\n          status: ''\n        }\n      }\n    ]\n  }\n];\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: \n  [\n    RouterModule\n  ],\n  providers: \n  [\n    AuthGuard,\n    AdminUsersService,\n    AdminPermissionService,\n    AdminGroupService,\n    AdminMembersService,\n    AdminRoomService,\n    AdminRoomAccessService,\n    DevicesService,\n    AdminRoomStatusService,\n    AdminAuditTrailService,\n    AdminAppLogsService,\n\n    UsersService,\n    PermissionService,\n    GroupService,\n    MembersService,\n    RoomService,\n    RoomAccessService,\n    AuditTrailService,\n    RoomStatusService,\n\n    SessionService,\n    ErrorHandlerService,     \n    DashboardService,\n\n    SidebarHeaderComponent  \n  ]\n})\n\nexport class DashboardRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router }    from '@angular/router';\nimport { environment } from './../.././environments/environment'; \nimport { Observable } from 'rxjs';\n\n\n\n\n@Injectable()\nexport class DashboardService\n{\n\trouteID: string\n\n\tconstructor ( private http: HttpClient, private cookieService: CookieService, private router: Router ){}\n\tprivate baseUrl = environment.backend_uri;\n\n\n\tUpdateUser(body: FormData)\n\t{\t\t\t\t\n        \n\t\treturn this.http.put(`${this.baseUrl}/user/${this.routeID}`,body,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\t\t\t\n\t}\n\n\tEditProfile()\n\t{\n\t\treturn this.http.get(`${this.baseUrl}/editProfile`,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\n\t}\n\n\tChangePassword(body: object)\n\t{\n\t\treturn this.http.post(`${this.baseUrl}/changeUserPassword`,body,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\n\t}\n\n\tGet_user_photo(): Observable<Blob> \n\t{\n\t\treturn this.http.put(`${this.baseUrl}/account/photo`,{data:null},\n\t\t{\n\t\t\theaders: this.Headers(),\n\t\t\tresponseType: 'blob' \n\t\t})\n\t}\n\n\tprivate Headers()\n\t{\n\t\tif(this.cookieService.get('token'))\n\t\t{\t\t\t\n\t\t\treturn new HttpHeaders().set('x-access-token', this.cookieService.get('token'))\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.cookieService.deleteAll()\n\t\t\tthis.router.navigate(['/login']);\n\t\t}\n\t}\t\n\t\n\t\n}\n","module.exports = \"<div class=\\\"form-horizontal2\\\">\\n    <div class=\\\"form-group2 col2-sm-12\\\">\\n\\t\\t<div class=\\\"col2-sm-6\\\">\\n\\t\\t\\t<div class=\\\"input-group-btn\\\">\\n               \\t<button tabindex=\\\"-1\\\" class=\\\"btn btn-white btn2-sm\\\" type=\\\"button\\\" (click)=\\\"selecTag()\\\" >&emsp;{{row}}&emsp;</button>\\n               \\t<button data-toggle=\\\"dropdown\\\" class=\\\"btn btn-primary dropdown-toggle btn2-sm\\\" type=\\\"button\\\" (click)=\\\"selecTag()\\\" ><span class=\\\"caret\\\"></span></button>\\n\\t               <ul id=\\\"selectList\\\" class=\\\"dropdown-menu\\\">\\n\\t               \\t   <li><a (click)=manageRow(10)>10</a></li>\\n\\t                   <li><a (click)=manageRow(50)>50</a></li>\\n\\t                   <li><a (click)=manageRow(100)>100</a></li>\\n\\t                   <li><a (click)=manageRow(totalUsr)>Show all</a></li>                 \\n\\t               </ul>\\n       \\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col2-sm-6\\\">\\n\\t\\t\\t<div class=\\\"col2-sm-7\\\"></div>\\n\\t\\t\\t<div class=\\\"col2-sm-5\\\">\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t<input type=\\\"text\\\" placeholder=\\\"Search for something...\\\" class=\\\"form-control pull-right input-sm\\\" name=\\\"search\\\" [(ngModel)]=\\\"filter\\\">\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n    </div>                   \\n</div>    \\n\\t<table class=\\\"table table-striped table-bordered table-hover \\\">\\n\\t<thead>\\n\\t\\t<tr>\\t\\t\\t\\n\\t\\t\\t<th style=\\\"width: 40px\\\" (click)=\\\"sort('id',0)\\\" class=\\\"{{class[1][0]}}\\\">\\n\\t\\t\\t\\tID<span class=\\\"fa fa-sort{{class[0][0]}} pull-right\\\"></span>\\n\\t\\t\\t</th>\\n\\t\\t\\t<th (click)=\\\"sort('Fname',1)\\\" class=\\\"{{class[1][1]}}\\\">\\n\\t\\t\\t\\tFirst Name<span class=\\\"fa fa-sort{{class[0][1]}} pull-right\\\"></span>\\n\\t\\t\\t</th>\\t\\t\\t\\t\\n\\t\\t\\t<th (click)=\\\"sort('username',2)\\\" class=\\\"{{class[1][2]}}\\\">\\n\\t\\t\\t\\tUsername<span class=\\\"fa fa-sort{{class[0][2]}} pull-right\\\"></span>\\n\\t\\t\\t</th>\\n\\t\\t\\t<th (click)=\\\"sort('cardID',3)\\\" class=\\\"{{class[1][3]}}\\\">\\n\\t\\t\\t\\tCardID<span class=\\\"fa fa-sort{{class[0][3]}} pull-right\\\"></span>\\n\\t\\t\\t</th>\\n\\t\\t\\t<th (click)=\\\"sort('permission',4)\\\" class=\\\"{{class[1][4]}}\\\">\\n\\t\\t\\t\\tPermission<span class=\\\"fa fa-sort{{class[0][4]}} pull-right\\\"></span>\\n\\t\\t\\t</th>\\n\\t\\t\\t<th (click)=\\\"sort('room',5)\\\" class=\\\"{{class[1][5]}}\\\">\\n\\t\\t\\t\\tRoom<span class=\\\"fa fa-sort{{class[0][5]}} pull-right\\\"></span>\\n\\t\\t\\t</th>\\n\\t\\t\\t<th (click)=\\\"sort('timestamp',6)\\\" class=\\\"{{class[1][6]}}\\\">\\n\\t\\t\\t\\tTimestamp<span class=\\\"fa fa-sort{{class[0][6]}} pull-right\\\"></span>\\n\\t\\t\\t</th>\\n\\t\\t\\t<th (click)=\\\"sort('action',7)\\\" class=\\\"{{class[1][7]}}\\\" style=\\\"width: 70px\\\">\\n\\t\\t\\t\\taction<span class=\\\"fa fa-sort{{class[0][7]}} pull-right\\\"></span>\\n\\t\\t\\t</th>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t</tr>\\n\\t</thead>\\n\\t<tbody>\\n\\t\\t<tr *ngFor=\\\"let data of auditTrail | orderBy: key : reverse | filter:filter | paginate: { itemsPerPage: row, currentPage: p };\\\">\\n\\t\\t\\t<td>{{data.id}}</td>\\n\\t\\t\\t<td>{{data.Fname}}</td>\\n\\t\\t\\t<td>{{data.username}}</td>\\n\\t\\t\\t<td>{{data.cardID}}</td>\\n\\t\\t\\t<td>{{data.permission}}</td>\\n\\t\\t\\t<td>{{data.room}}</td>\\t\\n\\t\\t\\t<td>{{data.timestamp}}</td>\\t\\n\\t\\t\\t<td>{{data.action}}</td>\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t</tr>\\n\\t</tbody>\\n</table>\\n<p>Showing 1 to {{row}} of {{totalUsr}}</p>\\n<div class=\\\"pull-right\\\">\\n\\t<pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n</div><br><br>\\t\\n <button type=\\\"submit\\\" class=\\\"btn btn-w-m btn-primary btn-sm\\\" (click) = \\\"refresh()\\\">Refresh</button>\\n\\n\\n\"","import { Component, OnInit} from '@angular/core'\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { AuditTrailService } from './audit-trail.service';\nimport { ErrorHandlerService } from '../../../error-handler.service';\n\n@Component\n({\n\tselector: 'audit-trail-cmp',\n\ttemplateUrl: 'audit-trail.component.html'\n})\n\nexport class AuditTrailComponent implements OnInit\n{\n\n\tauditTrail: object[]\n\n\tclass = [[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]]\n\tkey: string = 'id'\n\treverse: boolean = true\n\trow = 10\n\ttotalUsr: number\n\ttempID\t\n\tfilter: string\n\n\tconstructor(private auditTrailService: AuditTrailService,\n\t\t\t    private errorHandlerService: ErrorHandlerService ){}\n\n\tngOnInit()\n\t{\n\t\tthis.auditTrailService.GetAuditTrails()\n\t\t.subscribe( data =>\n\t\t{\n\t\t\tthis.auditTrail = data['auditTrail']\n\t\t\tthis.totalUsr = this.auditTrail.length\n\t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t})\n\t}\n\t\n\n\trefresh()\n\t{\n\t\tthis.ngOnInit()\n\t}\n\n\tsort(key, id: number)\n\t{\t\t\n\t\tconsole.log(key,id)\t\n\t\tthis.key = key;\n\t\tthis.reverse = !this.reverse;\n\t\tif(this.class[0][id] == \"\" || this.class[0][id] == \"-asc\")\n\t\t{\n\t\t\tthis.class[0][id] = \"-desc\"\n\t\t}\n\t\telse if(this.class[0][id] == \"-desc\")\n\t\t{\n\t\t\tthis.class[0][id] = \"-asc\"\n\t\t}\t\t\n\t\tthis.class[1][this.tempID] = \"\"\n\t\tthis.class[1][id] = \"active\"\n\t\tthis.tempID = id\t\n\t\tconsole.log(this.class)\t\n\t}\n\n\tmanageRow(length: number)\n\t{\t\t\n\t\tthis.row = length\n\t\tthis.selecTag()\n\t}\n\tp: number = 1;\n\n\tselecTag()\n\t{\n\t\tvar class_name = document.getElementById(\"selectList\").className\n\t\tif(class_name == \"dropdown-menu\")\n\t\t{\n\t\t\tdocument.getElementById(\"selectList\").className += \" show\"\n\t\t}\n\t\tif(class_name == \"dropdown-menu show\")\n\t\t{\n\t\t\tdocument.getElementById(\"selectList\").className = \"dropdown-menu\"\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router }    from '@angular/router';\nimport { environment } from './../../../../environments/environment'; \n\n\n@Injectable()\nexport class AuditTrailService\n{\n\tconstructor ( private http: HttpClient, private cookieService: CookieService, private router: Router ){}\n\tprivate baseUrl = environment.backend_uri;\n\n\tGetAuditTrails()\n\t{\n\t\treturn this.http.get(`${this.baseUrl}/auditTrail`,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\n\t}\t\n\n\tprivate Headers()\n\t{\n\t\tif(this.cookieService.get('token'))\n\t\t{\n\t\t\treturn new HttpHeaders().set('x-access-token', this.cookieService.get('token'))\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconsole.log(\"token is missing\")\n\t\t\tthis.cookieService.delete(\"token\")\n\t\t\tthis.cookieService.delete('username');\n\t\t\tthis.cookieService.delete('userType');\n\t\t\tthis.router.navigate(['/login']);\n\t\t}\n\t}\t\n}","module.exports = \"<!-- <div class=\\\"col2-sm-10\\\"><div class=\\\"col-sm-6\\\"></div><p style=\\\"color: red\\\">{{message}}</p></div>\\n<div class=\\\"wrapper wrapper-content animated fadeInRight\\\">\\n\\t<div class=\\\"row\\\">\\n\\n\\t\\t<div *ngFor = \\\"let group of groups\\\">\\n\\t\\t\\t<div class=\\\"col-lg-4\\\">\\n\\t\\t\\t    <div class=\\\"grow\\\">\\n\\t\\t\\t        <div class=\\\"contact-box\\\">                       \\n\\t\\t\\t            <div class=\\\"col-lg-4\\\">\\n\\t\\t\\t                <div class=\\\"text-center\\\">\\n\\t\\t\\t                    <img alt=\\\"image\\\" class=\\\"img-circle m-t-xs img-responsive\\\" src=\\\"assets/img/letters/{{group.name[0]}}.png\\\">                          \\n\\t\\t\\t                    <div class=\\\"m-t-xs font-bold\\\">Room: {{group.id}}</div>\\n\\t\\t\\t                </div>\\t\\t\\t             \\n\\t\\t\\t            </div>\\n\\t\\t\\t            <a (click)=showMember(group.id)>\\n\\t\\t\\t                <div class=\\\"col-sm-8\\\">                    \\n\\t\\t\\t                    <h3><strong>{{group.name}}</strong></h3>                    \\n\\t\\t\\t                    <strong>Description:</strong><br>\\n                          <p>{{group.description}}</p>\\n                          <strong>Permission:</strong><br>\\n                          <p>{{group.permission_name}}</p>\\n                          <strong>Number of members:</strong>&nbsp;{{group.members}}                                    \\n\\t\\t\\t                </div>\\n\\t\\t\\t                <div class=\\\"clearfix\\\"></div>\\n\\t\\t\\t            </a>\\n\\t\\t\\t        </div>\\n\\t\\t\\t    </div>\\n\\t\\t\\t</div>\\n\\t\\t</div>    \\n    </div>\\n</div> -->\\n\\n<div class=\\\"form-horizontal2\\\">\\n\\t\\t<div class=\\\"form-group2 col2-sm-12\\\">\\n\\t\\t\\t<div class=\\\"col2-sm-6\\\">\\n\\t\\t\\t\\t<div class=\\\"input-group-btn\\\">\\n\\t\\t\\t\\t\\t<button tabindex=\\\"-1\\\" class=\\\"btn btn-white btn2-sm\\\" type=\\\"button\\\" (click)=\\\"selecTag()\\\">&emsp;{{row}}&emsp;</button>\\n\\t\\t\\t\\t\\t<button data-toggle=\\\"dropdown\\\" class=\\\"btn btn-primary dropdown-toggle btn2-sm\\\" type=\\\"button\\\" (click)=\\\"selecTag()\\\"><span class=\\\"caret\\\"></span></button>\\n\\t\\t\\t\\t\\t<ul id=\\\"selectList\\\" class=\\\"dropdown-menu\\\">\\n\\t\\t\\t\\t\\t\\t<li><a (click)=manageRow(10)>10</a></li>\\n\\t\\t\\t\\t\\t\\t<li><a (click)=manageRow(50)>50</a></li>\\n\\t\\t\\t\\t\\t\\t<li><a (click)=manageRow(100)>100</a></li>\\n\\t\\t\\t\\t\\t\\t<li><a (click)=manageRow(200)>Show all</a></li>                 \\n\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"col2-sm-6\\\">\\n\\t\\t\\t\\t<div class=\\\"col2-sm-7\\\"></div>\\n\\t\\t\\t\\t<div class=\\\"col2-sm-5\\\">\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" placeholder=\\\"Search for something...\\\" class=\\\"form-control pull-right input-sm\\\" name=\\\"search\\\" [(ngModel)]=\\\"filter\\\"> \\t\\t\\t\\t\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>                   \\n\\t</div>\\n\\t<table class=\\\"table table-striped table-bordered table-hover\\\">\\n\\t\\t<thead>\\n\\t\\t\\t<tr>\\t\\t\\t\\t\\n\\t\\t\\t\\t<th style=\\\"width: 50px\\\" (click)=\\\"sort('id',0)\\\" class=\\\"{{class[1][0]}}\\\">\\n\\t\\t\\t\\t\\tID<span class=\\\"fa fa-sort{{class[0][0]}} pull-right\\\"></span>\\n\\t\\t\\t\\t</th>\\n\\t\\t\\t\\t<th (click)=\\\"sort('name',1)\\\" class=\\\"{{class[1][1]}}\\\">\\n\\t\\t\\t\\t\\tName<span class=\\\"fa fa-sort{{class[0][1]}} pull-right\\\"></span>\\n\\t\\t\\t\\t</th>\\n\\t\\t\\t\\t<th (click)=\\\"sort('description',2)\\\" class=\\\"{{class[1][2]}}\\\">\\n\\t\\t\\t\\t\\tDescription<span class=\\\"fa fa-sort{{class[0][2]}} pull-right\\\"></span>\\n\\t\\t\\t\\t</th>\\n\\t\\t\\t\\t<th (click)=\\\"sort('description',3)\\\" class=\\\"{{class[1][3]}}\\\">\\n\\t\\t\\t\\t\\tMembers<span class=\\\"fa fa-sort{{class[0][3]}} pull-right\\\"></span>\\n\\t\\t\\t\\t</th>\\t\\t\\t\\t\\n\\t\\t\\t</tr>\\n\\t\\t</thead>\\n\\t\\t<tbody>\\n\\t\\t\\t<tr *ngFor=\\\"let group of groups | orderBy: key : reverse | filter:filter | paginate: { itemsPerPage: row, currentPage: p };\\\">\\t\\t\\t\\t\\n\\t\\t\\t\\t<td class=\\\"text-center\\\" style=\\\"padding: 6px 0\\\" (click)=showMember(group.id)>{{group.id}}</td>\\n\\t\\t\\t\\t<td (click)=showMember(group.id)>{{group.name}}</td>\\n\\t\\t\\t\\t<td (click)=showMember(group.id)>{{group.description}}</td>\\n\\t\\t\\t\\t<td class=\\\"text-center\\\" style=\\\"width: 90px\\\" (click)=GroupAccess(group.id)>{{group.members}}</td>\\t\\t\\t\\t\\n\\t\\t\\t</tr>\\n\\t\\t</tbody>\\n\\t</table>\\n\\t<p>Showing 1 to {{row}} of {{totalUsr}}</p>\\n\\t<div class=\\\"pull-right\\\">\\n\\t\\t<pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n\\t</div><br><br>\\n \"","import { Component, OnInit} from '@angular/core'\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\nimport { GroupService } from './group.service';\nimport { ErrorHandlerService } from '../../../error-handler.service';\n\n@Component\n({\n\tselector: 'group-cmp',\n\ttemplateUrl: 'group.component.html'\n})\n\nexport class GroupComponent\n{\n\tgroups: object[]\n\tmessage: string\n\t\t\n\tmodalAnimation: string\n\n\tclass = [[\"\",\"\",\"\",\"\"],[\"\",\"\",\"\",\"\"]]\n\ttempID\n\tkey: string = 'id'\n\treverse: boolean = false\n\ttotalUsr: number\n\tfilter: string\n\trow = 9\n\tp = 1\n\n\tconstructor( private groupService: GroupService, \n\t\t\t\t private errorHandlerService: ErrorHandlerService, private router: Router ){}\n\t\n\n\tngOnInit()\n\t{\n\t\tthis.groupService.getGroups()\n\t\t.subscribe( data => \n\t\t{\n\t\t\tthis.groups  = data['groups']\n\t\t\tthis.totalUsr = this.groups.length\n\t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t})\n\t}\n\n\t\n\n\tshowMember(id: string)\n\t{\n\t\tthis.router.navigate(['/home/groupMember',id])\n\t}\n\n\tmanageRow(length: number)\n\t{\t\t\n\t\tthis.row = length\n\t\tif(length == 200)\n\t\t{\n\t\t\tthis.row = this.totalUsr\n\t\t}\t\t\n\t\tthis.selecTag()\n\t}\n\n\tsort(key, id: number)\n\t{\t\t\t\t\n\t\tthis.key = key;\n\t\tthis.reverse = !this.reverse;\n\t\tif(this.class[0][id] == \"\" || this.class[0][id] == \"-asc\")\n\t\t{\n\t\t\tthis.class[0][id] = \"-desc\"\n\t\t}\n\t\telse if(this.class[0][id] == \"-desc\")\n\t\t{\n\t\t\tthis.class[0][id] = \"-asc\"\n\t\t}\t\t\n\t\tthis.class[1][this.tempID] = \"\"\n\t\tthis.class[1][id] = \"active\"\n\t\tthis.tempID = id\t\t\n\t}\n\n\tselecTag()\n\t{\t\t\n\t\tvar class_name = document.getElementById(\"selectList\").className\n\t\tif(class_name == \"dropdown-menu\")\n\t\t{\n\t\t\tdocument.getElementById(\"selectList\").className += \" show\"\n\t\t}\n\t\tif(class_name == \"dropdown-menu show\")\n\t\t{\n\t\t\tdocument.getElementById(\"selectList\").className = \"dropdown-menu\"\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router }    from '@angular/router';\nimport { environment } from './../../../../environments/environment'; \n\n@Injectable()\nexport class GroupService\n{\n  \tprivate baseUrl = environment.backend_uri;\n\trouteID: string\n\n\tconstructor ( private http: HttpClient, private cookieService: CookieService, private router: Router ){}\n\n\tgetGroups()\n\t{\n\t\treturn this.http.get(`${this.baseUrl}/groups`, \n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\t\t\n\t}\t\n\n\tprivate Headers()\n\t{\n\t\tif(this.cookieService.get('token'))\n\t\t{\n\t\t\treturn new HttpHeaders().set('x-access-token', this.cookieService.get('token'))\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconsole.log(\"token is missing\")\n\t\t\tthis.cookieService.delete(\"token\")\n\t\t\tthis.cookieService.delete('username');\n\t\t\tthis.cookieService.delete('userType');\n\t\t\tthis.router.navigate(['/login']);\n\t\t}\n\t}\t\n\n}\n\n","module.exports = \"<form #input=\\\"ngForm\\\">\\n\\n\\t<div class=\\\"form-horizontal2\\\">\\n        <div class=\\\"form-group2 col2-sm-12\\\">\\n\\t\\t\\t<div class=\\\"col2-sm-6\\\">\\n\\t\\t\\t\\t<div class=\\\"input-group-btn\\\">\\n               <button tabindex=\\\"-1\\\" class=\\\"btn btn-white btn2-sm\\\" type=\\\"button\\\" (click)=\\\"selecTag()\\\">&emsp;{{row}}&emsp;</button>\\n               <button data-toggle=\\\"dropdown\\\" class=\\\"btn btn-primary dropdown-toggle btn2-sm\\\" type=\\\"button\\\" (click)=\\\"selecTag()\\\"><span class=\\\"caret\\\"></span></button>\\n               <ul id=\\\"selectList\\\" class=\\\"dropdown-menu\\\">\\n               \\t   <li><a (click)=manageRow(10)>10</a></li>\\n                   <li><a (click)=manageRow(50)>50</a></li>\\n                   <li><a (click)=manageRow(100)>100</a></li>\\n                   <li><a (click)=manageRow(200)>Show all</a></li>                 \\n               </ul>\\n           </div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"col2-sm-6\\\">\\n\\t\\t\\t\\t<div class=\\\"col2-sm-7\\\"></div>\\n\\t\\t\\t\\t<div class=\\\"col2-sm-5\\\">\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" placeholder=\\\"Search for something...\\\" class=\\\"form-control pull-right input-sm\\\" name=\\\"search\\\" [(ngModel)]=\\\"filter\\\"> \\t\\t\\t\\t\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n        </div>                   \\n    </div>\\n\\n \\t<table class=\\\"table table-striped table-bordered table-hover\\\">\\n\\t\\t<thead>\\n\\t\\t\\t<tr>\\t\\t\\t\\t\\n\\t\\t\\t\\t<th style=\\\"width: 50px\\\" (click)=\\\"sort('id',0)\\\" class=\\\"{{class[1][0]}}\\\">\\n\\t\\t\\t\\t\\tID<span class=\\\"fa fa-sort{{class[0][0]}} pull-right\\\"></span>\\n\\t\\t\\t\\t</th>\\t\\t\\t\\t\\n\\t\\t\\t\\t<th (click)=\\\"sort('username',1)\\\" class=\\\"{{class[1][1]}}\\\">\\n\\t\\t\\t\\t\\tUsername<span class=\\\"fa fa-sort{{class[0][1]}} pull-right\\\"></span>\\n\\t\\t\\t\\t</th>\\n\\t\\t\\t\\t<th (click)=\\\"sort('Lname',2)\\\" class=\\\"{{class[1][2]}}\\\">\\n\\t\\t\\t\\t\\tLname<span class=\\\"fa fa-sort{{class[0][2]}} pull-right\\\"></span>\\n\\t\\t\\t\\t</th>\\n\\t\\t\\t\\t<th (click)=\\\"sort('Fname',3)\\\" class=\\\"{{class[1][3]}}\\\">\\n\\t\\t\\t\\t\\tFname<span class=\\\"fa fa-sort{{class[0][3]}} pull-right\\\"></span>\\n\\t\\t\\t\\t</th>\\n\\t\\t\\t\\t<th (click)=\\\"sort('CardID',4)\\\" class=\\\"{{class[1][4]}}\\\">\\n\\t\\t\\t\\t\\tCardID<span class=\\\"fa fa-sort{{class[0][4]}} pull-right\\\"></span>\\n\\t\\t\\t\\t</th>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t</tr>\\n\\t\\t</thead>\\n\\t\\t<tbody>\\n\\t\\t\\t<tr *ngFor = \\\"let member of groupMember | orderBy: key : reverse | filter:filter | paginate: { itemsPerPage: row, currentPage: p, id: 'first' };\\\">\\t\\t\\t\\t\\n\\t\\t\\t\\t<td>{{member.id}}</td>\\n\\t\\t\\t\\t<td>{{member.username}}</td>\\n\\t\\t\\t\\t<td>{{member.Lname}}</td>\\n\\t\\t\\t\\t<td>{{member.Fname}}</td>\\n\\t\\t\\t\\t<td>{{member.cardID}}</td>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t</tr>\\n\\t\\t</tbody>\\n\\t</table>\\n\\t<p>Showing 1 to {{row}} of {{totalUsr}}</p>\\n\\t<div class=\\\"pull-right\\\">\\n\\t\\t<pagination-controls (pageChange)=\\\"p = $event\\\" id = \\\"first\\\"></pagination-controls>\\n\\t</div><br><br>\\n\\t<button type=\\\"button\\\" class=\\\"btn btn-back btn-sm\\\" (click) = \\\"back()\\\">Back</button>\\t\\t\\n </form>\\n\\n\\n\\n\\n\"","import { Component, OnInit, DoCheck } from '@angular/core'\nimport { Location } from '@angular/common';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { MembersService } from './member.service';\nimport { ErrorHandlerService } from '../../../error-handler.service';\n\n\n@Component\n({\n\tselector: 'member-cmp',\n\ttemplateUrl: 'member.component.html'\n})\n\nexport class MemberComponent \n{\n\tgroupMember: object[]\n\n\tclass = [[\"\",\"\",\"\",\"\",\"\"],[\"\",\"\",\"\",\"\",\"\"]]\n\tkey: string = 'id'\n\treverse: boolean = false\n\trow = 10\n\ttotalUsr: number\n\ttempID\n\tp: number = 1\n\tfilter: string\n\n\t\n\n\tconstructor( private route: ActivatedRoute, private membersService: MembersService,\n      \t\t\t\t private errorHandlerService: ErrorHandlerService, private router: Router){}\n\n\tngOnInit()\n\t{\t\t\n\t\tvar id = this.route.snapshot.paramMap.get('id')\t\t\t\t\n\t\tthis.membersService.getAllMem(id)\n\t\t.subscribe( data =>\n\t\t{\n\t\t\tthis.groupMember = data['members']\n\t\t\tthis.totalUsr = this.groupMember.length\n\t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t})\n\t}\n\n\tback()\n\t{\t\t\n\t\tthis.router.navigate(['home/groups'])\n\t}\n\n\n\tsort(key, id: number)\n\t{\t\t\t\t\n\t\tthis.key = key;\n\t\tthis.reverse = !this.reverse;\n\t\tif(this.class[0][id] == \"\" || this.class[0][id] == \"-asc\")\n\t\t{\n\t\t\tthis.class[0][id] = \"-desc\"\n\t\t}\n\t\telse if(this.class[0][id] == \"-desc\")\n\t\t{\n\t\t\tthis.class[0][id] = \"-asc\"\n\t\t}\t\t\n\t\tthis.class[1][this.tempID] = \"\"\n\t\tthis.class[1][id] = \"active\"\n\t\tthis.tempID = id\t\t\n\t}\t\n\n\n\tmanageRow(length: number)\n\t{\t\t\n\t\tthis.row = length\n\t\tif(length == 200)\n\t\t{\n\t\t\tthis.row = this.totalUsr\n\t\t}\n\t\tthis.selecTag()\t\n\t}\n\n\tselecTag()\n\t{\n\t\tvar class_name = document.getElementById(\"selectList\").className\n\t\tif(class_name == \"dropdown-menu\")\n\t\t{\n\t\t\tdocument.getElementById(\"selectList\").className += \" show\"\n\t\t}\n\t\tif(class_name == \"dropdown-menu show\")\n\t\t{\n\t\t\tdocument.getElementById(\"selectList\").className = \"dropdown-menu\"\n\t\t}\n\n\t}\t\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router }    from '@angular/router';\nimport { environment } from './../../../../environments/environment'; \n\n\n@Injectable()\nexport class MembersService\n{\n\n\tconstructor ( private http: HttpClient, private cookieService: CookieService, private router: Router ){}\n\tprivate baseUrl = environment.backend_uri;\n\n\tgetAllMem(id: string)\n\t{\n\t\treturn this.http.get(`${this.baseUrl}/groupMember/${id}`,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\t\t\t\n\t}\t\n\t\n\n\n\tprivate Headers()\n\t{\n\t\tif(this.cookieService.get('token'))\n\t\t{\n\t\t\treturn new HttpHeaders().set('x-access-token', this.cookieService.get('token'))\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconsole.log(\"token is missing\")\n\t\t\tthis.cookieService.delete(\"token\")\n\t\t\tthis.cookieService.delete('username');\n\t\t\tthis.cookieService.delete('userType');\n\t\t\tthis.router.navigate(['/login']);\n\t\t}\n\t}\t\n\n}\n","module.exports = \"<div class=\\\"col2-sm-10\\\"><div class=\\\"col-sm-6\\\"></div><p style=\\\"color: red\\\">{{message}}</p></div>\\n<form #input=\\\"ngForm\\\">\\n\\n\\t<div class=\\\"form-horizontal2\\\">\\n        <div class=\\\"form-group2 col2-sm-12\\\">\\n\\t\\t\\t<div class=\\\"col2-sm-6\\\">\\n\\t\\t\\t\\t<div class=\\\"input-group-btn\\\">\\n               <button tabindex=\\\"-1\\\" class=\\\"btn btn-white btn2-sm\\\" type=\\\"button\\\" (click)=\\\"selecTag()\\\" >&emsp;{{row}}&emsp;</button>\\n               <button data-toggle=\\\"dropdown\\\" class=\\\"btn btn-primary dropdown-toggle btn2-sm\\\" type=\\\"button\\\" (click)=\\\"selecTag()\\\"><span class=\\\"caret\\\"></span></button>\\n               <ul id=\\\"selectList\\\" class=\\\"dropdown-menu\\\">\\n               \\t   <li><a (click)=manageRow(10)>10</a></li>\\n                   <li><a (click)=manageRow(50)>50</a></li>\\n                   <li><a (click)=manageRow(100)>100</a></li>\\n                   <li><a (click)=manageRow(200)>Show all</a></li>                 \\n               </ul>\\n           </div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"col2-sm-6\\\">\\n\\t\\t\\t\\t<div class=\\\"col2-sm-7\\\"></div>\\n\\t\\t\\t\\t<div class=\\\"col2-sm-5\\\">\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" placeholder=\\\"Search for something...\\\" class=\\\"form-control pull-right input-sm\\\" name=\\\"search\\\" [(ngModel)]=\\\"filter\\\"> \\t\\t\\t\\t\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n        </div>                   \\n    </div>\\n    <p>Showing 1 to {{row}} of {{totalUsr}}</p>\\n \\t<table class=\\\"table table-striped table-bordered table-hover\\\">\\n\\t\\t<thead>\\n\\t\\t\\t<tr>\\t\\t\\t\\t\\n\\t\\t\\t\\t<th style=\\\"width: 50px\\\" (click)=\\\"sort('id',0)\\\" class=\\\"{{class[1][0]}}\\\">\\n\\t\\t\\t\\t\\tID<span class=\\\"fa fa-sort{{class[0][0]}} pull-right\\\"></span>\\n\\t\\t\\t\\t</th>\\n\\t\\t\\t\\t<th (click)=\\\"sort('name',1)\\\" class=\\\"{{class[1][1]}}\\\">\\n\\t\\t\\t\\t\\tName<span class=\\\"fa fa-sort{{class[0][1]}} pull-right\\\"></span>\\n\\t\\t\\t\\t</th>\\n\\t\\t\\t\\t<th (click)=\\\"sort('description',2)\\\" class=\\\"{{class[1][2]}}\\\">\\n\\t\\t\\t\\t\\tDescription<span class=\\\"fa fa-sort{{class[0][2]}} pull-right\\\"></span>\\n\\t\\t\\t\\t</th>\\t\\t\\t\\t\\n\\t\\t\\t</tr>\\n\\t\\t</thead>\\n\\t\\t<tbody>\\n\\t\\t\\t<tr *ngFor=\\\"let permission of permissions | orderBy: key : reverse | filter:filter | paginate: { itemsPerPage: row, currentPage: p };\\\">\\t\\t\\t\\t\\n\\t\\t\\t\\t<td class=\\\"text-center\\\" style=\\\"padding: 6px 0\\\">{{permission.id}}</td>\\n\\t\\t\\t\\t<td>{{permission.name}}</td>\\n\\t\\t\\t\\t<td>{{permission.description}}</td>\\t\\t\\t\\t\\n\\t\\t\\t</tr>\\n\\t\\t</tbody>\\n\\t</table>\\n\\t<p>Showing 1 to {{row}} of {{totalUsr}}</p>\\n\\t<div class=\\\"pull-right\\\">\\n\\t\\t<pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n\\t</div><br><br>\\t\\n </form>\\n\\n\\n\"","import { Component, OnInit, DoCheck} from '@angular/core'\nimport { FormBuilder, FormGroup, Validators } \tfrom '@angular/forms';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { PermissionService } from './permission.service';\nimport { ErrorHandlerService } from '../../../error-handler.service';\n\n@Component\n({\n\tselector: 'permission-cmp',\n\ttemplateUrl: 'permission.component.html'\n})\n\nexport class PermissionComponent\n{\n\tpermissions: object[]\n\tmessage: string\n\tmodalForm: FormGroup\n\t\n\tadd: string\n\tupdate: string\n\tmodalAnimation: string\n\n\tclass = [[\"\",\"\",\"\"],[\"\",\"\",\"\"]]\n\tkey: string = 'id'\n\treverse: boolean = false\n\trow = 10\n\ttotalUsr: number\n\ttempID\n\tfilter: string\n\n\tconstructor( private permissionService: PermissionService, \n  \t\t         private errorHandlerService: ErrorHandlerService){}\n\t\n\n\tngOnInit()\n\t{\n\t\tthis.permissionService\n\t\t.getAll()\n\t\t.subscribe(data => \n\t\t{\n\t\t\tthis.permissions = data['permissions']\n\t\t\tthis.totalUsr = this.permissions.length\n\t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t});\n\t}\n\t\n\n\tsort(key, id: number)\n\t{\t\t\t\t\n\t\tthis.key = key;\n\t\tthis.reverse = !this.reverse;\n\t\tif(this.class[0][id] == \"\" || this.class[0][id] == \"-asc\")\n\t\t{\n\t\t\tthis.class[0][id] = \"-desc\"\n\t\t}\n\t\telse if(this.class[0][id] == \"-desc\")\n\t\t{\n\t\t\tthis.class[0][id] = \"-asc\"\n\t\t}\t\t\n\t\tthis.class[1][this.tempID] = \"\"\n\t\tthis.class[1][id] = \"active\"\n\t\tthis.tempID = id\t\t\n\t}\n\n\tmanageRow(length: number)\n\t{\t\t\n\t\tthis.row = length\n\t\tif(length == 200)\n\t\t{\n\t\t\tthis.row = this.totalUsr\n\t\t}\n\t\tthis.selecTag()\t\n\t}\n\tp: number = 1;\n\n\tselecTag()\n\t{\t\t\n\t\tvar class_name = document.getElementById(\"selectList\").className\t\t\n\t\tif(class_name == \"dropdown-menu\")\n\t\t{\n\t\t\tdocument.getElementById(\"selectList\").className += \" show\"\n\t\t}\n\t\tif(class_name == \"dropdown-menu show\")\n\t\t{\n\t\t\tdocument.getElementById(\"selectList\").className = \"dropdown-menu\"\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router }    from '@angular/router';\nimport { environment } from './../../../../environments/environment'; \n\n\n@Injectable()\nexport class PermissionService\n{\n\n\trouteID: string\n\n\tconstructor ( private http: HttpClient, private cookieService: CookieService, private router: Router ){}\n\tprivate baseUrl = environment.backend_uri;\n\n\tgetAll()\n\t{\n\t\treturn this.http.get(`${this.baseUrl}/permissions`,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\n\t}\t\n\n\tprivate Headers()\n\t{\n\t\tif(this.cookieService.get('token'))\n\t\t{\n\t\t\treturn new HttpHeaders().set('x-access-token', this.cookieService.get('token'))\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconsole.log(\"token is missing\")\n\t\t\tthis.cookieService.delete(\"token\")\n\t\t\tthis.cookieService.delete('username');\n\t\t\tthis.cookieService.delete('userType');\n\t\t\tthis.router.navigate(['/login']);\n\t\t}\n\t}\t\n\n}\n\n\n","module.exports = \"<!-- \\n<div class=\\\"col2-sm-10\\\"><div class=\\\"col-sm-6\\\"></div><p style=\\\"color: red\\\">{{message}}</p></div>\\n<div class=\\\"wrapper wrapper-content animated fadeInRight\\\">\\n\\t<div class=\\\"row\\\">\\n\\n\\t\\t<div *ngFor = \\\"let room of rooms\\\">\\n\\t\\t\\t<div class=\\\"col-lg-4\\\">\\n\\t\\t\\t    <div class=\\\"grow\\\">\\n\\t\\t\\t        <div class=\\\"contact-box\\\">                       \\n\\t\\t\\t            <div class=\\\"col-lg-4\\\">\\n\\t\\t\\t                <div class=\\\"text-center\\\">\\n\\t\\t\\t                    <img alt=\\\"image\\\" class=\\\"img-circle m-t-xs img-responsive\\\" src=\\\"assets/img/letters/{{room.name[0]}}.png\\\">\\n\\t\\t\\t                    <div class=\\\"m-t-xs font-bold\\\">Room: {{room.id}}</div>\\n\\t\\t\\t                </div>\\t\\t\\t               \\n\\t\\t\\t            </div>\\n\\t\\t\\t            <a (click)=GroupAccess(room.id)>\\n\\t\\t\\t                <div class=\\\"col-sm-8\\\">                    \\n\\t\\t\\t                    <h3><strong>{{room.name}}</strong></h3>                    \\n\\t\\t\\t                    <strong>Description</strong><br>\\n\\t\\t\\t                     <h5>{{room.description}}</h5><br>\\n\\t\\t\\t                    <strong>Number of groups:</strong>&nbsp;{{room.groups}}<br>\\t\\t\\t                                    \\n\\t\\t\\t                </div>\\n\\t\\t\\t                <div class=\\\"clearfix\\\"></div>\\n\\t\\t\\t            </a>\\n\\t\\t\\t        </div>\\n\\t\\t\\t    </div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n    </div>\\n</div>            \\n -->\\n\\n <div class=\\\"form-horizontal2\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"form-group2 col2-sm-12\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col2-sm-6\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-group-btn\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<button tabindex=\\\"-1\\\" class=\\\"btn btn-white btn2-sm\\\" type=\\\"button\\\" (click)=\\\"selecTag()\\\">&emsp;{{row}}&emsp;</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t<button data-toggle=\\\"dropdown\\\" class=\\\"btn btn-primary dropdown-toggle btn2-sm\\\" type=\\\"button\\\" (click)=\\\"selecTag()\\\"><span class=\\\"caret\\\"></span></button>\\n\\t\\t\\t\\t\\t\\t\\t\\t<ul id=\\\"selectList\\\" class=\\\"dropdown-menu\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<li><a (click)=manageRow(10)>10</a></li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<li><a (click)=manageRow(50)>50</a></li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<li><a (click)=manageRow(100)>100</a></li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<li><a (click)=manageRow(200)>Show all</a></li>                 \\n\\t\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col2-sm-6\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col2-sm-7\\\"></div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col2-sm-5\\\">\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" placeholder=\\\"Search for something...\\\" class=\\\"form-control pull-right input-sm\\\" name=\\\"search\\\" [(ngModel)]=\\\"filter\\\"> \\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>                   \\n\\t\\t\\t\\t</div>\\t\\t\\t\\t\\n\\t\\t\\t\\t<table class=\\\"table table-striped table-bordered table-hover\\\">\\n\\t\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t\\t\\t<tr>\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<th style=\\\"width: 50px\\\" (click)=\\\"sort('id',0)\\\" class=\\\"{{class[1][0]}}\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\tID<span class=\\\"fa fa-sort{{class[0][0]}} pull-right\\\"></span>\\n\\t\\t\\t\\t\\t\\t\\t</th>\\n\\t\\t\\t\\t\\t\\t\\t<th (click)=\\\"sort('name',1)\\\" class=\\\"{{class[1][1]}}\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\tName<span class=\\\"fa fa-sort{{class[0][1]}} pull-right\\\"></span>\\n\\t\\t\\t\\t\\t\\t\\t</th>\\n\\t\\t\\t\\t\\t\\t\\t<th (click)=\\\"sort('description',2)\\\" class=\\\"{{class[1][2]}}\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\tDescription<span class=\\\"fa fa-sort{{class[0][2]}} pull-right\\\"></span>\\n\\t\\t\\t\\t\\t\\t\\t</th>\\n\\t\\t\\t\\t\\t\\t\\t<th (click)=\\\"sort('description',3)\\\" class=\\\"{{class[1][3]}}\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\tGroups<span class=\\\"fa fa-sort{{class[0][3]}} pull-right\\\"></span>\\n\\t\\t\\t\\t\\t\\t\\t</th>\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t</thead>\\n\\t\\t\\t\\t\\t<tbody>\\n\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let room of rooms | orderBy: key : reverse | filter:filter | paginate: { itemsPerPage: row, currentPage: p };\\\">\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\" style=\\\"padding: 7px 0\\\" (click)=GroupAccess(room.id)>{{room.id}}</td>\\n\\t\\t\\t\\t\\t\\t\\t<td (click)=GroupAccess(room.id)>{{room.name}}</td>\\n\\t\\t\\t\\t\\t\\t\\t<td (click)=GroupAccess(room.id)>{{room.description}}</td>\\n\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\" style=\\\"width: 80px\\\" (click)=GroupAccess(room.id)>{{room.groups}}</td>\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t</tbody>\\n\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t<p>Showing 1 to {{row}} of {{totalUsr}}</p>\\n\\t\\t\\t\\t<div class=\\\"pull-right\\\">\\n\\t\\t\\t\\t\\t<pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n\\t\\t\\t\\t</div><br><br>\\n \\n\\n\"","import { Component, OnInit, DoCheck } from '@angular/core'\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { RoomService } from './room.service';\nimport { ErrorHandlerService } from '../../../error-handler.service';\n\n@Component\n({\n\tselector: 'room-cmp',\n\ttemplateUrl: 'room.component.html'\n})\n\nexport class RoomComponent\n{\n\n\trooms: object[]\n\tmessage: string\n\n\tmodalAnimation: string\n\n\tclass = [[\"\",\"\",\"\",\"\"],[\"\",\"\",\"\",\"\"]]\n\tkey: string = 'id'\n\treverse: boolean = false\n\ttotalUsr: number\n\tfilter: string\n\trow = 9\n\tp = 1\n\ttempID\n\n\tconstructor( private roomService: RoomService,private router: Router, \n  \t\t         private errorHandlerService: ErrorHandlerService){}\n\n\n\tngOnInit()\n\t{\n\t\tthis.roomService.getRooms()\n\t\t.subscribe( data =>\n\t\t{\t\t\t\n\t\t\tthis.rooms  = data['rooms']\t\n\t\t\tthis.totalUsr = this.rooms.length\t\t\n\t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t})\n\t}\n\n\t\n\n\tGroupAccess(id: string)\n\t{\n\t\tthis.router.navigate(['/home/roomAccess',id])\n\t}\n\n\tmanageRow(length: number)\n\t{\t\t\n\t\tthis.row = length\n\t\tif(length == 200)\n\t\t{\n\t\t\tthis.row = this.totalUsr\n\t\t}\t\t\n\t\tthis.selecTag()\n\t}\n\n\tsort(key, id: number)\n\t{\t\t\t\t\n\t\tthis.key = key;\n\t\tthis.reverse = !this.reverse;\n\t\tif(this.class[0][id] == \"\" || this.class[0][id] == \"-asc\")\n\t\t{\n\t\t\tthis.class[0][id] = \"-desc\"\n\t\t}\n\t\telse if(this.class[0][id] == \"-desc\")\n\t\t{\n\t\t\tthis.class[0][id] = \"-asc\"\n\t\t}\t\t\n\t\tthis.class[1][this.tempID] = \"\"\n\t\tthis.class[1][id] = \"active\"\n\t\tthis.tempID = id\t\t\n\t}\n\n\tselecTag()\n\t{\n\t\tvar class_name = document.getElementById(\"selectList\").className\n\t\tif(class_name == \"dropdown-menu\")\n\t\t{\n\t\t\tdocument.getElementById(\"selectList\").className += \" show\"\n\t\t}\n\t\tif(class_name == \"dropdown-menu show\")\n\t\t{\n\t\t\tdocument.getElementById(\"selectList\").className = \"dropdown-menu\"\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router }    from '@angular/router';\nimport { environment } from './../../../../environments/environment'; \n\n\n\n@Injectable()\nexport class RoomService\n{\n  \tprivate baseUrl = environment.backend_uri;\n\troomID: string\n\n\tconstructor ( private http: HttpClient, private cookieService: CookieService, private router: Router ){}\n\n\tgetRooms()\n\t{\n\t\treturn this.http.get(`${this.baseUrl}/rooms`,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\n\t}\t\n\n\tprivate Headers()\n\t{\n\t\tif(this.cookieService.get('token'))\n\t\t{\n\t\t\treturn new HttpHeaders().set('x-access-token', this.cookieService.get('token'))\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconsole.log(\"token is missing\")\n\t\t\tthis.cookieService.delete(\"token\")\n\t\t\tthis.cookieService.delete('username');\n\t\t\tthis.cookieService.delete('userType');\n\t\t\tthis.router.navigate(['/login']);\n\t\t}\n\t}\t\n\n}\n\n","module.exports = \"<form #input=\\\"ngForm\\\">\\n \\t<table class=\\\"table table-striped table-bordered table-hover\\\">\\n\\t\\t<thead>\\n\\t\\t\\t<tr>\\t\\t\\t\\t\\n\\t\\t\\t\\t<th style=\\\"width: 40px\\\">ID</th>\\n\\t\\t\\t\\t<th>Group Name</th>\\n\\t\\t\\t\\t<th >Permission Name</th>\\n\\t\\t\\t\\t<th style=\\\"width: 40px\\\">Users</th>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t</tr>\\n\\t\\t</thead>\\n\\t\\t<tbody>\\n\\t\\t\\t<tr *ngFor = \\\"let access of groupAccess\\\">\\t\\t\\t\\t\\n\\t\\t\\t\\t<td>{{access.id}}</td>\\n\\t\\t\\t\\t<td>{{access.groupName}}</td>\\n\\t\\t\\t\\t<td>{{access.permissionName}}</td>\\n\\t\\t\\t\\t<td align=\\\"center\\\">{{access.users}}</td>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t</tr>\\n\\t\\t</tbody>\\n\\t</table>\\n\\t<button type=\\\"button\\\" class=\\\"btn btn-back btn-sm\\\" (click) = \\\"back()\\\">Back</button>\\t\\n </form>\\n\\n\"","import { Component, OnInit} from '@angular/core'\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { RoomAccessService } from './room-access.service';\nimport { ErrorHandlerService } from '../../../error-handler.service';\n\n\n@Component\n({\n\tselector: 'room-access-cmp',\n\ttemplateUrl: 'room-access.component.html'\n})\n\nexport class RoomAccessComponent implements OnInit\n{\n\t\n\tgroupAccess: object[]\n\tunregistered_group: object[]\n\tpermissions: object[]\n\tCB_Status = {}\t\n\taddAccess = [[],[]]\n\n\tconstructor(private roomAccessService: RoomAccessService, private errorHandlerService: ErrorHandlerService,\n              private route: ActivatedRoute, private router: Router){}\n\n\tngOnInit()\n\t{\n\t\tvar id = this.route.snapshot.paramMap.get('id')\n\t\tthis.roomAccessService.getGroupAccess(id)\n\t\t.subscribe( data =>\n\t\t{\n\t\t\tthis.groupAccess = data['group']\t\t\t\n\t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t})\n\t}\n\n\tback()\n\t{\t\t\n\t\tthis.router.navigate(['home/rooms'])\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router }    from '@angular/router';\nimport { environment } from './../../../../environments/environment'\n\n\n@Injectable()\nexport class RoomAccessService\n{\n\n\tconstructor ( private http: HttpClient, private cookieService: CookieService, private router: Router ){}\n\tprivate baseUrl = environment.backend_uri\n\n\tgetGroupAccess(id: string)\n\t{\n\t\treturn this.http.get(`${this.baseUrl}/groupAccess/${id}`,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\t\t\t\t\t\n\t}\n\n\n\tprivate Headers()\n\t{\n\t\tif(this.cookieService.get('token'))\n\t\t{\n\t\t\treturn new HttpHeaders().set('x-access-token', this.cookieService.get('token'))\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconsole.log(\"token is missing\")\n\t\t\tthis.cookieService.delete(\"token\")\n\t\t\tthis.cookieService.delete('username');\n\t\t\tthis.cookieService.delete('userType');\n\t\t\tthis.router.navigate(['/login']);\n\t\t}\n\t}\t\n\n\t\n}\n\n","module.exports = \"<div class=\\\"wrapper wrapper-content animated fadeInRight\\\">\\n\\t<div class=\\\"row\\\">\\n\\t\\t<ng-container *ngFor=\\\"let room of room_status  | filter:filter | paginate: { itemsPerPage: row, currentPage: p };\\\">\\n\\t\\t\\t<div class=\\\"room-status col-lg-3\\\">\\n\\t\\t\\t\\t<div class=\\\"grow\\\">\\n          <div class=\\\"ibox-title\\\">             \\n              <h5>ID-{{room.room_id}} - {{room.room_name}}</h5>\\n          </div>\\n\\t\\t\\t\\t\\t<div class=\\\"contact-box\\\" style=\\\"height: 220px\\\">\\n\\t\\t\\t\\t\\t\\t<!-- <div class=\\\"col-md-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"text-center\\\">\\t\\t\\t                    \\n\\t\\t\\t\\t\\t\\t\\t\\t<img alt=\\\"image\\\" class=\\\"img-circle m-t-xs img-responsive\\\" src=\\\"assets/img/letters/{{room.room_name[0]}}.png\\\">                          \\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"m-t-xs font-bold\\\">Room: {{room.room_id}}</div><br>\\n\\t\\t\\t\\t\\t\\t\\t\\t<ng-container *ngIf = \\\"room.add_device\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-primary btn-xs\\\" data-toggle=\\\"modal\\\" href=\\\"#modal-add-devies\\\" (click) = \\\"getRoomDevice(room.room_id)\\\">Add Device</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div> -->\\n\\t\\t\\t\\t\\t\\t<a>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"\\\">\\t\\t\\t\\t\\t\\t\\t\\t                  \\t\\t\\t                 \\n\\t\\t\\t\\t\\t\\t\\t\\t<strong>Devices:</strong><br><br>\\n\\t\\t\\t\\t\\t\\t\\t\\t<table>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<tbody class=\\\"room-status\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let device of room.devices\\\" >\\n                      <ng-container *ngIf = \\\"device.remote_design != 'Temperature Slider'\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td style=\\\"width: 150px ; padding-right: 5px; padding-left: 5px\\\">{{device.device_name}}</td>\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td style=\\\"width: 40px; padding-right: 20px; padding-left: 5px\\\">                         \\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"switch\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"onoffswitch{{device.class_name}}\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-container *ngIf = \\\"device.device_status == 'True' || device.device_status == 'true'\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\"  class=\\\"onoffswitch-checkbox\\\" id=\\\"{{device.room_status_id}}\\\" checked (change)=\\\"valuechange($event)\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-container>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-container *ngIf = \\\"device.device_status == 'False' || device.device_status == 'false'\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\"  class=\\\"onoffswitch-checkbox\\\" id=\\\"{{device.room_status_id}}\\\" (change)=\\\"valuechange($event)\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-container>\\t\\t\\t\\t\\t                                    \\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"onoffswitch-label\\\" for=\\\"{{device.room_status_id}}\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"onoffswitch-inner{{device.class_name}}\\\"></span>\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"onoffswitch-switch{{device.class_name}}\\\"></span>\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>                        \\n                      </ng-container>                     \\n                      <ng-container *ngIf = \\\"device.remote_design == 'Temperature Slider'\\\">\\n                        <td style=\\\"width: 150px ; padding-right: 5px; padding-left: 5px\\\">{{device.device_name}}</td>\\n                        <td style=\\\"width: 1000px\\\"><input type=\\\"text\\\" id=\\\"{{device.room_status_id}}\\\"></td>\\n                        <td style=\\\"width: 100px\\\"></td>                        \\n                      </ng-container>                    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</tbody>\\n\\t\\t\\t\\t\\t\\t\\t\\t</table>                \\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</a>            \\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\t\\t\\t\\t\\n\\t\\t</ng-container>\\n\\t</div>\\n  <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n</div>\\n\\n  <div class=\\\"footer fixed\\\">\\n    <div class=\\\"pull-right\\\">\\n      <div class=\\\"form-group form-horizontal\\\">\\n        <label class=\\\"col-lg-2 control-label\\\">Search:</label>\\n        <div class=\\\"col-lg-10\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"search\\\" [(ngModel)]=\\\"filter\\\" style=\\\"height: 30px\\\">\\n        </div>\\n      </div>   \\n    </div>    \\n  </div>\"","import { Component, OnInit} from '@angular/core'\nimport * as $ from 'jquery'\ndeclare var $: any;\n\nimport { ErrorHandlerService } from '../../../error-handler.service';\nimport { RoomStatusService } from './room-status.service';\n\nvar temp_change: boolean = false\nvar room_status_id: string\nvar temperature: number\n\n@Component\n({\n\tselector: 'room-status-cmp',\n\ttemplateUrl: 'room-status.component.html'\n})\n\nexport class RoomStatusComponent implements OnInit\n{\n\troom_status: object[]\n\tdevices: object[]\n\n\tfilter: string\n\trow = 9\n\tp = 1\n\n\tconstructor( private roomStatusService:RoomStatusService){}\n\n\tngOnInit()\n\t{\t\t\n\t\tthis.roomStatusService.GetRoomStatus()\n\t\t.subscribe( data =>\n\t\t{\n\t\t\tthis.room_status = data['room_status']\n\t\t\tthis.room_status.forEach( room =>\n\t\t\t{\t\t\t\t\t\t\n\t\t\t\troom['devices'].forEach( device =>\n\t\t\t\t{\t\t\t\t\t\n\t\t\t\t\tif(device['remote_design'] == \"Temperature Slider\")\n\t\t\t\t\t{\n\t\t\t\t\t\t$(document).ready(function(){\n\t\t\t\t\t\t\t$(\"#\"+device['room_status_id']).ionRangeSlider({\t\t\t\t\t\n\t\t\t\t\t            min: device['min'],\n\t\t\t\t\t            max: device['max'],\n\t\t\t\t\t            from: device['device_status'],\n\t\t\t\t\t            postfix: device['postfix'],\n\t\t\t\t\t            prettify: device['prettify'],\n\t\t\t\t\t            hasGrid: device['hasGrid'],\n\t\t\t\t\t            disable: device['disable'],\t\t\t\t\t           \n\t\t\t\t\t            onFinish: function(data)\n\t\t\t\t\t            {\t\t\t\t\t\t\t\t\t            \t     \n\t\t\t\t\t            \tvar room_status_id1 = data['input'][0]['id']\t\t\t\t\t            \t\n\t\t\t\t\t            \tvar temperature1 = data['fromNumber']\n\t\t\t\t\t            \tconsole.log(temperature1)\n\t\t\t\t\t            \ttemperature = temperature1\n\t\t\t\t\t            \troom_status_id = room_status_id1\n\t\t\t\t\t            \ttemp_change = true\t\t\t\t\t\t\t\t       \t\n\t\t\t\t\t            }\n\t\t\t\t\t        });\n\t\t\t\t\t\t})\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t})\t\t\t\t \n\t\t\t})\n\t\t})\n\t}\n\n\tvaluechange(value: any) // CONTROLL DEVICE\n\t{\t\t\n\t\tvar room_status_id = value['target']['id']\n\t\tconsole.log(value)\t\t\n\t\tvar data = {value: value['target']['checked']}\n\t\tthis.roomStatusService.ControlDevice(data,room_status_id)\n\t\t.subscribe( data =>\n\t\t{\n\t\t\tthis.ngOnInit()\n\t\t})\n\t}\n\n\tngDoCheck()\n\t{\n\t\tif(temp_change == true)\n\t\t{\n\t\t\tvar data = {value: temperature}\n\t\t\tconsole.log(data)\n\t\t\tthis.roomStatusService.ControlDevice(data,room_status_id)\n\t\t\t.subscribe( data =>\n\t\t\t{\n\t\t\t\tthis.ngOnInit()\n\t\t\t})\n\t\t\ttemp_change = false\n\t\t}\n\t}\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router }    from '@angular/router';\nimport { environment } from './../../../../environments/environment'\n\n@Injectable()\nexport class RoomStatusService\n{\n\n\tconstructor ( private http: HttpClient, private cookieService: CookieService, private router: Router ){}\n\tprivate baseUrl = environment.backend_uri\n\n\tGetRoomStatus()\n\t{\n\t\treturn this.http.get(`${this.baseUrl}/RoomStatus`,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\t\t\t\t\t\n\t}\n\n\tControlDevice(data: object, room_status_id: string)\n\t{\n\t\treturn this.http.put(`${this.baseUrl}/roomStatusByID/${room_status_id}`,data,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\n\t}\n\n\tprivate Headers()\n\t{\n\t\tif(this.cookieService.get('token'))\n\t\t{\n\t\t\treturn new HttpHeaders().set('x-access-token', this.cookieService.get('token'))\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconsole.log(\"token is missing\")\n\t\t\tthis.cookieService.delete(\"token\")\n\t\t\tthis.cookieService.delete('username');\n\t\t\tthis.cookieService.delete('userType');\n\t\t\tthis.router.navigate(['/login']);\n\t\t}\n\t}\n}","module.exports = \"<div class=\\\"col2-sm-10\\\"><div class=\\\"col-sm-6\\\"></div><p style=\\\"color: red\\\">{{message}}</p></div>\\n<form #input=\\\"ngForm\\\">\\n\\n    <div class=\\\"form-horizontal2\\\">\\n        <div class=\\\"form-group2 col2-sm-12\\\">\\n\\t\\t\\t<div class=\\\"col2-sm-6\\\">\\n\\t\\t\\t\\t<div class=\\\"input-group-btn\\\">\\n\\t               \\t<button tabindex=\\\"-1\\\" class=\\\"btn btn-white btn2-sm\\\" type=\\\"button\\\" (click)=\\\"selecTag()\\\">&emsp;{{row}}&emsp;</button>\\n\\t               \\t<button data-toggle=\\\"dropdown\\\" class=\\\"btn btn-primary dropdown-toggle btn2-sm\\\" type=\\\"button\\\" (click)=\\\"selecTag()\\\"><span class=\\\"caret\\\"></span></button>\\n\\t\\t               <ul  id=\\\"selectList\\\" class=\\\"dropdown-menu\\\">\\n\\t\\t               \\t   <li><a (click)=manageRow(10)>10</a></li>\\n\\t\\t                   <li><a (click)=manageRow(50)>50</a></li>\\n\\t\\t                   <li><a (click)=manageRow(100)>100</a></li>\\n\\t\\t                   <li><a (click)=manageRow(totalUsr)>Show all</a></li>                 \\n\\t\\t               </ul>\\n           \\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"col2-sm-6\\\">\\n\\t\\t\\t\\t<div class=\\\"col2-sm-7\\\"></div>\\n\\t\\t\\t\\t<div class=\\\"col2-sm-5\\\">\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" placeholder=\\\"Search for something...\\\" class=\\\"form-control pull-right input-sm\\\" name=\\\"search\\\" [(ngModel)]=\\\"filter\\\">\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n        </div>                   \\n    </div>    \\n \\t<table class=\\\"table table-striped table-bordered table-hover \\\">\\n\\t\\t<thead>\\n\\t\\t\\t<tr>\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t<th style=\\\"width: 50px\\\" (click)=\\\"sort('id',0)\\\" class=\\\"{{class[1][0]}}\\\">\\n\\t\\t\\t\\t\\tID<span class=\\\"fa fa-sort{{class[0][0]}} pull-right\\\"></span>\\n\\t\\t\\t\\t</th>\\t\\t\\t\\t\\n\\t\\t\\t\\t<th (click)=\\\"sort('Username',1)\\\" class=\\\"{{class[1][1]}}\\\">\\n\\t\\t\\t\\t\\tUsername<span class=\\\"fa fa-sort{{class[0][1]}} pull-right\\\"></span>\\n\\t\\t\\t\\t</th>\\n\\t\\t\\t\\t<th (click)=\\\"sort('Lname',2)\\\" class=\\\"{{class[1][2]}}\\\">\\n\\t\\t\\t\\t\\tLastname<span class=\\\"fa fa-sort{{class[0][2]}} pull-right\\\"></span>\\n\\t\\t\\t\\t</th>\\n\\t\\t\\t\\t<th (click)=\\\"sort('Fname',3)\\\" class=\\\"{{class[1][3]}}\\\">\\n\\t\\t\\t\\t\\tFirtname<span class=\\\"fa fa-sort{{class[0][3]}} pull-right\\\"></span>\\n\\t\\t\\t\\t</th>\\n\\t\\t\\t\\t<th (click)=\\\"sort('CardID',4)\\\" class=\\\"{{class[1][4]}}\\\">\\n\\t\\t\\t\\t\\tCardID<span class=\\\"fa fa-sort{{class[0][4]}} pull-right\\\"></span>\\n\\t\\t\\t\\t</th>\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t</tr>\\n\\t\\t</thead>\\n\\t\\t<tbody>\\n\\t\\t\\t<tr *ngFor=\\\"let user of users | orderBy: key : reverse | filter:filter | paginate: { itemsPerPage: row, currentPage: p };\\\">\\t\\t\\t\\t\\n\\t\\t\\t\\t<td class=\\\"text-center\\\" style=\\\"padding: 6px 0\\\">{{user.id}}</td>\\n\\t\\t\\t\\t<td>{{user.username}}</td>\\n\\t\\t\\t\\t<td>{{user.Lname}}</td>\\n\\t\\t\\t\\t<td>{{user.Fname}}</td>\\n\\t\\t\\t\\t<td>{{user.cardID}}</td>\\t\\t\\t\\n        <td hidden=\\\"hidden\\\">                                                       \\n          <button type=\\\"submit\\\" class=\\\"btn btn-danger btn-xs\\\">\\n            <span class=\\\"glyphicon glyphicon-trash\\\"></span>\\n          </button>\\n        </td>\\t\\t\\t\\t\\t\\n\\t\\t\\t</tr>\\n\\t\\t</tbody>\\n\\t</table>\\n\\t<p>Showing 1 to {{row}} of {{totalUsr}}</p>\\n\\t<div class=\\\"pull-right\\\">\\n\\t\\t<pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n\\t</div><br><br>\\n\\n </form>\\n\\n\\n\"","import { Component, OnInit, DoCheck} from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { FormBuilder, FormGroup, Validators } \tfrom '@angular/forms';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router }    from '@angular/router';\n\nimport { UsersService} from './users.service';\nimport { ErrorHandlerService } from '../../../error-handler.service';\nimport { Profile } from './users.metadata';\n\n\n@Component\n({\n\tselector: 'users-cmp',\n\ttemplateUrl: 'users.component.html'\n})\n\nexport class UsersComponent \n{\n\tusers: object[]\t\n\tclass = [[\"\",\"\",\"\",\"\",\"\"],[\"\",\"\",\"\",\"\",\"\"]]\n\tkey: string = 'id'\n\treverse: boolean = false\n\trow = 10\n\ttotalUsr: number\n\ttempID\t\n\tfilter: string\n\tmessage: string\n\n\tconstructor(private usersService: UsersService, private errorHandlerService: ErrorHandlerService){}\t\n\n\tngOnInit()\n\t{\t\t\n\t\tthis.message = \"\"\t\t\t\n\t\tthis.usersService\n\t\t.getAll()\n\t\t.subscribe( data => \n\t\t\t{\t\t\t\t\n\t\t\t\tthis.users = data['users']\n\t\t\t\tthis.totalUsr = this.users.length\n\t\t\t},(error: HttpErrorResponse) =>\n\t\t\t{\n\t\t\t\tthis.errorHandlerService.handleError(error)\n\t\t\t});\t\t\t\t\n\t}\t\n\n\t\n\tsort(key, id: number)\n\t{\t\t\t\t\n\t\tthis.key = key;\n\t\tthis.reverse = !this.reverse;\n\t\tif(this.class[0][id] == \"\" || this.class[0][id] == \"-asc\")\n\t\t{\n\t\t\tthis.class[0][id] = \"-desc\"\n\t\t}\n\t\telse if(this.class[0][id] == \"-desc\")\n\t\t{\n\t\t\tthis.class[0][id] = \"-asc\"\n\t\t}\t\t\n\t\tthis.class[1][this.tempID] = \"\"\n\t\tthis.class[1][id] = \"active\"\n\t\tthis.tempID = id\t\t\n\t}\n\n\tmanageRow(length: number)\n\t{\t\t\n\t\tthis.row = length\n\t\tthis.selecTag()\n\t}\n\tp: number = 1;\n\n\tselecTag()\n\t{\n\t\tvar class_name = document.getElementById(\"selectList\").className\n\t\tif(class_name == \"dropdown-menu\")\n\t\t{\n\t\t\tdocument.getElementById(\"selectList\").className += \" show\"\n\t\t}\n\t\tif(class_name == \"dropdown-menu show\")\n\t\t{\n\t\t\tdocument.getElementById(\"selectList\").className = \"dropdown-menu\"\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router }    from '@angular/router';\nimport { environment } from './../../../../environments/environment'; \n\n\n\n\n@Injectable()\nexport class UsersService\n{\n\trouteID: string\n\n\tconstructor ( private http: HttpClient, private cookieService: CookieService, private router: Router ){}\n\tprivate baseUrl = environment.backend_uri;\n\n\tgetAll()\n\t{\t\t\n\t\treturn this.http.get(`${this.baseUrl}/users`, \n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\t\t\t\n\t}\n\n\tprivate Headers()\n\t{\n\t\tif(this.cookieService.get('token'))\n\t\t{\t\t\t\n\t\t\treturn new HttpHeaders().set('x-access-token', this.cookieService.get('token'))\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.cookieService.deleteAll()\n\t\t\tthis.router.navigate(['/login']);\n\t\t}\n\t}\t\n\t\n\t\n}\n","import { Injectable } from '@angular/core';\nimport { Router }    from '@angular/router';\n\n@Injectable()\nexport class ErrorHandlerService\n{\t\n\n\tconstructor(private route: Router){}\n\n\thandleError(error: object)\n  {\t\t\t\t\n    console.error(error);\n\t\tif(error['error'].message == \"your token has been expired\" && error['status'] == 500)\n\t\t{\t\t\t\n\t\t\tthis.route.navigate(['/login'])\t\t\n\t\t}\n\t\telse if(error['status'] == 500 && error['error'].message == \"Internal Server Error\")\n\t\t{\n\t\t\tthis.route.navigate(['/InternalServerError'])\n\t\t}\n\t\telse if(error['status'] == 404)\n\t\t{\n\t\t\tthis.route.navigate(['/PageNotFound'])\n\t\t}\n\t}\n}\n","import { Injectable }     from '@angular/core';\nimport { CanActivate, CanActivateChild, ActivatedRouteSnapshot, RouterStateSnapshot, Router }    from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../environments/environment'\n\nimport { LoginService } from './login/login.service';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n@Injectable()\nexport class AuthGuard implements CanActivate \n{\n\n\tconstructor( private loginService: LoginService, private router: Router, private cookieService: CookieService, private http: HttpClient ){}\n  private baseUrl = environment.backend_uri;\n\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean>\n  {\n    if('data' in route && route.data.accessUrl != undefined){\n      let redirUrl = state.url;\n      let accessUrl: string = route.data.accessUrl\n      return this.checkLogin(accessUrl, redirUrl);   \n    } \n    else {\n      return of(true);\n    }\n  }\n\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean>\n  {\n    return this.canActivate(route, state);\n  }\n\n  checkLogin(accessUrl: string, redirUrl: string): Observable<boolean> \n  {\n    if (this.cookieService.check(\"token\"))\n    {\n      return this.loginService.hasUrlAccess(accessUrl).pipe(map( response => {\n        console.log('access to',accessUrl,':',response);\n        return response;\n      }));\n    }\n    else\n    {\n      this.loginService.redirectUrl = redirUrl;\n      this.router.navigate(['/login']);\n      return of(false);\n    }\n  }\n\n}\n","module.exports = \"<div class=\\\"navbar-header\\\">\\n\\t<a class=\\\"navbar-minimalize minimalize-styl-2 btn btn-primary \\\" (click)=\\\"manage_sidebar()\\\"><i class=\\\"fa fa-bars\\\"></i></a>\\n</div>\\n<ul class=\\\"nav navbar-top-links navbar-right\\\">\\n    <li>\\n        <span class=\\\"m-r-sm text-muted welcome-message\\\">Welcome to Nightowl Class Room Control.</span>\\n    </li>\\n    <li class=\\\"dropdown\\\">\\n    <li>\\n        <a (click) = \\\"Logout()\\\">\\n            <i class=\\\"fa fa-sign-out\\\"></i> Log out\\n        </a>\\n        \\n    </li>\\n    <li>\\n        &emsp;&emsp;\\n    </li>\\n</ul>\\n\\n\"","import { Component } from '@angular/core'\nimport { Router } from '@angular/router';\n\nimport { ContentHeaderService } from './content-header.service';\nimport { SessionService } from '../../session.service';\nimport * as $ from 'jquery'\ndeclare var $: any;\n\n@Component\n({\n\tselector: 'content-header-cmp',\n\ttemplateUrl: './content-header.component.html'\n})\n\nexport class ContentHeaderComponent \n{\n\tconstructor(private router: Router, private contentHeaderService: ContentHeaderService, private sessionService: SessionService) { }\n  Logout() \n\t{\n\t\tvar data: object\n\t\tthis.contentHeaderService.logout(data)\n\t\t.subscribe( () =>\n\t\t{\n\t\t\tthis.sessionService.deleteToken()\t\t\n\t\t\tthis.router.navigate(['/login']);\n\t\t})\n  \t}\n\n  manage_sidebar()\n  {\n    $(\"#sidebar\").toggleClass('active');\n    $(\"#page-wrapper\").toggleClass('nomenu');\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport { ContentHeaderService } from './content-header.service';\n\nimport { ContentHeaderComponent } from './content-header.component';\nimport { SessionService } from '../../session.service';\n\n@NgModule\n({\n    imports: [ RouterModule, CommonModule ],\n    declarations: [ ContentHeaderComponent ],\n    exports: [ ContentHeaderComponent ],\n    providers: [CookieService, ContentHeaderService,SessionService]\n})\n\nexport class ContentHeaderModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router }    from '@angular/router';\nimport { environment } from '../../../environments/environment'\n\n\n@Injectable()\nexport class ContentHeaderService\n{\n\n\n\tconstructor ( private http: HttpClient, private cookieService: CookieService, private router: Router ){}\n\tprivate baseUrl = environment.backend_uri;\n\n\tlogout(data)\n\t{\t\t\t\t\n\t\treturn this.http.post(`${this.baseUrl}/logout`, data,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\n\t}\n\n\tprivate Headers()\n\t{\n\t\tif(this.cookieService.get('token'))\n\t\t{\n\t\t\treturn new HttpHeaders().set('x-access-token', this.cookieService.get('token'))\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconsole.log(\"token is missing\")\n\t\t\tthis.router.navigate(['/login']);\n\t\t}\n\t}\n}","module.exports = \" <div class=\\\"footer\\\">   \\n    <div>\\n        <strong>Copyright</strong> Nightowl Company &copy; 2017-2018\\n    </div>\\n</div>\\n\\n\"","import { Component } from '@angular/core'\n\n@Component\n({\n\tselector: 'footer-cmp',\n\ttemplateUrl: './footer.component.html'\n})\n\nexport class FooterComponent \n{\n\t\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { FooterComponent } from './footer.component';\n\n@NgModule({\n    imports: [ RouterModule, CommonModule ],\n    declarations: [ FooterComponent ],\n    exports: [ FooterComponent ]\n})\n\nexport class FooterModule {}\n","module.exports = \"<div class=\\\"row wrapper border-bottom white-bg page-heading\\\">\\n    <div class=\\\"col-lg-10\\\">\\n        <h2>{{title}}</h2>\\n        <ol class=\\\"breadcrumb\\\">\\n            <li *ngFor=\\\"let data of breadcrumb\\\" >\\n                <a (click) = \\\"navigate(data['path'])\\\" >{{data['name']}}</a>\\n            </li>           \\n        </ol>\\n    </div>\\n    <div class=\\\"col-lg-2\\\">\\n    </div>\\n</div>\\n\\n\"","import { Component, DoCheck } from '@angular/core'\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n\nimport { NavBarService } from './navbar.service';\n\n@Component\n({\n\tselector: 'navbar-cmp',\n\ttemplateUrl: './navbar.component.html'\n})\n\nexport class NavbarComponent implements DoCheck\n{\n\tconstructor( private route: ActivatedRoute, private cookieService: CookieService, private router: Router, private navbarService: NavBarService) {}\n\tbreadcrumb = []\n\tpath = ''\n\ttitle: string\n\n\tngDoCheck()\n\t{\t\t\t\t\t\n\t\tif(this.path == '')\n\t\t{\t\t\t\t\t\t\n\t\t\tvar url = location.hash\t\n\t\t\tif(url.indexOf('home/admin') != -1)\n\t\t\t{\t\t\t\t\n\t\t\t\tthis.breadcrumb = [{'name': 'Home', path: 'admin/users'}]\t\t\t\t\n\t\t\t}\t\t\t\t\t\t\n\t\t\telse\n\t\t\t{\t\t\t\t\n\t\t\t\tthis.breadcrumb = [{'name': 'Home', path: 'users'}]\t\n\t\t\t}\t\t\t\t\t\n\t\t\tif(url.indexOf('groupMember') != -1)\n\t\t\t{\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\tif(url.indexOf('home/admin') != -1)\n\t\t\t\t{\t\t\t\t\t\n\t\t\t\t\tthis.navbarService.GetGroupDetail(url.slice(26,url.length))\n\t\t\t\t\t.subscribe( data =>\n\t\t\t\t\t{\t\t\t\t\t\n\t\t\t\t\t\tconsole.log(data)\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tthis.breadcrumb.push({'name': 'Groups', 'path': 'admin/groups'}, {'name': data['data'].name, 'path': ''})\n\t\t\t\t\t\tthis.title = data['data'].name\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t},(error: HttpErrorResponse) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.handleError(error)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.navbarService.GetGroupDetail(url.slice(19,url.length))\n\t\t\t\t\t.subscribe( data =>\n\t\t\t\t\t{\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tthis.breadcrumb.push({'name': 'Groups', 'path': 'groups'}, {'name': data['data'].name, 'path': ''})\n\t\t\t\t\t\tthis.title = data['data'].name\t\t\t\t\t\t\n\t\t\t\t\t},(error: HttpErrorResponse) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.handleError(error)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(url.indexOf('roomAccess') != -1)\n\t\t\t{\n\t\t\t\tif(url.indexOf('home/admin') != -1)\n\t\t\t\t{\n\t\t\t\t\tthis.navbarService.GetRoomDetail(url.slice(24,url.length))\n\t\t\t\t\t.subscribe( data =>\n\t\t\t\t\t{\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tthis.breadcrumb.push({'name': 'Rooms', 'path': 'admin/rooms'}, {'name': data['data'].name, 'path': ''})\n\t\t\t\t\t\tthis.title = data['data'].name\t\t\t\t\t\t\n\n\t\t\t\t\t},(error: HttpErrorResponse) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.handleError(error)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\n\t\t\t\t\tthis.navbarService.GetRoomDetail(url.slice(24,url.length))\n\t\t\t\t\t.subscribe( data =>\n\t\t\t\t\t{\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tthis.breadcrumb.push({'name': 'Rooms', 'path': 'rooms'}, {'name': data['data'].name, 'path': ''})\n\t\t\t\t\t\tthis.title = data['data'].name\t\t\t\t\t\t\n\n\t\t\t\t\t},(error: HttpErrorResponse) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.handleError(error)\n\t\t\t\t\t})\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t\telse\n\t\t\t{\t\t\t\t\n\t\t\t\tif(url.indexOf('home/admin') != -1)\n\t\t\t\t{\t\t\t\t\t\n\t\t\t\t\tthis.breadcrumb.push({'name': url.slice(13,url.length)[0].toUpperCase() + url.slice(14,url.length), 'path': url.slice(7, url.length)})\n\t\t\t\t\tthis.title = url.slice(13,url.length)[0].toUpperCase() + url.slice(14,url.length)\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\t\t\t\t\t\t\t\t\n\t\t\t\t\tthis.breadcrumb.push({'name': url.slice(7,url.length)[0].toUpperCase() + url.slice(8,url.length), 'path': url.slice(7, url.length)})\n\t\t\t\t\tthis.title = url.slice(7,url.length)[0].toUpperCase() + url.slice(8,url.length)\t\t\t\t\t\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t\tthis.path = location.hash\n\t\t}\t\t\n\t\telse if(this.path != location.hash)\n\t\t{\n\t\t\tvar url = location.hash\t\n\t\t\tif(url.indexOf('home/admin') != -1)\n\t\t\t{\n\t\t\t\tthis.breadcrumb = [{'name': 'Home', path: 'admin/users'}]\t\n\t\t\t}\t\t\t\t\t\t\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.breadcrumb = [{'name': 'Home', path: 'users'}]\t\n\t\t\t}\t\t\n\t\t\tvar id = this.route.snapshot.paramMap.get('id')\t\t\t\n\t\t\tif(url.indexOf('groupMember') != -1)\n\t\t\t{\n\t\t\t\tif(url.indexOf('home/admin') != -1)\n\t\t\t\t{\n\t\t\t\t\tthis.navbarService.GetGroupDetail(url.slice(25,url.length))\n\t\t\t\t\t.subscribe( data =>\n\t\t\t\t\t{\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tthis.breadcrumb.push({'name': 'Groups', 'path': 'admin/groups'}, {'name': data['data'].name, 'path': ''})\n\t\t\t\t\t\tthis.title = data['data'].name\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t},(error: HttpErrorResponse) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.handleError(error)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.navbarService.GetGroupDetail(url.slice(19,url.length))\n\t\t\t\t\t.subscribe( data =>\n\t\t\t\t\t{\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tthis.breadcrumb.push({'name': 'Groups', 'path': 'groups'}, {'name': data['data'].name, 'path': ''})\n\t\t\t\t\t\tthis.title = data['data'].name\t\t\t\t\t\t\n\t\t\t\t\t},(error: HttpErrorResponse) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.handleError(error)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(url.indexOf('roomAccess') != -1)\n\t\t\t{\n\t\t\t\tif(url.indexOf('home/admin') != -1)\n\t\t\t\t{\n\t\t\t\t\tthis.navbarService.GetRoomDetail(url.slice(24,url.length))\n\t\t\t\t\t.subscribe( data =>\n\t\t\t\t\t{\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tthis.breadcrumb.push({'name': 'Rooms', 'path': 'admin/rooms'}, {'name': data['data'].name, 'path': ''})\n\t\t\t\t\t\tthis.title = data['data'].name\t\t\t\t\t\t\n\n\t\t\t\t\t},(error: HttpErrorResponse) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.handleError(error)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\t\t\t\t\t\n\t\t\t\t\tthis.navbarService.GetRoomDetail(url.slice(18,url.length))\n\t\t\t\t\t.subscribe( data =>\n\t\t\t\t\t{\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tthis.breadcrumb.push({'name': 'Rooms', 'path': 'rooms'}, {'name': data['data'].name, 'path': ''})\n\t\t\t\t\t\tthis.title = data['data'].name\t\t\t\t\t\t\n\n\t\t\t\t\t},(error: HttpErrorResponse) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.handleError(error)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(url.indexOf('home/admin') != -1)\n\t\t\t\t{\t\t\t\t\t\n\t\t\t\t\tthis.breadcrumb.push({'name': url.slice(13,url.length)[0].toUpperCase() + url.slice(14,url.length), 'path': url.slice(7, url.length)})\n\t\t\t\t\tthis.title = url.slice(13,url.length)[0].toUpperCase() + url.slice(14,url.length)\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\t\t\t\t\t\n\t\t\t\t\tthis.breadcrumb.push({'name': url.slice(7,url.length)[0].toUpperCase() + url.slice(8,url.length), 'path': url.slice(7, url.length)})\n\t\t\t\t\tthis.title = url.slice(7,url.length)[0].toUpperCase() + url.slice(8,url.length)\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.path = location.hash\n\t\t}\n\t}\n\n\tnavigate(path: string)\n\t{\n\t\tif(path != '' || path != null)\n\t\t{\n\t\t\tthis.router.navigate(['home/'+path])\n\t\t}\n\t}\n\n\thandleError(error: object)\n\t{\t\t\t\t\n\t\tif(error['error'].message == \"your token has been expired\" && error['status'] == 500)\n\t\t{\t\t\t\n\t\t\tthis.router.navigate(['/login'])\t\t\n\t\t}\n\t\telse if(error['status'] == 500 && error['error'].message == \"Internal Server Error\")\n\t\t{\n\t\t\tthis.router.navigate(['/InternalServerError'])\n\t\t}\n\t\telse if(error['status'] == 404)\n\t\t{\n\t\t\tthis.router.navigate(['/PageNotFound'])\n\t\t}\n\t}\t\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { NavbarComponent } from './navbar.component';\nimport { NavBarService } from './navbar.service';\n@NgModule({\n    imports: [ RouterModule, CommonModule ],\n    declarations: [ NavbarComponent ],\n    exports: [ NavbarComponent ],\n    providers: [NavBarService ]\n})\n\nexport class NavbarModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router }    from '@angular/router';\nimport { environment } from '../../../environments/environment'\n\n\n@Injectable()\nexport class NavBarService\n{\n\n\n\tconstructor ( private http: HttpClient, private cookieService: CookieService, private router: Router ){}\n\tprivate baseUrl = environment.backend_uri;\n\n\tGetGroupDetail(id: string)\n\t{\n\t\treturn this.http.get(`${this.baseUrl}/groupDetails/${id}`,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\n\t}\n\n\tGetRoomDetail(id: string)\n\t{\n\t\treturn this.http.get(`${this.baseUrl}/roomDetails/${id}`,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\n\t}\n\n\tprivate Headers()\n\t{\n\t\tif(this.cookieService.get('token'))\n\t\t{\n\t\t\treturn new HttpHeaders().set('x-access-token', this.cookieService.get('token'))\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconsole.log(\"token is missing\")\n\t\t\tthis.router.navigate(['/login']);\n\t\t}\n\t}\n}","module.exports = \"<li class=\\\"nav-header\\\">\\n    <div class=\\\"dropdown profile-element\\\"> \\n        <span>\\n            <img alt=\\\"image\\\" class=\\\"img-circle sidebar-header\\\" id=\\\"user_photo\\\" />\\n        </span>\\n        <a data-toggle=\\\"dropdown\\\" class=\\\"dropdown-toggle\\\" (click)=\\\"selecTag()\\\">\\n            <span class=\\\"clear\\\"> \\n                <span class=\\\"block m-t-xs\\\">\\n                    <strong id = \\\"user_name\\\" class=\\\"font-bold\\\"></strong>                   \\n                </span> \\n                <span class=\\\"text-muted text-xs block\\\">\\n                  <span class=\\\"icon fa fa-cog\\\"></span><span class='text'>Profile</span><b class=\\\"caret\\\"></b>\\n                </span> \\n            </span> \\n        </a>\\n        <ul id=\\\"selectList-sd\\\" class=\\\"dropdown-menu animated fadeInRight m-t-xs\\\">\\n            <li>\\n                <a data-toggle=\\\"modal\\\" href=\\\"#modal-users\\\" (click)=\\\"selecTag()\\\">Edit Profile</a>\\n            </li>\\n            <li>\\n                <a data-toggle=\\\"modal\\\" href=\\\"#modal-users2\\\" (click)=\\\"selecTag()\\\">Change Password</a>\\n            </li>          \\n        </ul>\\n    </div>\\n    <div class=\\\"logo-element\\\">\\n    N.S.\\n    </div>\\n</li>\\n\"","import { Component } from '@angular/core'\nimport { FormBuilder, FormGroup, Validators } \tfrom '@angular/forms';\n\n\nimport { SidebarHeadersService } from './sidebar-header.service';\n\n@Component\n({\n\tselector: 'sidebar-header-cmp',\n\ttemplateUrl: './sidebar-header.component.html'\n})\n\nexport class SidebarHeaderComponent \n{\n\n\tFname: string\n\tLname: string\n\tgroup_name: string\n\n\tmodalForm: FormGroup\n\t\t\n\n\tconstructor(private sidebarHeadersService: SidebarHeadersService, private formBuilder: FormBuilder ){ this.createForm()}\n\n\tcreateForm()\n\t{\n\t\tthis.modalForm = this.formBuilder.group\n\t\t({\n\t\t    \t\t\t\n\t\t})    \n\t}\n\n\tngOnInit()\n\t{\t\n\t\tthis.sidebarHeadersService.get_user_info()\n\t\t.subscribe( data =>\n\t\t{\t\t\t\n\t\t\tthis.group_name = data['group_name']\n\t\t\tdocument.getElementById('user_name')['textContent'] = data['Fname']+\" \"+data['Lname']\t\t\t\n\t\t})\n\t\tthis.sidebarHeadersService.Get_user_photo()\n\t\t.subscribe( data =>\n\t\t{\n\t\t\tif(data['type'] == 'image/jpg')\n\t\t\t{\t\t\t\t\n\t\t\t\tthis.createImageFromBlob(data)\n\t\t\t}\n\t\t\telse{\n\t\t\t\tdocument.getElementById(\"user_photo\")['src'] = \"../assets/img/logo.png\"\n\t\t\t}\n\t\t})\n\t}\n\n\tselecTag()\n\t{\n\t\tvar class_name = document.getElementById(\"selectList-sd\").className\n\t\tif(class_name == \"dropdown-menu animated fadeInRight m-t-xs\")\n\t\t{\n\t\t\tdocument.getElementById(\"selectList-sd\").className += \" show\"\n\t\t}\n\t\tif(class_name == \"dropdown-menu animated fadeInRight m-t-xs show\")\n\t\t{\n\t\t\tdocument.getElementById(\"selectList-sd\").className = \"dropdown-menu animated fadeInRight m-t-xs\"\n\t\t}\n\t}\n\n\tcreateImageFromBlob(image: Blob) {\n\t   let reader = new FileReader();\n\t   reader.addEventListener(\"load\", () => {\t   \t\t\t     \n\t      document.getElementById(\"user_photo\")['src'] = reader.result;\n\t   }, false);\n\n\t   if (image) {\t   \t\t\n\t      reader.readAsDataURL(image);\n\t   }\n\t}\n\t\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { SidebarHeaderComponent } from './sidebar-header.component';\nimport { SidebarHeadersService } from './sidebar-header.service';\n\n@NgModule({\n    imports: [ RouterModule, CommonModule, ReactiveFormsModule ],\n    declarations: [ SidebarHeaderComponent ],\n    exports: [ SidebarHeaderComponent ],\n    providers: [SidebarHeadersService ]\n})\n\nexport class SidebarHeaderModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router }    from '@angular/router';\nimport { environment } from '../../../environments/environment'\nimport { Observable } from 'rxjs';\n\n\n\n@Injectable()\nexport class SidebarHeadersService\n{\n\trouteID: string\n\n\tconstructor ( private http: HttpClient, private cookieService: CookieService, private router: Router ){}\n\tprivate baseUrl = environment.backend_uri\n\n\tget_user_info()\n\t{\n\t\treturn this.http.get(`${this.baseUrl}/getUserProfile`,\n\t\t{\n\t\t\theaders: this.Headers()\n\t\t})\n\t}\n\n\tGet_user_photo(): Observable<Blob> \n\t{\n\t\treturn this.http.put(`${this.baseUrl}/account/photo`,{data:null},\n\t\t{\n\t\t\theaders: this.Headers(),\n\t\t\tresponseType: 'blob' \n\t\t})\n\t}\n\n\tprivate Headers()\n\t{\n\t\tif(this.cookieService.get('token'))\n\t\t{\n\t\t\treturn new HttpHeaders().set('x-access-token', this.cookieService.get('token'))\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconsole.log(\"token is missing\")\n\t\t\tthis.cookieService.delete(\"token\")\n\t\t\tthis.cookieService.delete('username');\n\t\t\tthis.cookieService.delete('userType');\n\t\t\tthis.router.navigate(['/login']);\n\t\t}\n\t}\t\n\t\n\t\n}\n","module.exports = \"<!-- <div class=\\\"ibox-title fullscreen\\\"> -->\\n    <!-- <h5>Basic Data Tables example with responsive plugin</h5> -->\\n    <!-- <div class=\\\"ibox-tools\\\"> -->\\n       <!--  <a class=\\\"collapse-link\\\">\\n            <i class=\\\"fa fa-chevron-up\\\"></i>\\n        </a>\\n        <a class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" href=\\\"#\\\">\\n            <i class=\\\"fa fa-wrench\\\"></i>\\n        </a>\\n        <ul class=\\\"dropdown-menu dropdown-user\\\">\\n            <li><a href=\\\"#\\\">Config option 1</a>\\n            </li>\\n            <li><a href=\\\"#\\\">Config option 2</a>\\n            </li>\\n        </ul>\\n        <a class=\\\"fullscreen-link\\\">\\n            <i class=\\\"fa fa-expand\\\"></i>\\n        </a>\\n        <a class=\\\"close-link\\\">\\n            <i class=\\\"fa fa-times\\\"></i>\\n        </a> -->\\n    <!-- </div> -->\\n<!-- </div>  -->\"","import { Component } from '@angular/core'\n\n@Component\n({\n\tselector: 'table-header-cmp',\n\ttemplateUrl: './table-header.component.html'\n})\n\nexport class TableHeaderComponent\n{\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { TableHeaderComponent } from './table-header.component';\n\n@NgModule({\n    imports: [ RouterModule, CommonModule ],\n    declarations: [ TableHeaderComponent ],\n    exports: [ TableHeaderComponent ]\n})\n\nexport class TableHeaderModule {}\n","module.exports = \"<div *ngFor = \\\"let menuItem of menuItems\\\" class=\\\"nav\\\">\\n<li class=\\\"{{menuItem.status}}\\\" *ngIf = \\\"menuItem !== undefined\\\">\\n\\t<a \\n    [routerLink]=\\\"['/home/'+menuItem.path]\\\"\\n    [routerLinkActive]=\\\"menuItem.status\\\">\\n\\t\\t<i class=\\\"{{menuItem.icon}}\\\"></i> \\n\\t\\t<span class=\\\"nav-label\\\">{{menuItem.title}}</span>\\n\\t</a>\\n</li>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { RouteInfo } from './sidebar.metadata';\nimport { LoginService } from '../login/login.service';\n\n@Component\n({\n  selector: 'sidebar-cmp',\n  templateUrl: 'sidebar.component.html',\n})\n\nexport class SidebarComponent implements OnInit\n{\n  status = \"active\"\n  menuItems: RouteInfo[];  \n  navEnd: Observable<NavigationEnd>;\n\n  constructor(\n    private loginService: LoginService,\n    private activeRoute: ActivatedRoute,\n    private location: Location,\n    private router: Router,\n    private cookieService: CookieService\n  ) {\n    this.navEnd = this.router.events.pipe(\n      filter(evt => evt instanceof NavigationEnd)\n    ) as Observable<NavigationEnd>;\n  }\n  private addMenuItem(item, access){\n    if(access){\n      this.menuItems[item.order] = item;\n    }\n    else{\n      console.warn(\"Access denied for\", item);\n    }\n  }\n\n  ngOnInit()\n  {\n    this.menuItems = [];\n    let i: number = 0;\n    this.activeRoute.snapshot.routeConfig.children.forEach(route => {\n      if('data' in route && route.data.inMenu){\n        console.log(\"Checking access for\", route);\n        let access_check: Observable<boolean>;\n        let item = {\n          path: route.path,\n          order: i,\n          icon: route.data.icon,\n          title: route.data.title,\n          class: route.data.class,\n          status: '/home/'+route.path == this.location.path()?\"active\":\"\",\n        };\n        if('accessUrl' in route.data){\n          this.loginService.hasUrlAccess(route.data.accessUrl).subscribe(this.addMenuItem.bind(this, item));\n        }\n        else{\n          this.addMenuItem(item, true);\n        }\n        i+=1;\n      }\n    });\n    this.navEnd.subscribe(evt => {\n      this.menuItems.forEach(item => {\n        item.status = '/home/'+item.path == this.location.path()?\"active\":\"\"\n      });\n    });\n  }\n    \n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { SidebarComponent } from './sidebar.component';\n\n@NgModule({\n    imports: [ RouterModule, CommonModule ],\n    declarations: [ SidebarComponent ],\n    exports: [ SidebarComponent ]\n})\n\nexport class SidebarModule {}\n"],"sourceRoot":""}